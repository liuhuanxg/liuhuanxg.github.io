<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>devin&#39;s blog</title>
  
  <subtitle>vinya</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-04-28T09:25:47.268Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>devin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>index</title>
    <link href="http://example.com/2023/04/20/treasurebox/elasticsearch/xue-xi-bi-ji/index/"/>
    <id>http://example.com/2023/04/20/treasurebox/elasticsearch/xue-xi-bi-ji/index/</id>
    <published>2023-04-20T02:33:25.636Z</published>
    <updated>2023-04-28T09:25:47.268Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="title-学习笔记"><a href="#title-学习笔记" class="headerlink" title="title: 学习笔记"></a>title: 学习笔记</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;title-学习笔记&quot;&gt;&lt;a href=&quot;#title-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;title: 学习笔记&quot;&gt;&lt;/a&gt;title: 学习笔记&lt;/h2&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>index</title>
    <link href="http://example.com/2023/04/20/treasurebox/elasticsearch/index/"/>
    <id>http://example.com/2023/04/20/treasurebox/elasticsearch/index/</id>
    <published>2023-04-20T02:25:18.254Z</published>
    <updated>2023-04-28T09:25:47.261Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="title-ElasticSearch"><a href="#title-ElasticSearch" class="headerlink" title="title: ElasticSearch"></a>title: ElasticSearch</h2><h2 id="ElasticSearch知识整理"><a href="#ElasticSearch知识整理" class="headerlink" title="ElasticSearch知识整理"></a>ElasticSearch知识整理</h2><ul><li><a href="../%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/index/index.html">学习笔记</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;title-ElasticSearch&quot;&gt;&lt;a href=&quot;#title-ElasticSearch&quot; class=&quot;headerlink&quot; title=&quot;title: ElasticSearch&quot;&gt;&lt;/a&gt;title: ElasticSearch&lt;/h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python分析模块</title>
    <link href="http://example.com/2023/03/24/treasurebox/python/python-cheng-xu-cpu-shi-yong-lu-fen-xi/python-fen-xi-mo-kuai/"/>
    <id>http://example.com/2023/03/24/treasurebox/python/python-cheng-xu-cpu-shi-yong-lu-fen-xi/python-fen-xi-mo-kuai/</id>
    <published>2023-03-24T08:25:41.271Z</published>
    <updated>2023-04-28T09:25:47.124Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="title-python分析模块"><a href="#title-python分析模块" class="headerlink" title="title: python分析模块"></a>title: python分析模块</h2><p><strong>sampling</strong> profilers VS <strong>tracing</strong> profilers</p><p>tracingprofilers记录程序所调用的每个函数，然后在最后打印出报告。 samplingprofilers采用更加统计化的方法 - 他们每隔几毫秒记录程序的堆栈情况，然后报告结果。</p><p>使用sampling profilers而不是tracing profilers的主要原因是sampling profilers的开销较低。 如果每秒只抽取20或200个样本，那不会花费多少时间。 而且它们非常有效率 - 如果遇到严重的性能问题（比如80％的时间花费在1个慢速函数上），那么每秒200个样本通常就足以确定那个函数的问题所在了。</p><ul><li><p>cProfile: Python内置的分析工具，c语言编写。</p><ul><li><p>兼容性：python2/python3</p></li><li><p>文档：<a href="https://docs.python.org/zh-cn/3/library/profile.html">https://docs.python.org/zh-cn/3/library/profile.html</a></p></li><li><p>使用方式：通过cprofile启动python程序</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m cProfile -s cumtime sample.py</span><br></pre></td></tr></tbody></table></figure></li><li><p>优势：python内置分析器；</p></li><li><p>劣势：并不适合对多线程的长时间运行程序进行分析，默认只会对主线程进行分析，且分析方法是对正在运行的程序进行代码注入，会影响性能；</p></li></ul></li><li><p>memory_profiler：一个监控进程内存消耗的模块，也可以逐行分析 Python 程序的内存消耗。具体实现依赖 psutil 模块的纯 Python 模块。</p><ul><li><p>兼容性：python2/python3</p></li><li><p>文档：<a href="https://github.com/pythonprofilers/memory_profiler/blob/master/README.rst">https://github.com/pythonprofilers/memory_profiler/blob/master/README.rst</a></p><p>实践例子：<a href="https://programming.insutanto.net/2020-03/python-memory-profile/python_memory_profiler">https://programming.insutanto.net/2020-03/python-memory-profile/python_memory_profiler</a></p></li><li><p>使用方式：使用memory_profile启动python程序或在程序中import装饰器，需要改动代码；</p></li><li><p>优势：可以针对代码级别进行内存消耗的分析；</p></li><li><p>劣势：对代码具有侵入性；</p></li></ul></li><li><p>PyFlame: Uber开源的性能分析工具，使用C++实现，利用ptrace系统调用来收集分析信息；</p><ul><li><p>兼容性：python2/python3</p></li><li><p>文档：<a href="https://github.com/uber/pyflame">https://github.com/uber/pyflame</a></p><p>实践例子：<a href="https://meteorix.github.io/2019/05/24/pyflame/">https://meteorix.github.io/2019/05/24/pyflame/</a></p></li><li><p>使用方式：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># attach to process PID 1024 for duration of 60 seconds and sample every 0.05 seconds</span></span><br><span class="line">$ pyflame -s 60 -r 0.05 -p 1024</span><br><span class="line">....</span><br><span class="line"> </span><br><span class="line">$ pyflame --rate=0.005 -o profile.txt -t python sample.py</span><br><span class="line">Execution time : 1.97 sec</span><br><span class="line"> </span><br><span class="line"><span class="comment"># convert profile.txt to a flame graph</span></span><br><span class="line">flamegraph.pl &amp;lt; profile.txt &gt; profile.svg</span><br></pre></td></tr></tbody></table></figure></li><li><p>优势：通过attach的方式来分析进程，对代码无侵入性，采样流程由单独的进程负责，不会影响现有进程运行，支持多线程/进程；</p></li><li><p>劣势：不支持OSX/Windows平台，而且项目已经不再维护了，使用起来可能会有坑；</p></li></ul></li><li><p>Py-spy: 使用Rust编写的python性能分析工具，实现逻辑是通过系统调用读取python程序的内存，通过解析PyFrameObject结构来获取堆栈信息。</p><ul><li><p>兼容性：python2/python3</p></li><li><p>文档：<a href="https://github.com/benfred/py-spy">https://github.com/benfred/py-spy</a></p></li><li><p>使用方式：使用attach的方式进行，支持record(记录)，top(列出耗时的函数)，dump(导出程序的堆栈信息)</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">py-spy record -o profile.svg --pid 12345</span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">py-spy record -o profile.svg -- python myprogram.py</span><br><span class="line"></span><br><span class="line">py-spy top --pid 12345</span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">py-spy top -- python myprogram.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">py-spy dump --pid 12345</span><br></pre></td></tr></tbody></table></figure></li><li><p>优势：通过attach的方式来分析进程，对代码无侵入性，采样流程由单独的进程负责，不会影响现有进程运行，支持多线程/进程，支持功能较多，且项目一直在持续维护；</p></li><li><p>劣势：需要使用sudo权限进行attach或者修改全局的系统设置；</p></li></ul></li></ul><p>其他：</p><ul><li><p>pyroscope：一个golang编写的持续性能分析平台，整合了各种分析工具和前端显示；</p></li><li><p>github: <a href="https://github.com/pyroscope-io/pyroscope">https://github.com/pyroscope-io/pyroscope</a> </p><p>中文介绍：<a href="https://github.com/pyroscope-io/pyroscope/blob/main/translations/README.ch.md">https://github.com/pyroscope-io/pyroscope/blob/main/translations/README.ch.md</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;title-python分析模块&quot;&gt;&lt;a href=&quot;#title-python分析模块&quot; class=&quot;headerlink&quot; title=&quot;title: python分析模块&quot;&gt;&lt;/a&gt;title: python分析模块&lt;/h2&gt;&lt;p&gt;&lt;strong</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>suggester</title>
    <link href="http://example.com/2023/03/22/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/9.suggester/"/>
    <id>http://example.com/2023/03/22/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/9.suggester/</id>
    <published>2023-03-22T13:06:21.415Z</published>
    <updated>2023-04-28T09:25:47.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搜索建议Suggester"><a href="#搜索建议Suggester" class="headerlink" title="搜索建议Suggester"></a>搜索建议Suggester</h2><ol><li><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><blockquote><p>搜索一般都会要求具有“搜索推荐”或者叫“搜索补全”的功能，即在用户输入搜索的过程中，进行自动补全或者纠错。以此来提高搜索文档的匹配精准度，进而提升用户的搜索体验，这就是Suggest。</p></blockquote></li><li><h4 id="四种Suggester"><a href="#四种Suggester" class="headerlink" title="四种Suggester"></a>四种<code>Suggester</code></h4><ol><li><p><strong>term suggester</strong>：term suggester正如其名，只基于tokenizer之后的单个term去匹配建议词，并不会考虑多个term之间的关系</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST &lt;index&gt;/_search</span><br><span class="line"><span class="punctuation">{</span> </span><br><span class="line">  <span class="attr">"suggest"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"&lt;suggest_name&gt;"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"text"</span><span class="punctuation">:</span> <span class="string">"&lt;search_content&gt;"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"term"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"suggest_mode"</span><span class="punctuation">:</span> <span class="string">"&lt;suggest_mode&gt;"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"field"</span><span class="punctuation">:</span> <span class="string">"&lt;field_name&gt;"</span></span><br><span class="line">      <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure><p><strong>Options：</strong></p><ul><li><strong>text</strong>：用户搜索的文本</li><li><strong>field</strong>：要从哪个字段选取推荐数据</li><li><strong>analyzer</strong>：使用哪种分词器</li><li><strong>size</strong>：每个建议返回的最大结果数</li><li><strong>sort</strong>：如何按照提示词项排序，参数值只可以是以下两个枚举：<ul><li><strong>score</strong>：分数&gt;词频&gt;词项本身</li><li><strong>frequency</strong>：词频&gt;分数&gt;词项本身</li></ul></li><li><strong>suggest_mode</strong>：搜索推荐的推荐模式，参数值亦是枚举：<ul><li>missing：默认值，仅为不在索引中的词项生成建议词</li><li>popular：仅返回与搜索词文档词频或文档词频更高的建议词</li><li>always：根据 建议文本中的词项 推荐 任何匹配的建议词</li></ul></li><li><strong>max_edits</strong>：可以具有最大偏移距离候选建议以便被认为是建议。只能是1到2之间的值。任何其他值都将导致引发错误的请求错误。默认为2</li><li><strong>prefix_length</strong>：前缀匹配的时候，必须满足的最少字符</li><li><strong>min_word_length</strong>：最少包含的单词数量</li><li><strong>min_doc_freq</strong>：最少的文档频率</li><li><strong>max_term_freq</strong>：最大的词频</li></ul></li><li><p><strong>phrase suggester</strong></p><blockquote><p>phrase suggester和term suggester相比，对建议的文本会参考上下文，也就是一个句子的其他token，不只是单纯的token距离匹配，它可以基于共生和频率选出更好的建议。</p></blockquote><p><strong>注意</strong>：purase需要先创建Mapping</p><p><strong>Options</strong>：</p><ul><li>real_word_error_likelihood： 此选项的默认值为 0.95。此选项告诉 Elasticsearch 索引中 5% 的术语拼写错误。这意味着随着这个参数的值越来越低，Elasticsearch 会将越来越多存在于索引中的术语视为拼写错误，即使它们是正确的</li><li>max_errors：为了形成更正，最多被认为是拼写错误的术语的最大百分比。默认值为 1</li><li>confidence：默认值为 1.0，最大值也是。该值充当与建议分数相关的阈值。只有得分超过此值的建议才会显示。例如，置信度为 1.0 只会返回得分高于输入短语的建议</li><li>collate：告诉 Elasticsearch 根据指定的查询检查每个建议，以修剪索引中不存在匹配文档的建议。在这种情况下，它是一个匹配查询。由于此查询是模板查询，因此搜索查询是当前建议，位于查询中的参数下。可以在查询下的“params”对象中添加更多字段。同样，当参数“prune”设置为true时，我们将在响应中增加一个字段“collate_match”，指示建议结果中是否存在所有更正关键字的匹配</li><li>direct_generator：phrase suggester使用候选生成器生成给定文本中每个项可能的项的列表。单个候选生成器类似于为文本中的每个单独的调用term suggester。生成器的输出随后与建议候选项中的候选项结合打分。目前只支持一种候选生成器，即direct_generator。建议API接受密钥直接生成器下的生成器列表；列表中的每个生成器都按原始文本中的每个项调用。</li></ul></li><li><p><strong>completion suggester</strong></p><blockquote><p>自动补全，自动完成，支持三种查询【前缀查询（prefix）模糊查询（fuzzy）正则表达式查询（regex)】 ，主要针对的应用场景就是”Auto Completion”。 此场景下用户每输入一个字符的时候，就需要即时发送一次查询请求到后端查找匹配项，在用户输入速度较高的情况下对后端响应速度要求比较苛刻。因此实现上它和前面两个Suggester采用了不同的数据结构，索引并非通过倒排来完成，而是将analyze过的数据编码成FST和索引一起存放。对于一个open状态的索引，FST会被ES整个装载到内存里的，进行前缀查找速度极快。但是FST只能用于前缀查找，这也是Completion Suggester的局限所在。</p></blockquote><ol><li>completion：es的一种特有类型，专门为suggest提供，基于内存，性能很高。</li><li>prefix query：基于前缀查询的搜索提示，是最常用的一种搜索推荐查询。<ul><li>prefix：客户端搜索词</li><li>field：建议词字段</li><li>size：需要返回的建议词数量（默认5）</li><li>skip_duplicates：是否过滤掉重复建议，默认false</li></ul></li><li>fuzzy query<ul><li>fuzziness：允许的偏移量，默认auto</li><li>transpositions：如果设置为true，则换位计为一次更改而不是两次更改，默认为true。</li><li>min_length：返回模糊建议之前的最小输入长度，默认 3</li><li>prefix_length：输入的最小长度（不检查模糊替代项）默认为 1</li><li>unicode_aware：如果为true，则所有度量（如模糊编辑距离，换位和长度）均以Unicode代码点而不是以字节为单位。这比原始字节略慢，因此默认情况下将其设置为false。</li></ul></li><li>regex query：可以用正则表示前缀，不建议使用</li></ol></li><li><p><strong>context suggester</strong></p><blockquote><p>完成建议者会考虑索引中的所有文档，但是通常来说，我们在进行智能推荐的时候最好通过某些条件过滤，并且有可能会针对某些特性提升权重。</p></blockquote><ol><li>contexts：上下文对象，可以定义多个<ul><li>name：<code>context</code>的名字，用于区分同一个索引中不同的<code>context</code>对象。需要在查询的时候指定当前name</li><li>type：<code>context</code>对象的类型，目前支持两种：category和geo，分别用于对suggest  item分类和指定地理位置。</li><li>boost：权重值，用于提升排名</li></ul></li><li>path：如果没有path，相当于在PUT数据的时候需要指定context.name字段，如果在Mapping中指定了path，在PUT数据的时候就不需要了，因为           Mapping是一次性的，而PUT数据是频繁操作，这样就简化了代码。这段解释有木有很牛逼，网上搜到的都是官方文档的翻译，觉悟雷同。</li></ol></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;搜索建议Suggester&quot;&gt;&lt;a href=&quot;#搜索建议Suggester&quot; class=&quot;headerlink&quot; title=&quot;搜索建议Suggester&quot;&gt;&lt;/a&gt;搜索建议Suggester&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h4 id=&quot;概述&quot;&gt;&lt;a href=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>分析python程序CPU使用率案例</title>
    <link href="http://example.com/2023/03/22/treasurebox/python/python-cheng-xu-cpu-shi-yong-lu-fen-xi/fen-xi-python-cheng-xu-cpu-shi-yong-lu-an-li/"/>
    <id>http://example.com/2023/03/22/treasurebox/python/python-cheng-xu-cpu-shi-yong-lu-fen-xi/fen-xi-python-cheng-xu-cpu-shi-yong-lu-an-li/</id>
    <published>2023-03-22T09:26:02.499Z</published>
    <updated>2023-04-28T09:25:47.122Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分析python程序CPU使用率案例"><a href="#分析python程序CPU使用率案例" class="headerlink" title="分析python程序CPU使用率案例"></a>分析python程序CPU使用率案例</h2><ol><li><p>用到工具</p><ol><li>cProfile</li><li>line_profiler</li><li>pprofile</li><li>vprof</li></ol></li><li><p>示例代码</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">primes</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">elif</span> n &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    s = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>, n + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">            s.append(i)</span><br><span class="line">    mront = n ** <span class="number">0.5</span></span><br><span class="line">    half = (n + <span class="number">1</span>) / <span class="number">2</span> - <span class="number">1</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    m = <span class="number">3</span></span><br><span class="line">    <span class="keyword">while</span> m &lt;= mront:</span><br><span class="line">        <span class="keyword">if</span> s[i]:</span><br><span class="line">            j = (m * m - <span class="number">3</span>) / <span class="number">2</span></span><br><span class="line">            s[j] = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> j &lt; half:</span><br><span class="line">                s[j] = <span class="number">0</span></span><br><span class="line">                j += m</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        m = <span class="number">2</span> * i + <span class="number">3</span></span><br><span class="line">    l = [<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> x:</span><br><span class="line">            l.append(x)</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bechmark</span>():</span><br><span class="line">    start = time.time()</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> xrange(<span class="number">40</span>):</span><br><span class="line">        count = <span class="built_in">len</span>(primes(<span class="number">1000000</span>))</span><br><span class="line">    end = time.time()</span><br><span class="line">    <span class="built_in">print</span> <span class="string">"BechMark duration %r seconds, count:%r"</span> %(end- start, count)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    bechmark()</span><br></pre></td></tr></tbody></table></figure></li><li><p>cProfile</p><ol><li><p>安装：python自带</p></li><li><p>使用：python -m cProfile demo.py</p></li><li><p>运行结果分析</p><ol><li>结果参数说明：<ol><li>ncalls：执行次数</li><li>tottime：执行耗时</li><li>percall：平均每次执行耗时</li><li>cumtime：在此函数以及子函数执行期间的耗时</li><li>percall：cumtime/ncalls</li><li>filename:lineno：文件名和函数名</li></ol></li></ol></li><li><p>运行结果示例</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BechMark duration 19.009029865264893 seconds, count:78498</span><br><span class="line">         23139965 function calls in 19.010 seconds</span><br><span class="line"></span><br><span class="line">   Ordered by: standard name</span><br><span class="line">   </span><br><span class="line">   ncalls  tottime  percall  cumtime  percall filename:lineno(function)</span><br><span class="line">       40   14.327    0.358   18.846    0.471 demo.py:10(primes)</span><br><span class="line">        1    0.163    0.163   19.009   19.009 demo.py:39(bechmark)</span><br><span class="line">        1    0.001    0.001   19.010   19.010 demo.py:7(&lt;module&gt;)</span><br><span class="line">       40    0.000    0.000    0.000    0.000 {len}</span><br><span class="line"> 23139840    1.418    0.000    1.418    0.000 {method 'append' of 'list' objects}</span><br><span class="line">        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}</span><br><span class="line">       40    3.101    0.078    3.101    0.078 {range}</span><br><span class="line">        2    0.000    0.000    0.000    0.000 {time.time}</span><br></pre></td></tr></tbody></table></figure></li><li><p>将运行结果可视化展示：</p><ol><li><p>需要安装graphviz，mac安装：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新brew</span></span><br><span class="line">brew update </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装依赖</span></span><br><span class="line">brew install harfbuzz </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装graphviz</span></span><br><span class="line">brew install graphviz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装gprof2dot</span></span><br><span class="line">pip install gprof2dot</span><br></pre></td></tr></tbody></table></figure></li><li><p>使用：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 将执行结果导出到文件</span><br><span class="line">python -m cProfile -o output.pstats demo.py</span><br><span class="line"># 根据根据文件生成图片</span><br><span class="line">gprof2dot -f pstats output.pstats | dot -Tpng -o output.png</span><br></pre></td></tr></tbody></table></figure></li><li><p>分析结果</p><p><img src="/images/output.png" alt="output"></p></li><li><p>​其他示例：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import cProfile</span><br><span class="line">import re</span><br><span class="line">cProfile.run('re.compile("foo|bar")', 'restats')</span><br></pre></td></tr></tbody></table></figure></li><li><p>调用参数说明</p><ol><li>-o：将执行结果写入到文件中，而不是显示在控制台</li><li>-s：指定排序值方式以对输出进行排序。</li><li><code>python -m cProfile [-o output_file] [-s sort_order] myscript.py</code></li></ol></li></ol></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;分析python程序CPU使用率案例&quot;&gt;&lt;a href=&quot;#分析python程序CPU使用率案例&quot; class=&quot;headerlink&quot; title=&quot;分析python程序CPU使用率案例&quot;&gt;&lt;/a&gt;分析python程序CPU使用率案例&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>前缀-正则-模糊查询</title>
    <link href="http://example.com/2023/03/20/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/8.qian-zhui-zheng-ze-mo-hu-cha-xun/"/>
    <id>http://example.com/2023/03/20/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/8.qian-zhui-zheng-ze-mo-hu-cha-xun/</id>
    <published>2023-03-20T15:10:41.758Z</published>
    <updated>2023-04-28T09:25:47.270Z</updated>
    
    <content type="html"><![CDATA[<h2 id="其他查询"><a href="#其他查询" class="headerlink" title="其他查询"></a>其他查询</h2><ol><li><h3 id="前缀搜索prefix"><a href="#前缀搜索prefix" class="headerlink" title="前缀搜索prefix"></a>前缀搜索prefix</h3><ol><li><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>以xx开头，不计算相关度评分</p></li><li><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><ol><li>前缀匹配的是term，而不是field</li><li>前缀搜索的性能很差</li><li>前缀搜索没有缓存</li><li>前缀搜索时尽可能把前缀长度设置的更长</li></ol></li><li><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建索引</span></span><br><span class="line">PUT test</span><br><span class="line">{</span><br><span class="line">  <span class="string">"mappings"</span>: {</span><br><span class="line">    <span class="string">"_doc"</span>: {</span><br><span class="line">      <span class="string">"_all"</span>: {</span><br><span class="line">        <span class="string">"enabled"</span>: false</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"properties"</span>: {</span><br><span class="line">        <span class="string">"text"</span>: {</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">          <span class="string">"analyzer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">          <span class="string">"fields"</span>: {</span><br><span class="line">            <span class="string">"keyword"</span>: {</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">              <span class="string">"ignore_above"</span>: <span class="number">256</span></span><br><span class="line">            }</span><br><span class="line">          },</span><br><span class="line">          <span class="string">"index_prefixes"</span>: {</span><br><span class="line">            <span class="string">"min_chars"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="string">"max_chars"</span>: <span class="number">3</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先写入数据</span></span><br><span class="line">POST _bulk</span><br><span class="line">{<span class="string">"index"</span>:{<span class="string">"_index"</span>:<span class="string">"test"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="string">"1"</span>}}</span><br><span class="line">{<span class="string">"text"</span>:<span class="string">"城管打电话喊商贩去摆地摊"</span>}</span><br><span class="line">{<span class="string">"index"</span>:{<span class="string">"_index"</span>:<span class="string">"test"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="string">"2"</span>}}</span><br><span class="line">{<span class="string">"text"</span>:<span class="string">"笑果文化回应商贩老农去摆地摊"</span>}</span><br><span class="line">{<span class="string">"index"</span>:{<span class="string">"_index"</span>:<span class="string">"test"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="string">"3"</span>}}</span><br><span class="line">{<span class="string">"text"</span>:<span class="string">"老农耗时17年种出椅子树"</span>}</span><br><span class="line">{<span class="string">"index"</span>:{<span class="string">"_index"</span>:<span class="string">"test"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="string">"4"</span>}}</span><br><span class="line">{<span class="string">"text"</span>:<span class="string">"夫妻结婚30多年AA制，被城管抓"</span>}</span><br><span class="line">{<span class="string">"index"</span>:{<span class="string">"_index"</span>:<span class="string">"test"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="string">"5"</span>}}</span><br><span class="line">{<span class="string">"text"</span>:<span class="string">"黑人见义勇为组织抢劫反被铐住"</span>}</span><br><span class="line"></span><br><span class="line">GET test/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"prefix"</span>: {</span><br><span class="line">      <span class="string">"text"</span>: {</span><br><span class="line">        <span class="string">"value"</span>: <span class="string">"城管"</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>支持的参数：</p><ol><li><code>min_chars</code>：建立前缀索引时开始字符的最小长度，比如设置为2，表示从2个字符开始</li><li><code>max_chars</code>：建立前缀索引时开始字符的最大长度，比如设置为5，表示最大5个字符</li></ol></li></ol></li><li><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><ol><li><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><ol><li>通配符运算符是匹配一个或多个字符的占位符。例如，*通配符运算符匹配零个或多个字符。您可以将通配符运算符与其他字符结合使用以创建通配符模式。</li></ol></li><li><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ol><li><p>使用通配符查询，关键词：<code>wildcard</code></p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">PUT product_en</span><br><span class="line">{</span><br><span class="line">  <span class="string">"mappings"</span>: {</span><br><span class="line">    <span class="string">"_doc"</span>: {</span><br><span class="line">      <span class="string">"_all"</span>: {</span><br><span class="line">        <span class="string">"enabled"</span>: false</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"properties"</span>: {</span><br><span class="line">        <span class="string">"desc"</span>: {</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">          <span class="string">"fields"</span>: {</span><br><span class="line">            <span class="string">"keyword"</span>: {</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">              <span class="string">"ignore_above"</span>: <span class="number">256</span></span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"title"</span>: {</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">          <span class="string">"fields"</span>: {</span><br><span class="line">            <span class="string">"keyword"</span>: {</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">              <span class="string">"ignore_above"</span>: <span class="number">256</span></span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"tags"</span>: {</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">          <span class="string">"fields"</span>: {</span><br><span class="line">            <span class="string">"keyword"</span>: {</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">              <span class="string">"ignore_above"</span>: <span class="number">256</span></span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST /product_en/_bulk</span><br><span class="line">{ <span class="string">"index"</span>: { <span class="string">"_id"</span>: <span class="string">"1"</span>} }</span><br><span class="line">{ <span class="string">"title"</span>: <span class="string">"my english"</span>,<span class="string">"desc"</span> :  <span class="string">"shouji zhong de zhandouji"</span>,<span class="string">"price"</span> :  <span class="number">3999</span>, <span class="string">"tags"</span>: [ <span class="string">"xingjiabi"</span>, <span class="string">"fashao"</span>, <span class="string">"buka"</span>, <span class="string">"1"</span>]}</span><br><span class="line">{ <span class="string">"index"</span>: { <span class="string">"_id"</span>: <span class="string">"2"</span>} }</span><br><span class="line">{ <span class="string">"title"</span>: <span class="string">"xiaomi nfc phone"</span>,<span class="string">"desc"</span> :  <span class="string">"zhichi quangongneng nfc,shouji zhong de jianjiji"</span>,<span class="string">"price"</span> :  <span class="number">4999</span>, <span class="string">"tags"</span>: [ <span class="string">"xingjiabi"</span>, <span class="string">"fashao"</span>, <span class="string">"gongjiaoka"</span> , <span class="string">"asd2fgas"</span>]}</span><br><span class="line">{ <span class="string">"index"</span>: { <span class="string">"_id"</span>: <span class="string">"3"</span>} }</span><br><span class="line">{ <span class="string">"title"</span>: <span class="string">"nfc phone"</span>,<span class="string">"desc"</span> :  <span class="string">"shouji zhong de hongzhaji"</span>,<span class="string">"price"</span> :  <span class="number">2999</span>, <span class="string">"tags"</span>: [ <span class="string">"xingjiabi"</span>, <span class="string">"fashao"</span>, <span class="string">"menjinka"</span> , <span class="string">"as345"</span>]}</span><br><span class="line">{ <span class="string">"title"</span>: { <span class="string">"_id"</span>: <span class="string">"4"</span>} }</span><br><span class="line">{ <span class="string">"text"</span>: <span class="string">"xiaomi erji"</span>,<span class="string">"desc"</span> :  <span class="string">"erji zhong de huangmenji"</span>,<span class="string">"price"</span> :  <span class="number">999</span>, <span class="string">"tags"</span>: [ <span class="string">"low"</span>, <span class="string">"bufangshui"</span>, <span class="string">"yinzhicha"</span>, <span class="string">"4dsg"</span> ]}</span><br><span class="line">{ <span class="string">"index"</span>: { <span class="string">"_id"</span>: <span class="string">"5"</span>} }</span><br><span class="line">{ <span class="string">"title"</span>: <span class="string">"hongmi erji"</span>,<span class="string">"desc"</span> :  <span class="string">"erji zhong de kendeji"</span>,<span class="string">"price"</span> :  <span class="number">399</span>, <span class="string">"tags"</span>: [ <span class="string">"lowbee"</span>, <span class="string">"xuhangduan"</span>, <span class="string">"zhiliangx"</span> , <span class="string">"sdg5"</span>]}</span><br><span class="line"></span><br><span class="line">GET product_en/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"wildcard"</span>: {</span><br><span class="line">      <span class="string">"title"</span>: {</span><br><span class="line">        <span class="string">"value"</span>: <span class="string">"eng*ish"</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li></ol></li></ol></li><li><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><ol><li><h4 id="关键词：regex"><a href="#关键词：regex" class="headerlink" title="关键词：regex"></a>关键词：<code>regex</code></h4></li><li><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET product_en/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"regexp"</span>: {</span><br><span class="line">      <span class="string">"desc.keyword"</span>: {</span><br><span class="line">        <span class="string">"value"</span>: <span class="string">"zh~o"</span>,</span><br><span class="line">        <span class="string">"flags"</span>: <span class="string">"COMPLEMENT"</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="flags参数说明："><a href="#flags参数说明：" class="headerlink" title="flags参数说明："></a>flags参数说明：</h4><ol><li><p>ALL</p><blockquote><p>启用所有可选操作符。</p></blockquote></li><li><p>COMPLEMENT</p><blockquote><p>启用<del>操作符。可以使用</del>对下面最短的模式进行否定。例如</p><p>a~bc  # matches ‘adc’ and ‘aec’ but not ‘abc’</p></blockquote></li><li><p>INTERVAL</p><blockquote><p>启用&lt;&gt;操作符。可以使用&lt;&gt;匹配数值范围。例如</p><p>foo&lt;1-100&gt;    # matches ‘foo1’, ‘foo2’ … ‘foo99’, ‘foo100’</p><p>foo&lt;01-100&gt;   # matches ‘foo01’, ‘foo02’ … ‘foo99’, ‘foo100’</p></blockquote></li><li><p>INTERSECTION</p><blockquote><p>启用&amp;操作符，它充当AND操作符。如果左边和右边的模式都匹配，则匹配成功。例如:</p><p>aaa.+&amp;.+bbb  # matches ‘aaabbb’</p></blockquote></li><li><p>ANYSTRING</p><blockquote><p>启用@操作符。您可以使用@来匹配任何整个字符串。<br>您可以将@操作符与&amp;和~操作符组合起来，创建一个“everything except”逻辑。例如:</p><p>@&amp;~(abc.+)  # matches everything except terms beginning with ‘abc’</p></blockquote></li></ol></li></ol></li><li><h3 id="模糊查询-fuzzy"><a href="#模糊查询-fuzzy" class="headerlink" title="模糊查询 -fuzzy"></a>模糊查询 -fuzzy</h3><blockquote><p>混淆字符 (<strong>b</strong>ox → fox)</p><p>缺少字符 (<strong>b</strong>lack → lack)</p><p>多出字符 (sic → sic<strong>k</strong>)</p><p>颠倒次序 (a<strong>c</strong>t → <strong>c</strong>at)</p></blockquote><ol><li><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">GET &lt;index&gt;/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"fuzzy"</span>: {</span><br><span class="line">      <span class="string">"&lt;field&gt;"</span>: {</span><br><span class="line">        <span class="string">"value"</span>: <span class="string">"&lt;keyword&gt;"</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模糊匹配</span></span><br><span class="line">GET product_en/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"fuzzy"</span>: {</span><br><span class="line">      <span class="string">"desc"</span>: {</span><br><span class="line">        <span class="string">"value"</span>: <span class="string">"zhon"</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><ol><li><code>value</code>：必须，搜索的字段</li><li><code>fuzziness</code>：编辑距离：(0,1,2)并非越大越好，召回率高但结果不准确，例如zho到zhong的编辑距离为2<ol><li>最小编辑距离：一个单词经过（插入、删除、修改、调换）转换为另一个单词时需要的次数</li><li><code>transpositions</code>：表示编辑距离修改时是否包含反转。默认为true，包含反转，false时不包含反转。如设置为false，fuzziness设置为1时，<code>hzong</code>不能匹配到<code>zhong</code>。因为<code>hzong</code>转换为<code>zhong</code>在不反转时需要两次操作。</li></ol></li></ol></li><li><p>在match中使用fuzziness</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET product_en/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"match"</span>: {</span><br><span class="line">      <span class="string">"desc"</span>: {</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"quangengneng"</span>,</span><br><span class="line">        <span class="string">"fuzziness"</span>: <span class="number">1</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><h3 id="智能推荐"><a href="#智能推荐" class="headerlink" title="智能推荐"></a>智能推荐</h3></li><li><h3 id="match-phrase-prefix"><a href="#match-phrase-prefix" class="headerlink" title="match_phrase_prefix"></a>match_phrase_prefix</h3><ol><li><h4 id="match-phrase"><a href="#match-phrase" class="headerlink" title="match_phrase"></a>match_phrase</h4><ol><li>match_phrase_prefix会分词</li><li>被检索字段必须包含match_phrase中的所有词频并且顺序必须是相同的</li><li>被检索字段包含的match_phrase中的词项之间不能有其他词项</li></ol></li><li><h5 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h5><p>​match_phrase_prefix与match_phrase相同，但是它多了一个特性,就是它允许在文本的最后一个词项(term)上的前缀匹配,如果是一个单词，比如a，它会匹配文档字段所有以a开头的文档，如果是一个短语，比如 “this is ma” ，他会先在倒排索引中做以ma做前缀搜索，然后在匹配到的doc中做match_phrase查询，(网上有的说是先match_phrase，然后再进行前缀搜索,，是不对的)。</p><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li>analyzer：指定何种分析器来对该短语进行分词处理</li><li>max_expansions：在分片级别限制匹配的最大词项，如果多个分片还是会返回多个结果</li><li>boost：用于设置该查询的权重</li><li>slop：允许短语间的词项(term)间隔：slop 参数告诉 match_phrase 查询词条相隔多远时仍然能将文档视为匹配。<ul><li>相隔多远： 意思是说为了让查询和文档匹配你需要移动词条多少次。</li><li>例如：slop为1时，使用<code>shouji de</code> 可以匹配到<code>shouji zhong de</code></li></ul></li></ul></li><li><h4 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">GET product_en/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"match_phrase_prefix"</span>: {</span><br><span class="line">      <span class="string">"desc"</span>: {</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"shouji zhong de"</span>,</span><br><span class="line">        <span class="string">"max_expansions"</span>: <span class="number">1</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加上slop参数</span></span><br><span class="line">GET product_en/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"match_phrase_prefix"</span>: {</span><br><span class="line">      <span class="string">"desc"</span>: {</span><br><span class="line">        <span class="string">"query"</span>: <span class="string">"shouji de"</span>,</span><br><span class="line">        <span class="string">"max_expansions"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">"slop"</span>:<span class="number">1</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><h3 id="N-gram和edge-ngram"><a href="#N-gram和edge-ngram" class="headerlink" title="N-gram和edge ngram"></a>N-gram和edge ngram</h3><ol><li><h5 id="tokenizer"><a href="#tokenizer" class="headerlink" title="tokenizer"></a>tokenizer</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">{</span><br><span class="line">  <span class="string">"tokenizer"</span>: <span class="string">"ngram"</span>,</span><br><span class="line">  <span class="string">"text"</span>: <span class="string">"reba always loves me"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="token-filter"><a href="#token-filter" class="headerlink" title="token filter"></a>token filter</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">{</span><br><span class="line">  <span class="string">"tokenizer"</span>: <span class="string">"ik_max_word"</span>,</span><br><span class="line">  <span class="string">"filter"</span>: [ <span class="string">"ngram"</span> ],</span><br><span class="line">  <span class="string">"text"</span>: <span class="string">"reba always loves me"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><ul><li><h5 id="min-gram：创建索引所拆分字符的最小阈值"><a href="#min-gram：创建索引所拆分字符的最小阈值" class="headerlink" title="min_gram：创建索引所拆分字符的最小阈值"></a>min_gram：创建索引所拆分字符的最小阈值</h5></li><li><h5 id="max-gram：创建索引所拆分字符的最大阈值"><a href="#max-gram：创建索引所拆分字符的最大阈值" class="headerlink" title="max_gram：创建索引所拆分字符的最大阈值"></a>max_gram：创建索引所拆分字符的最大阈值</h5></li></ul><h5 id="ngram：从每一个字符开始-按照步长-进行分词-适合前缀中缀检索"><a href="#ngram：从每一个字符开始-按照步长-进行分词-适合前缀中缀检索" class="headerlink" title="ngram：从每一个字符开始,按照步长,进行分词,适合前缀中缀检索"></a>ngram：从每一个字符开始,按照步长,进行分词,适合前缀中缀检索</h5><h5 id="edge-ngram：从第一个字符开始-按照步长-进行分词-适合前缀匹配场景"><a href="#edge-ngram：从第一个字符开始-按照步长-进行分词-适合前缀匹配场景" class="headerlink" title="edge_ngram：从第一个字符开始,按照步长,进行分词,适合前缀匹配场景"></a>edge_ngram：从第一个字符开始,按照步长,进行分词,适合前缀匹配场景</h5></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;其他查询&quot;&gt;&lt;a href=&quot;#其他查询&quot; class=&quot;headerlink&quot; title=&quot;其他查询&quot;&gt;&lt;/a&gt;其他查询&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;前缀搜索prefix&quot;&gt;&lt;a href=&quot;#前缀搜索prefix&quot; class=&quot;headerl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>索引的批量操作</title>
    <link href="http://example.com/2023/03/20/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/7.suo-yin-de-pi-liang-cao-zuo/"/>
    <id>http://example.com/2023/03/20/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/7.suo-yin-de-pi-liang-cao-zuo/</id>
    <published>2023-03-20T14:44:25.414Z</published>
    <updated>2023-04-28T09:25:47.274Z</updated>
    
    <content type="html"><![CDATA[<h2 id="索引的批量操作"><a href="#索引的批量操作" class="headerlink" title="索引的批量操作"></a>索引的批量操作</h2><ol><li><h3 id="基于-mget的批量操作"><a href="#基于-mget的批量操作" class="headerlink" title="基于_mget的批量操作"></a>基于_mget的批量操作</h3><ol><li><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>Multi get API 基于索引、类型、（可选）和 id（可能还有路由）返回多个文档。响应包括一个<code>docs</code>数组，其中包含所有获取的文档，顺序与原始多获取请求相对应（如果特定获取失败，则包含此错误的对象将包含在响应中）。获取的数据结构类似于查询时返回的数据结构。</p></li><li><h4 id="查询结构体"><a href="#查询结构体" class="headerlink" title="查询结构体"></a>查询结构体</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 基于mget的批量查询</span></span><br><span class="line">GET /_mget</span><br><span class="line">{</span><br><span class="line">  <span class="string">"docs"</span>: [</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_index"</span>: <span class="string">"product"</span>,</span><br><span class="line">      <span class="string">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">      <span class="string">"_id"</span>: <span class="number">3</span></span><br><span class="line">    },</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_index"</span>: <span class="string">"product"</span>,</span><br><span class="line">      <span class="string">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">      <span class="string">"_id"</span>: <span class="number">1</span></span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询单个索引时，将索引提前</span></span><br><span class="line">GET product/_mget</span><br><span class="line">{</span><br><span class="line">  <span class="string">"docs"</span>: [</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_id"</span>: <span class="number">1</span></span><br><span class="line">    },</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_id"</span>: <span class="number">3</span></span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询单个索引时，可以将索引提前</span></span><br><span class="line">GET product/_mget</span><br><span class="line">{</span><br><span class="line">  <span class="string">"docs"</span>: [</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_id"</span>: <span class="number">1</span></span><br><span class="line">    },</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_id"</span>: <span class="number">3</span></span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET product/_mget</span><br><span class="line">{</span><br><span class="line">  <span class="string">"docs"</span>: [</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_id"</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="string">"_source"</span>:[</span><br><span class="line">        <span class="string">"name"</span>, <span class="string">"price"</span></span><br><span class="line">        ]</span><br><span class="line">    },</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_id"</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="string">"_source"</span>:{</span><br><span class="line">        <span class="string">"include"</span>:[</span><br><span class="line">          <span class="string">"name"</span>, <span class="string">"price"</span></span><br><span class="line">          ],</span><br><span class="line">          <span class="string">"exclude"</span>:[</span><br><span class="line">          <span class="string">"name"</span>, <span class="string">"tags"</span></span><br><span class="line">          ]</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="返回的结果"><a href="#返回的结果" class="headerlink" title="返回的结果"></a>返回的结果</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="string">"docs"</span> : [</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"product"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">      <span class="string">"_version"</span> : <span class="number">4</span>,</span><br><span class="line">      <span class="string">"_seq_no"</span> : <span class="number">13</span>,</span><br><span class="line">      <span class="string">"_primary_term"</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="string">"found"</span> : true,</span><br><span class="line">      <span class="string">"_source"</span> : {</span><br><span class="line">        <span class="string">"price"</span> : <span class="number">1899</span>,</span><br><span class="line">        <span class="string">"name"</span> : <span class="string">"小米手机10"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    {</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"product"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">      <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="string">"_seq_no"</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="string">"_primary_term"</span> : <span class="number">1</span>,</span><br><span class="line">      <span class="string">"found"</span> : true,</span><br><span class="line">      <span class="string">"_source"</span> : {</span><br><span class="line">        <span class="string">"price"</span> : <span class="number">2999</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><h3 id="文档的操作类型"><a href="#文档的操作类型" class="headerlink" title="文档的操作类型"></a>文档的操作类型</h3><ol><li><p>create：不存在则创建，存在则报错</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建</span></span><br><span class="line">POST test_index/_doc</span><br><span class="line">{</span><br><span class="line">  <span class="string">"field1"</span>:<span class="string">"test1"</span>,</span><br><span class="line">  <span class="string">"field2"</span>:<span class="string">"test2"</span></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><p>delete：删除文档，删除时并没有真正删除，而是更新了版本</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE test_index/_doc/qTzpA4cBcYeZSWHOL6lh</span><br></pre></td></tr></tbody></table></figure></li><li><p>update：全量替换或部分更新</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建</span></span><br><span class="line">POST test_index/_doc/43L0A4cB88BkTKJBzyYc/_update</span><br><span class="line">{</span><br><span class="line">  <span class="string">"doc"</span>: {</span><br><span class="line">    <span class="string">"field1"</span>:<span class="string">"update_test1"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>index：索引（动词）</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建，存在时覆盖，不存在就创建</span></span><br><span class="line">POST test_index/_doc/<span class="number">2</span>?op_type=index</span><br><span class="line">{</span><br><span class="line">  <span class="string">"field"</span>: <span class="number">1</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><h3 id="索引的批量操作-bulk"><a href="#索引的批量操作-bulk" class="headerlink" title="索引的批量操作_bulk"></a>索引的批量操作_bulk</h3><ol><li><h5 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _bulk批量操作</span></span><br><span class="line"><span class="comment"># POST /index/_bulk</span></span><br><span class="line"><span class="comment"># {"action": "metadata"}</span></span><br><span class="line"><span class="comment"># {"data"}</span></span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="写入"><a href="#写入" class="headerlink" title="写入"></a>写入</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST _bulk</span><br><span class="line">{ <span class="string">"index"</span>:{<span class="string">"_index"</span>:<span class="string">"test"</span>, <span class="string">"_type"</span>:<span class="string">"_doc"</span>, <span class="string">"_id"</span> :<span class="string">"1"</span>}}</span><br><span class="line">{ <span class="string">"field1"</span> : <span class="string">"value1"</span> }</span><br><span class="line"></span><br><span class="line">POST _bulk</span><br><span class="line">{<span class="string">"index"</span>:{ <span class="string">"_index"</span>:<span class="string">"test_index"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="number">4</span>}}</span><br><span class="line">{<span class="string">"field1"</span>:<span class="string">"test_bulk"</span>}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST _bulk</span><br><span class="line">{<span class="string">"delete"</span>:{<span class="string">"_index"</span>:<span class="string">"test_index"</span>, <span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="string">"10"</span>}}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST _bulk</span><br><span class="line">{<span class="string">"update"</span>:{<span class="string">"_index"</span>:<span class="string">"test_index"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="string">"10"</span>}}</span><br><span class="line">{<span class="string">"doc"</span>:{<span class="string">"field1"</span>:<span class="string">"bulk update"</span>}}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="filter-path参数说明"><a href="#filter-path参数说明" class="headerlink" title="filter_path参数说明"></a>filter_path参数说明</h5><ol><li>使用filter_path 可以筛选将处理报错的数据返回</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用filter_path 可以筛选将处理报错的数据返回</span></span><br><span class="line">POST _bulk?filter_path=items.*.error</span><br><span class="line">{<span class="string">"update"</span>:{<span class="string">"_index"</span>:<span class="string">"test_index"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="string">"10"</span>}}</span><br><span class="line">{<span class="string">"doc"</span>:{<span class="string">"field1"</span>:<span class="string">"bulk update 222"</span>}}</span><br><span class="line">{<span class="string">"create"</span>:{ <span class="string">"_index"</span>:<span class="string">"test_index"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="number">11</span>}}</span><br><span class="line">{<span class="string">"field1"</span>:<span class="string">"test_bulk"</span>}</span><br><span class="line">{ <span class="string">"index"</span>:{<span class="string">"_index"</span>:<span class="string">"test"</span>, <span class="string">"_type"</span>:<span class="string">"_doc"</span>, <span class="string">"_id"</span> :<span class="string">"1"</span>}}</span><br><span class="line">{ <span class="string">"field1"</span> : <span class="string">"value2222"</span> }</span><br><span class="line">{ <span class="string">"delete"</span>:{<span class="string">"_index"</span>:<span class="string">"test"</span>, <span class="string">"_type"</span>:<span class="string">"_doc"</span>, <span class="string">"_id"</span> :<span class="string">"1"</span>}}</span><br><span class="line"></span><br><span class="line">POST _bulk?filter_path=items.*.error</span><br><span class="line">{<span class="string">"create"</span>:{ <span class="string">"_index"</span>:<span class="string">"test_index"</span>,<span class="string">"_type"</span>:<span class="string">"_doc"</span>,<span class="string">"_id"</span>:<span class="number">11</span>}}</span><br><span class="line">{<span class="string">"field1"</span>:<span class="string">"test_bulk"</span>}</span><br></pre></td></tr></tbody></table></figure></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;索引的批量操作&quot;&gt;&lt;a href=&quot;#索引的批量操作&quot; class=&quot;headerlink&quot; title=&quot;索引的批量操作&quot;&gt;&lt;/a&gt;索引的批量操作&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;基于-mget的批量操作&quot;&gt;&lt;a href=&quot;#基于-mget的批量操作</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>脚本查询Scripting</title>
    <link href="http://example.com/2023/03/19/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/6.jiao-ben-cha-xun-scripting/"/>
    <id>http://example.com/2023/03/19/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/6.jiao-ben-cha-xun-scripting/</id>
    <published>2023-03-19T13:32:24.268Z</published>
    <updated>2023-04-28T09:25:47.281Z</updated>
    
    <content type="html"><![CDATA[<h2 id="脚本查询Scripting"><a href="#脚本查询Scripting" class="headerlink" title="脚本查询Scripting"></a>脚本查询Scripting</h2><ol><li><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>Scripting是Elasticsearch支持的一种专门用于复杂场景下支持自定义编程的强大的脚本功能，ES支持多种脚本语言，如painless，其语法类似于Java,也有注释、关键字、类型、变量、函数等，其就要相对于其他脚本高出几倍的性能，并且安全可靠，可以用于内联和存储脚本。</p><p>es在执行脚本时需要先进行编译，编译的结果存储在缓冲区中。</p></li><li><h3 id="支持的语言"><a href="#支持的语言" class="headerlink" title="支持的语言"></a>支持的语言</h3><ol><li><p><strong>groovy</strong>：ES 1.4.x-5.0的默认脚本语言</p></li><li><p><strong>painless</strong>：JavaEE使用java语言开发，.Net使用C#/F#语言开发，Flutter使用Dart语言开发，同样，ES 5.0+版本后的Scripting使用的语言默认就是painless，painless是一种专门用于Elasticsearch的简单,用于内联和存储脚本，是ES 5.0+的默认脚本语言，类似于Java,也有注释、关键字、类型、变量、函数等，是一种安全的脚本语言。并且是Elasticsearch的默认脚本语言。</p></li><li><p><strong>其他</strong>：</p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting-expression.html">expression</a>：每个文档的开销较低：表达式的作用更多，可以非常快速地执行，甚至比编写native脚本还要快，支持javascript语法的子集：单个表达式。缺点：只能访问数字，布尔值，日期和geo_point字段，存储的字段不可用</p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html">mustache</a>：提供模板参数化查询</p></li></ol></li><li><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol><li>语法简单，学习成本低</li><li>灵活度高，可编程能力强</li><li>性能相较于其他脚本语言很高</li><li>安全性好</li><li>独立语言，虽然易学但仍需单独学习</li><li>相较于DSL性能低</li><li>不适用于复杂的业务场景</li></ol></li><li><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ol><li><p>自定义评分</p></li><li><p>自定义相关度</p></li><li><p>自定义过滤器</p></li><li><p>自定义聚合分析</p></li><li><p>自定义reindex</p></li><li><p>其他自定义操作</p></li></ol></li><li><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><ol><li><strong>lang</strong>:编写脚本的语言，默认为painless</li><li><strong>source</strong>:脚本本身可以指定为source内联脚本或id存储脚本</li><li><strong>params</strong>:可以传递到脚本中的任何参数名，推荐使用这种方式传参，可以减少编译的过程</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#语法:ctx._source.field_name</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"script"</span>: {</span><br><span class="line">  <span class="string">"lang"</span>:   <span class="string">"..."</span>,  <span class="comment">#1</span></span><br><span class="line">  <span class="string">"source"</span> | <span class="string">"id"</span>: <span class="string">"..."</span>, <span class="comment">#2</span></span><br><span class="line">  <span class="string">"params"</span>: { ... } <span class="comment">#3</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>示例</strong>：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#语法:ctx._source.field_name</span></span><br><span class="line"><span class="comment">#可以进行查找、更新等操作</span></span><br><span class="line"><span class="comment"># 1.修改price字段</span></span><br><span class="line">POST product/_doc/<span class="number">1</span>/_update</span><br><span class="line">{</span><br><span class="line">  <span class="string">"script"</span>: {</span><br><span class="line">    <span class="string">"source"</span>: <span class="string">"ctx._source.price+=params.level"</span>,</span><br><span class="line">    <span class="string">"params"</span>: {</span><br><span class="line">      <span class="string">"level"</span>:<span class="number">100</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.给tags字段加入一个属性，tags字段为数组</span></span><br><span class="line">POST product/_doc/<span class="number">1</span>/_update</span><br><span class="line">{</span><br><span class="line">  <span class="string">"script"</span>: {</span><br><span class="line">    <span class="string">"source"</span>: <span class="string">"ctx._source.tags.add('无线充电')"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.删除id为1的数据</span></span><br><span class="line">POST product/_doc/<span class="number">1</span>/_update</span><br><span class="line">{</span><br><span class="line">  <span class="string">"script"</span>: {</span><br><span class="line">    <span class="string">"source"</span>: <span class="string">"ctx.op='delete'"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查询或者插入</span></span><br><span class="line">POST product/_doc/<span class="number">1</span>/_update</span><br><span class="line">{</span><br><span class="line">  <span class="string">"script"</span>: {</span><br><span class="line">    <span class="string">"source"</span>: <span class="string">"ctx._source.price+=100"</span></span><br><span class="line">  },</span><br><span class="line">  <span class="string">"upsert"</span>: {</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"小米手机10"</span>,</span><br><span class="line">    <span class="string">"desc"</span>: <span class="string">"充电贼快掉电更快，超级无敌望远镜，高刷电竞屏"</span>,</span><br><span class="line">    <span class="string">"price"</span>: <span class="number">1999</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.GET 查询打9折之后的价格</span></span><br><span class="line"><span class="comment"># GET 查询打9折之后的价格</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"script_fields"</span>: {</span><br><span class="line">    <span class="string">"price"</span>: {</span><br><span class="line">      <span class="string">"script"</span>: {</span><br><span class="line">        <span class="string">"lang"</span>: <span class="string">"painless"</span>,</span><br><span class="line">        <span class="string">"source"</span>: <span class="string">"doc['price'].value*params.level"</span>,</span><br><span class="line">        <span class="string">"params"</span>: {</span><br><span class="line">          <span class="string">"level"</span>:<span class="number">0.9</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><h3 id="存储脚本"><a href="#存储脚本" class="headerlink" title="存储脚本"></a>存储脚本</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成script脚本模板</span></span><br><span class="line">POST _scripts/calculate_discount</span><br><span class="line">{</span><br><span class="line">  <span class="string">"script"</span>:{</span><br><span class="line">    <span class="string">"lang"</span>: <span class="string">"painless"</span>,</span><br><span class="line">    <span class="string">"source"</span>:<span class="string">"doc.price.value*params.discount"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询脚本</span></span><br><span class="line">GET _scripts/calculate_discount</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用脚本</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"script_fields"</span>: {</span><br><span class="line">    <span class="string">"discount_fields"</span>: {</span><br><span class="line">      <span class="string">"script"</span>: {</span><br><span class="line">        <span class="string">"id"</span>: <span class="string">"calculate_discount"</span>,</span><br><span class="line">        <span class="string">"params"</span>: {</span><br><span class="line">          <span class="string">"discount"</span>: <span class="number">0.8</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h3 id="使用复杂脚本"><a href="#使用复杂脚本" class="headerlink" title="使用复杂脚本"></a>使用复杂脚本</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用复杂脚本</span></span><br><span class="line"><span class="comment"># 脚本内容使用三个""""""括起来</span></span><br><span class="line">POST product/_doc/<span class="number">1</span>/_update</span><br><span class="line">{</span><br><span class="line">  <span class="string">"script"</span>: {</span><br><span class="line">    <span class="string">"lang"</span>: <span class="string">"painless"</span>,</span><br><span class="line">    <span class="string">"source"</span>: <span class="string">"""</span></span><br><span class="line"><span class="string">      ctx._source.tags=[params.tag_name];</span></span><br><span class="line"><span class="string">      ctx._source.price-=100;</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    , <span class="string">"params"</span>: {</span><br><span class="line">      <span class="string">"tag_name"</span>:<span class="string">"无线秒充1"</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h3 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h3><p>早先某些版本正则表达式默认情况下处于禁用模式，因为它绕过了painless的针对长时间运行和占用内存脚本的保护机制。而且有深度堆栈行为。如果需要开启正则，需要配置：script.painless.regex.enabled: true</p><p><strong>注意</strong>：通常正则的使用范围比较小，应用范围基本限制在数据量比较小和并发量比较小的应用场景下。</p></li><li><h4 id="doc-‘field’-value和params-‘-source’-‘field’-："><a href="#doc-‘field’-value和params-‘-source’-‘field’-：" class="headerlink" title="doc[‘field’].value和params[‘_source’][‘field’]："></a>doc[‘field’].value和params[‘_source’][‘field’]：</h4><p>理解之间的区别是很重要的，doc[‘field’].value和params[‘_source’][‘field’]。首先，使用doc关键字，将导致该字段的条件被加载到内存（缓存），这将导致更快的执行，但更多的内存消耗。此外，doc[…]符号只允许简单类型（不能返回一个复杂类型(JSON对象或者nested类型)），只有在非分析或单个词条的基础上有意义。但是，doc如果可能，使用仍然是从文档访问值的推荐方式，因为_source每次使用时都必须加载并解析。使用_source非常缓慢</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;脚本查询Scripting&quot;&gt;&lt;a href=&quot;#脚本查询Scripting&quot; class=&quot;headerlink&quot; title=&quot;脚本查询Scripting&quot;&gt;&lt;/a&gt;脚本查询Scripting&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>es集群重要配置</title>
    <link href="http://example.com/2023/03/15/treasurebox/elasticsearch/cao-zuo-shou-ce/es-ji-qun-chong-yao-pei-zhi/"/>
    <id>http://example.com/2023/03/15/treasurebox/elasticsearch/cao-zuo-shou-ce/es-ji-qun-chong-yao-pei-zhi/</id>
    <published>2023-03-15T11:37:12.867Z</published>
    <updated>2023-04-28T09:25:47.267Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="comment"># 永久生效配置</span></span><br><span class="line">  <span class="string">"persistent"</span> : {</span><br><span class="line">    <span class="string">"action"</span> : {</span><br><span class="line">      <span class="string">"destructive_requires_name"</span> : <span class="string">"false"</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"cluster"</span> : {</span><br><span class="line">      <span class="string">"routing"</span> : {</span><br><span class="line">        <span class="string">"allocation"</span> : {</span><br><span class="line">          <span class="string">"node_concurrent_incoming_recoveries"</span> : <span class="string">"2"</span>,</span><br><span class="line">          <span class="string">"node_concurrent_recoveries"</span> : <span class="string">"2"</span>,</span><br><span class="line">          <span class="string">"node_initial_primaries_recoveries"</span> : <span class="string">"4"</span>,</span><br><span class="line">          <span class="string">"node_concurrent_outgoing_recoveries"</span> : <span class="string">"2"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"metadata"</span> : {</span><br><span class="line">        <span class="string">"async_write"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"false"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"master_async_write"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"false"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"indices"</span> : {</span><br><span class="line">      <span class="string">"recovery"</span> : {</span><br><span class="line">        <span class="string">"max_bytes_per_sec"</span> : <span class="string">"40mb"</span> <span class="comment"># 集群恢复时每秒最大处理量</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"logger"</span> : {</span><br><span class="line">      <span class="string">"org"</span> : <span class="string">"info"</span></span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="string">"transient"</span> : {</span><br><span class="line">    <span class="string">"action"</span> : {</span><br><span class="line">      <span class="string">"destructive_requires_name"</span> : <span class="string">"false"</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"cluster"</span> : {</span><br><span class="line">      <span class="string">"routing"</span> : {</span><br><span class="line">        <span class="string">"allocation"</span> : {</span><br><span class="line">          <span class="string">"node_concurrent_incoming_recoveries"</span> : <span class="string">"2"</span>,</span><br><span class="line">          <span class="string">"node_concurrent_recoveries"</span> : <span class="string">"2"</span>,</span><br><span class="line">          <span class="string">"node_initial_primaries_recoveries"</span> : <span class="string">"4"</span>,</span><br><span class="line">          <span class="string">"node_concurrent_outgoing_recoveries"</span> : <span class="string">"2"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"metadata"</span> : {</span><br><span class="line">        <span class="string">"async_write"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"false"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"master_async_write"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"false"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"indices"</span> : {</span><br><span class="line">      <span class="string">"recovery"</span> : {</span><br><span class="line">        <span class="string">"max_bytes_per_sec"</span> : <span class="string">"40mb"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"logger"</span> : {</span><br><span class="line">      <span class="string">"org"</span> : <span class="string">"info"</span></span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="string">"defaults"</span> : {</span><br><span class="line">    <span class="string">"cluster"</span> : {</span><br><span class="line">      <span class="string">"routing"</span> : {</span><br><span class="line">        <span class="string">"use_adaptive_replica_selection"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"rebalance"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"all"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"allocation"</span> : {</span><br><span class="line">          <span class="string">"multi_path_relocation_balance"</span> : {</span><br><span class="line">            <span class="string">"enable"</span> : <span class="string">"true"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"same_shard"</span> : {</span><br><span class="line">            <span class="string">"host"</span> : <span class="string">"false"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"total_shards_per_node"</span> : <span class="string">"-1"</span>,</span><br><span class="line">          <span class="string">"multi_path_relocation"</span> : {</span><br><span class="line">            <span class="string">"max_factor"</span> : <span class="string">"2"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"delay_allocate"</span> : {</span><br><span class="line">            <span class="string">"enable"</span> : <span class="string">"true"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"shard_state"</span> : {</span><br><span class="line">            <span class="string">"started"</span> : {</span><br><span class="line">              <span class="string">"priority"</span> : <span class="string">"URGENT"</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"failed"</span> : {</span><br><span class="line">              <span class="string">"priority"</span> : <span class="string">"URGENT"</span></span><br><span class="line">            }</span><br><span class="line">          },</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"balanced"</span>,</span><br><span class="line">          <span class="string">"random_path_allocate"</span> : {</span><br><span class="line">            <span class="string">"enable"</span> : <span class="string">"true"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"disk"</span> : {</span><br><span class="line">            <span class="string">"threshold_enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">            <span class="string">"watermark"</span> : {</span><br><span class="line">              <span class="string">"low"</span> : <span class="string">"85%"</span>,</span><br><span class="line">              <span class="string">"flood_stage"</span> : <span class="string">"95%"</span>,</span><br><span class="line">              <span class="string">"high"</span> : <span class="string">"90%"</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"include_relocations"</span> : <span class="string">"true"</span>,</span><br><span class="line">            <span class="string">"reroute_interval"</span> : <span class="string">"60s"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"awareness"</span> : {</span><br><span class="line">            <span class="string">"attributes"</span> : [</span><br><span class="line">              <span class="string">"ip"</span></span><br><span class="line">            ]</span><br><span class="line">          },</span><br><span class="line">          <span class="string">"balance"</span> : {</span><br><span class="line">            <span class="string">"index"</span> : <span class="string">"0.55"</span>,</span><br><span class="line">            <span class="string">"threshold"</span> : <span class="string">"1.0"</span>,</span><br><span class="line">            <span class="string">"shard"</span> : <span class="string">"0.45"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"random_allocate"</span> : {</span><br><span class="line">            <span class="string">"enable"</span> : <span class="string">"true"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"all"</span>,</span><br><span class="line">          <span class="string">"same_ip_relocate"</span> : {</span><br><span class="line">            <span class="string">"enable"</span> : <span class="string">"false"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"allow_rebalance"</span> : <span class="string">"indices_all_active"</span>,</span><br><span class="line">          <span class="string">"cluster_concurrent_rebalance"</span> : <span class="string">"2"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"indices"</span> : {</span><br><span class="line">        <span class="string">"tombstones"</span> : {</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"500"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"close"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"true"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"nodes"</span> : {</span><br><span class="line">        <span class="string">"reconnect_interval"</span> : <span class="string">"10s"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"persistent_tasks"</span> : {</span><br><span class="line">        <span class="string">"allocation"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"all"</span>,</span><br><span class="line">          <span class="string">"recheck_interval"</span> : <span class="string">"30s"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"auth"</span> : {</span><br><span class="line">        <span class="string">"extra"</span> : {</span><br><span class="line">          <span class="string">"permission"</span> : <span class="string">""</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"blocks"</span> : {</span><br><span class="line">        <span class="string">"read_only_allow_delete"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"read_only"</span> : <span class="string">"false"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"service"</span> : {</span><br><span class="line">        <span class="string">"slow_task_logging_threshold"</span> : <span class="string">"30s"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"es-1a35xrhw"</span>,</span><br><span class="line">      <span class="string">"max_shards_per_node"</span> : <span class="string">"1000"</span>,</span><br><span class="line">      <span class="string">"remote"</span> : {</span><br><span class="line">        <span class="string">"node"</span> : {</span><br><span class="line">          <span class="string">"attr"</span> : <span class="string">""</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"initial_connect_timeout"</span> : <span class="string">"30s"</span>,</span><br><span class="line">        <span class="string">"connect"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"connections_per_cluster"</span> : <span class="string">"3"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"info"</span> : {</span><br><span class="line">        <span class="string">"update"</span> : {</span><br><span class="line">          <span class="string">"interval"</span> : <span class="string">"30s"</span>,</span><br><span class="line">          <span class="string">"timeout"</span> : <span class="string">"15s"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"chunk_size"</span> : <span class="string">"1gb"</span>,</span><br><span class="line">    <span class="string">"auth"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"end_point"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"logger"</span> : {</span><br><span class="line">      <span class="string">"level"</span> : <span class="string">"INFO"</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"cluster_type"</span> : <span class="string">"clog"</span>,</span><br><span class="line">    <span class="string">"processors"</span> : <span class="string">"16"</span>,</span><br><span class="line">    <span class="string">"ingest"</span> : {</span><br><span class="line">      <span class="string">"geoip"</span> : {</span><br><span class="line">        <span class="string">"cache_size"</span> : <span class="string">"1000"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"grok"</span> : {</span><br><span class="line">        <span class="string">"watchdog"</span> : {</span><br><span class="line">          <span class="string">"max_execution_time"</span> : <span class="string">"1s"</span>,</span><br><span class="line">          <span class="string">"interval"</span> : <span class="string">"1s"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"pidfile"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"path"</span> : {</span><br><span class="line">      <span class="string">"data"</span> : [</span><br><span class="line">        <span class="string">"/data1/containers/1656662142001104232/es/data"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"logs"</span> : <span class="string">"/data1/containers/1656662142001104232/es/logs"</span>,</span><br><span class="line">      <span class="string">"shared_data"</span> : <span class="string">""</span>,</span><br><span class="line">      <span class="string">"home"</span> : <span class="string">"/data1/containers/1656662142001104232/es"</span>,</span><br><span class="line">      <span class="string">"repo"</span> : [ ]</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"ccr"</span> : {</span><br><span class="line">      <span class="string">"wait_for_metadata_timeout"</span> : <span class="string">"60s"</span>,</span><br><span class="line">      <span class="string">"indices"</span> : {</span><br><span class="line">        <span class="string">"recovery"</span> : {</span><br><span class="line">          <span class="string">"recovery_activity_timeout"</span> : <span class="string">"60s"</span>,</span><br><span class="line">          <span class="string">"chunk_size"</span> : <span class="string">"1mb"</span>,</span><br><span class="line">          <span class="string">"internal_action_timeout"</span> : <span class="string">"60s"</span>,</span><br><span class="line">          <span class="string">"max_bytes_per_sec"</span> : <span class="string">"40mb"</span>,</span><br><span class="line">          <span class="string">"max_concurrent_file_chunks"</span> : <span class="string">"5"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"auto_follow"</span> : {</span><br><span class="line">        <span class="string">"wait_for_metadata_timeout"</span> : <span class="string">"60s"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"scheduler_period_min"</span> : <span class="string">"30"</span>,</span><br><span class="line">    <span class="string">"repositories"</span> : {</span><br><span class="line">      <span class="string">"fs"</span> : {</span><br><span class="line">        <span class="string">"compress"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"chunk_size"</span> : <span class="string">"9223372036854775807b"</span>,</span><br><span class="line">        <span class="string">"location"</span> : <span class="string">""</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"url"</span> : {</span><br><span class="line">        <span class="string">"supported_protocols"</span> : [</span><br><span class="line">          <span class="string">"http"</span>,</span><br><span class="line">          <span class="string">"https"</span>,</span><br><span class="line">          <span class="string">"ftp"</span>,</span><br><span class="line">          <span class="string">"file"</span>,</span><br><span class="line">          <span class="string">"jar"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"allowed_urls"</span> : [ ],</span><br><span class="line">        <span class="string">"url"</span> : <span class="string">"http:"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"action"</span> : {</span><br><span class="line">      <span class="string">"auto_create_index"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"search"</span> : {</span><br><span class="line">        <span class="string">"shard_count"</span> : {</span><br><span class="line">          <span class="string">"limit"</span> : <span class="string">"9223372036854775807"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"master"</span> : {</span><br><span class="line">        <span class="string">"force_local"</span> : <span class="string">"false"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"app_id"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"cache"</span> : {</span><br><span class="line">      <span class="string">"recycler"</span> : {</span><br><span class="line">        <span class="string">"page"</span> : {</span><br><span class="line">          <span class="string">"limit"</span> : {</span><br><span class="line">            <span class="string">"heap"</span> : <span class="string">"10%"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"CONCURRENT"</span>,</span><br><span class="line">          <span class="string">"weight"</span> : {</span><br><span class="line">            <span class="string">"longs"</span> : <span class="string">"1.0"</span>,</span><br><span class="line">            <span class="string">"ints"</span> : <span class="string">"1.0"</span>,</span><br><span class="line">            <span class="string">"bytes"</span> : <span class="string">"1.0"</span>,</span><br><span class="line">            <span class="string">"objects"</span> : <span class="string">"0.1"</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"reindex"</span> : {</span><br><span class="line">      <span class="string">"remote"</span> : {</span><br><span class="line">        <span class="string">"whitelist"</span> : [ ]</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"compress"</span> : <span class="string">"false"</span>,</span><br><span class="line">    <span class="string">"resource"</span> : {</span><br><span class="line">      <span class="string">"reload"</span> : {</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"interval"</span> : {</span><br><span class="line">          <span class="string">"low"</span> : <span class="string">"60s"</span>,</span><br><span class="line">          <span class="string">"high"</span> : <span class="string">"5s"</span>,</span><br><span class="line">          <span class="string">"medium"</span> : <span class="string">"30s"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"thread_pool"</span> : {</span><br><span class="line">      <span class="string">"force_merge"</span> : {</span><br><span class="line">        <span class="string">"queue_size"</span> : <span class="string">"-1"</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="string">"1"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"fetch_shard_started"</span> : {</span><br><span class="line">        <span class="string">"core"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"max"</span> : <span class="string">"32"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"5m"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"listener"</span> : {</span><br><span class="line">        <span class="string">"queue_size"</span> : <span class="string">"-1"</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="string">"8"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"index"</span> : {</span><br><span class="line">        <span class="string">"queue_size"</span> : <span class="string">"200"</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="string">"16"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"refresh"</span> : {</span><br><span class="line">        <span class="string">"core"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"max"</span> : <span class="string">"8"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"5m"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"generic"</span> : {</span><br><span class="line">        <span class="string">"core"</span> : <span class="string">"4"</span>,</span><br><span class="line">        <span class="string">"max"</span> : <span class="string">"128"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"30s"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"warmer"</span> : {</span><br><span class="line">        <span class="string">"core"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"max"</span> : <span class="string">"5"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"5m"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"search"</span> : {</span><br><span class="line">        <span class="string">"max_queue_size"</span> : <span class="string">"1000"</span>,</span><br><span class="line">        <span class="string">"queue_size"</span> : <span class="string">"1000"</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="string">"25"</span>,</span><br><span class="line">        <span class="string">"auto_queue_frame_size"</span> : <span class="string">"2000"</span>,</span><br><span class="line">        <span class="string">"target_response_time"</span> : <span class="string">"1s"</span>,</span><br><span class="line">        <span class="string">"min_queue_size"</span> : <span class="string">"1000"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"fetch_shard_store"</span> : {</span><br><span class="line">        <span class="string">"core"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"max"</span> : <span class="string">"32"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"5m"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"flush"</span> : {</span><br><span class="line">        <span class="string">"core"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"max"</span> : <span class="string">"5"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"5m"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"management"</span> : {</span><br><span class="line">        <span class="string">"core"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"max"</span> : <span class="string">"5"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"5m"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"analyze"</span> : {</span><br><span class="line">        <span class="string">"queue_size"</span> : <span class="string">"16"</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="string">"1"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"get"</span> : {</span><br><span class="line">        <span class="string">"queue_size"</span> : <span class="string">"1000"</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="string">"16"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"bulk"</span> : {</span><br><span class="line">        <span class="string">"queue_size"</span> : <span class="string">"200"</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="string">"16"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"estimated_time_interval"</span> : <span class="string">"200ms"</span>,</span><br><span class="line">      <span class="string">"write"</span> : {</span><br><span class="line">        <span class="string">"queue_size"</span> : <span class="string">"1024"</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="string">"16"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"snapshot"</span> : {</span><br><span class="line">        <span class="string">"core"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"max"</span> : <span class="string">"5"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"5m"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"search_throttled"</span> : {</span><br><span class="line">        <span class="string">"max_queue_size"</span> : <span class="string">"100"</span>,</span><br><span class="line">        <span class="string">"queue_size"</span> : <span class="string">"100"</span>,</span><br><span class="line">        <span class="string">"size"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"auto_queue_frame_size"</span> : <span class="string">"200"</span>,</span><br><span class="line">        <span class="string">"target_response_time"</span> : <span class="string">"1s"</span>,</span><br><span class="line">        <span class="string">"min_queue_size"</span> : <span class="string">"100"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"index"</span> : {</span><br><span class="line">      <span class="string">"codec"</span> : <span class="string">"default"</span>,</span><br><span class="line">      <span class="string">"store"</span> : {</span><br><span class="line">        <span class="string">"hybrid"</span> : {</span><br><span class="line">          <span class="string">"extension"</span> : [</span><br><span class="line">            <span class="string">"nvd"</span>,</span><br><span class="line">            <span class="string">"dvd"</span>,</span><br><span class="line">            <span class="string">"tim"</span>,</span><br><span class="line">            <span class="string">"cfs"</span></span><br><span class="line">          ]</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"type"</span> : <span class="string">""</span>,</span><br><span class="line">        <span class="string">"fs"</span> : {</span><br><span class="line">          <span class="string">"fs_lock"</span> : <span class="string">"native"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"preload"</span> : [ ]</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"indices_expire"</span> : {</span><br><span class="line">      <span class="string">"disable"</span> : <span class="string">"false"</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"script"</span> : {</span><br><span class="line">      <span class="string">"allowed_contexts"</span> : [ ],</span><br><span class="line">      <span class="string">"max_compilations_rate"</span> : <span class="string">"75/5m"</span>,</span><br><span class="line">      <span class="string">"cache"</span> : {</span><br><span class="line">        <span class="string">"max_size"</span> : <span class="string">"100"</span>,</span><br><span class="line">        <span class="string">"expire"</span> : <span class="string">"0ms"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"painless"</span> : {</span><br><span class="line">        <span class="string">"regex"</span> : {</span><br><span class="line">          <span class="string">"enabled"</span> : <span class="string">"false"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"max_size_in_bytes"</span> : <span class="string">"65535"</span>,</span><br><span class="line">      <span class="string">"allowed_types"</span> : [ ]</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"auth_version"</span> : <span class="string">"0"</span>,</span><br><span class="line">    <span class="string">"bucket"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"node"</span> : {</span><br><span class="line">      <span class="string">"data"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"enable_lucene_segment_infos_trace"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"local_storage"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"max_local_storage_nodes"</span> : <span class="string">"1"</span>,</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"1656662142001104232"</span>,</span><br><span class="line">      <span class="string">"id"</span> : {</span><br><span class="line">        <span class="string">"seed"</span> : <span class="string">"0"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"store"</span> : {</span><br><span class="line">        <span class="string">"allow_mmap"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"allow_mmapfs"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"attr"</span> : {</span><br><span class="line">        <span class="string">"rack"</span> : <span class="string">"cvm_4_200005"</span>,</span><br><span class="line">        <span class="string">"set"</span> : <span class="string">"200005"</span>,</span><br><span class="line">        <span class="string">"ip"</span> : <span class="string">"9.20.83.249"</span>,</span><br><span class="line">        <span class="string">"temperature"</span> : <span class="string">"hot"</span>,</span><br><span class="line">        <span class="string">"region"</span> : <span class="string">"4"</span>,</span><br><span class="line">        <span class="string">"xpack"</span> : {</span><br><span class="line">          <span class="string">"installed"</span> : <span class="string">"true"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"ml"</span> : {</span><br><span class="line">          <span class="string">"machine_memory"</span> : <span class="string">"67211829248"</span>,</span><br><span class="line">          <span class="string">"max_open_jobs"</span> : <span class="string">"20"</span>,</span><br><span class="line">          <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"portsfile"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"ingest"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"master"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"ml"</span> : <span class="string">"true"</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"max_running_jobs"</span> : <span class="string">"20"</span>,</span><br><span class="line">    <span class="string">"tribe"</span> : {</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">""</span>,</span><br><span class="line">      <span class="string">"on_conflict"</span> : <span class="string">"any"</span>,</span><br><span class="line">      <span class="string">"blocks"</span> : {</span><br><span class="line">        <span class="string">"metadata"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"read"</span> : {</span><br><span class="line">          <span class="string">"indices"</span> : [ ]</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"write.indices"</span> : [ ],</span><br><span class="line">        <span class="string">"write"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"metadata.indices"</span> : [ ]</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"http"</span> : {</span><br><span class="line">      <span class="string">"cors"</span> : {</span><br><span class="line">        <span class="string">"max-age"</span> : <span class="string">"1728000"</span>,</span><br><span class="line">        <span class="string">"allow-origin"</span> : <span class="string">""</span>,</span><br><span class="line">        <span class="string">"allow-headers"</span> : <span class="string">"X-Requested-With,Content-Type,Content-Length"</span>,</span><br><span class="line">        <span class="string">"allow-credentials"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"allow-methods"</span> : <span class="string">"OPTIONS,HEAD,GET,POST,PUT,DELETE"</span>,</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"false"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"max_chunk_size"</span> : <span class="string">"8kb"</span>,</span><br><span class="line">      <span class="string">"compression_level"</span> : <span class="string">"3"</span>,</span><br><span class="line">      <span class="string">"max_initial_line_length"</span> : <span class="string">"4kb"</span>,</span><br><span class="line">      <span class="string">"type"</span> : <span class="string">"security4"</span>,</span><br><span class="line">      <span class="string">"pipelining"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"type.default"</span> : <span class="string">"netty4"</span>,</span><br><span class="line">      <span class="string">"content_type"</span> : {</span><br><span class="line">        <span class="string">"required"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"host"</span> : [ ],</span><br><span class="line">      <span class="string">"publish_port"</span> : <span class="string">"-1"</span>,</span><br><span class="line">      <span class="string">"read_timeout"</span> : <span class="string">"0ms"</span>,</span><br><span class="line">      <span class="string">"max_content_length"</span> : <span class="string">"100mb"</span>,</span><br><span class="line">      <span class="string">"netty"</span> : {</span><br><span class="line">        <span class="string">"receive_predictor_size"</span> : <span class="string">"64kb"</span>,</span><br><span class="line">        <span class="string">"max_composite_buffer_components"</span> : <span class="string">"69905"</span>,</span><br><span class="line">        <span class="string">"receive_predictor_max"</span> : <span class="string">"64kb"</span>,</span><br><span class="line">        <span class="string">"worker_count"</span> : <span class="string">"32"</span>,</span><br><span class="line">        <span class="string">"receive_predictor_min"</span> : <span class="string">"64kb"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"tcp"</span> : {</span><br><span class="line">        <span class="string">"reuse_address"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"receive_buffer_size"</span> : <span class="string">"-1b"</span>,</span><br><span class="line">        <span class="string">"no_delay"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"send_buffer_size"</span> : <span class="string">"-1b"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"bind_host"</span> : [ ],</span><br><span class="line">      <span class="string">"reset_cookies"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"max_warning_header_count"</span> : <span class="string">"-1"</span>,</span><br><span class="line">      <span class="string">"max_warning_header_size"</span> : <span class="string">"-1b"</span>,</span><br><span class="line">      <span class="string">"detailed_errors"</span> : {</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"port"</span> : <span class="string">"9200"</span>,</span><br><span class="line">      <span class="string">"max_header_size"</span> : <span class="string">"8kb"</span>,</span><br><span class="line">      <span class="string">"pipelining.max_events"</span> : <span class="string">"10000"</span>,</span><br><span class="line">      <span class="string">"tcp_no_delay"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"compression"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"publish_host"</span> : [ ]</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"region"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"access_key_id"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"no"</span> : {</span><br><span class="line">      <span class="string">"model"</span> : {</span><br><span class="line">        <span class="string">"state"</span> : {</span><br><span class="line">          <span class="string">"persist"</span> : <span class="string">"false"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"bootstrap"</span> : {</span><br><span class="line">      <span class="string">"memory_lock"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"system_call_filter"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"ctrlhandler"</span> : <span class="string">"true"</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"network"</span> : {</span><br><span class="line">      <span class="string">"host"</span> : [</span><br><span class="line">        <span class="string">"0.0.0.0"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"tcp"</span> : {</span><br><span class="line">        <span class="string">"reuse_address"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"connect_timeout"</span> : <span class="string">"30s"</span>,</span><br><span class="line">        <span class="string">"receive_buffer_size"</span> : <span class="string">"-1b"</span>,</span><br><span class="line">        <span class="string">"no_delay"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"send_buffer_size"</span> : <span class="string">"-1b"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"bind_host"</span> : [</span><br><span class="line">        <span class="string">"0.0.0.0"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"server"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"breaker"</span> : {</span><br><span class="line">        <span class="string">"inflight_requests"</span> : {</span><br><span class="line">          <span class="string">"limit"</span> : <span class="string">"100%"</span>,</span><br><span class="line">          <span class="string">"overhead"</span> : <span class="string">"1.0"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"publish_host"</span> : [</span><br><span class="line">        <span class="string">"9.20.83.249"</span></span><br><span class="line">      ]</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"pre-create_index"</span> : {</span><br><span class="line">      <span class="string">"reserved_hours"</span> : <span class="string">"2"</span>,</span><br><span class="line">      <span class="string">"enable"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"inherit_metric"</span> : {</span><br><span class="line">        <span class="string">"enable"</span> : <span class="string">"false"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"search"</span> : {</span><br><span class="line">      <span class="string">"default_search_timeout"</span> : <span class="string">"30000ms"</span>,</span><br><span class="line">      <span class="string">"check_buckets_step_size"</span> : <span class="string">"1024"</span>,</span><br><span class="line">      <span class="string">"max_open_scroll_context"</span> : <span class="string">"2147483647"</span>,</span><br><span class="line">      <span class="string">"max_buckets"</span> : <span class="string">"-1"</span>,</span><br><span class="line">      <span class="string">"composite_aggregation"</span> : {</span><br><span class="line">        <span class="string">"early_terminal_enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"seek_after_enabled"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"simplify_search_results"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"keep_alive_interval"</span> : <span class="string">"1m"</span>,</span><br><span class="line">      <span class="string">"remote"</span> : {</span><br><span class="line">        <span class="string">"node"</span> : {</span><br><span class="line">          <span class="string">"attr"</span> : <span class="string">""</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"initial_connect_timeout"</span> : <span class="string">"30s"</span>,</span><br><span class="line">        <span class="string">"connect"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"connections_per_cluster"</span> : <span class="string">"3"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"max_keep_alive"</span> : <span class="string">"24h"</span>,</span><br><span class="line">      <span class="string">"composite_aggregations"</span> : {</span><br><span class="line">        <span class="string">"use_global_ordinal"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"highlight"</span> : {</span><br><span class="line">        <span class="string">"term_vector_multi_value"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"default_allow_partial_results"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"low_level_cancellation"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"simplify_aggregation_results"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"default_search_rpc_timeout"</span> : <span class="string">"30000ms"</span>,</span><br><span class="line">      <span class="string">"bucket_expansion_ratio"</span> : <span class="string">"10"</span>,</span><br><span class="line">      <span class="string">"allow_parent_breaker_partial_results"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"default_keep_alive"</span> : <span class="string">"5m"</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"security"</span> : {</span><br><span class="line">      <span class="string">"manager"</span> : {</span><br><span class="line">        <span class="string">"filter_bad_defaults"</span> : <span class="string">"true"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"root"</span> : {</span><br><span class="line">      <span class="string">"routing"</span> : {</span><br><span class="line">        <span class="string">"rebalance"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"ALL"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"client"</span> : {</span><br><span class="line">      <span class="string">"type"</span> : <span class="string">"node"</span>,</span><br><span class="line">      <span class="string">"transport"</span> : {</span><br><span class="line">        <span class="string">"ignore_cluster_name"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"nodes_sampler_interval"</span> : <span class="string">"5s"</span>,</span><br><span class="line">        <span class="string">"sniff"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"ping_timeout"</span> : <span class="string">"5s"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"table_version"</span> : <span class="string">"0"</span>,</span><br><span class="line">    <span class="string">"table"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"xpack"</span> : {</span><br><span class="line">      <span class="string">"watcher"</span> : {</span><br><span class="line">        <span class="string">"execution"</span> : {</span><br><span class="line">          <span class="string">"scroll"</span> : {</span><br><span class="line">            <span class="string">"size"</span> : <span class="string">"0"</span>,</span><br><span class="line">            <span class="string">"timeout"</span> : <span class="string">""</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"default_throttle_period"</span> : <span class="string">"5s"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"internal"</span> : {</span><br><span class="line">          <span class="string">"ops"</span> : {</span><br><span class="line">            <span class="string">"bulk"</span> : {</span><br><span class="line">              <span class="string">"default_timeout"</span> : <span class="string">""</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"index"</span> : {</span><br><span class="line">              <span class="string">"default_timeout"</span> : <span class="string">""</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"search"</span> : {</span><br><span class="line">              <span class="string">"default_timeout"</span> : <span class="string">""</span></span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"thread_pool"</span> : {</span><br><span class="line">          <span class="string">"queue_size"</span> : <span class="string">"1000"</span>,</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"50"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"index"</span> : {</span><br><span class="line">          <span class="string">"rest"</span> : {</span><br><span class="line">            <span class="string">"direct_access"</span> : <span class="string">""</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"history"</span> : {</span><br><span class="line">          <span class="string">"cleaner_service"</span> : {</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"trigger"</span> : {</span><br><span class="line">          <span class="string">"schedule"</span> : {</span><br><span class="line">            <span class="string">"ticker"</span> : {</span><br><span class="line">              <span class="string">"tick_interval"</span> : <span class="string">"500ms"</span></span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"input"</span> : {</span><br><span class="line">          <span class="string">"search"</span> : {</span><br><span class="line">            <span class="string">"default_timeout"</span> : <span class="string">""</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"encrypt_sensitive_data"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"transform"</span> : {</span><br><span class="line">          <span class="string">"search"</span> : {</span><br><span class="line">            <span class="string">"default_timeout"</span> : <span class="string">""</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"stop"</span> : {</span><br><span class="line">          <span class="string">"timeout"</span> : <span class="string">"30s"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"watch"</span> : {</span><br><span class="line">          <span class="string">"scroll"</span> : {</span><br><span class="line">            <span class="string">"size"</span> : <span class="string">"0"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"require_manual_start"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"bulk"</span> : {</span><br><span class="line">          <span class="string">"concurrent_requests"</span> : <span class="string">"0"</span>,</span><br><span class="line">          <span class="string">"flush_interval"</span> : <span class="string">"1s"</span>,</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"1mb"</span>,</span><br><span class="line">          <span class="string">"actions"</span> : <span class="string">"1"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"actions"</span> : {</span><br><span class="line">          <span class="string">"bulk"</span> : {</span><br><span class="line">            <span class="string">"default_timeout"</span> : <span class="string">""</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"index"</span> : {</span><br><span class="line">            <span class="string">"default_timeout"</span> : <span class="string">""</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"ilm"</span> : {</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"monitoring"</span> : {</span><br><span class="line">        <span class="string">"collection"</span> : {</span><br><span class="line">          <span class="string">"cluster"</span> : {</span><br><span class="line">            <span class="string">"stats"</span> : {</span><br><span class="line">              <span class="string">"timeout"</span> : <span class="string">"10s"</span></span><br><span class="line">            }</span><br><span class="line">          },</span><br><span class="line">          <span class="string">"node"</span> : {</span><br><span class="line">            <span class="string">"stats"</span> : {</span><br><span class="line">              <span class="string">"timeout"</span> : <span class="string">"10s"</span></span><br><span class="line">            }</span><br><span class="line">          },</span><br><span class="line">          <span class="string">"indices"</span> : [ ],</span><br><span class="line">          <span class="string">"ccr"</span> : {</span><br><span class="line">            <span class="string">"stats"</span> : {</span><br><span class="line">              <span class="string">"timeout"</span> : <span class="string">"10s"</span></span><br><span class="line">            }</span><br><span class="line">          },</span><br><span class="line">          <span class="string">"index"</span> : {</span><br><span class="line">            <span class="string">"stats"</span> : {</span><br><span class="line">              <span class="string">"timeout"</span> : <span class="string">"10s"</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"recovery"</span> : {</span><br><span class="line">              <span class="string">"active_only"</span> : <span class="string">"false"</span>,</span><br><span class="line">              <span class="string">"timeout"</span> : <span class="string">"10s"</span></span><br><span class="line">            }</span><br><span class="line">          },</span><br><span class="line">          <span class="string">"interval"</span> : <span class="string">"60s"</span>,</span><br><span class="line">          <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">          <span class="string">"ml"</span> : {</span><br><span class="line">            <span class="string">"job"</span> : {</span><br><span class="line">              <span class="string">"stats"</span> : {</span><br><span class="line">                <span class="string">"timeout"</span> : <span class="string">"10s"</span></span><br><span class="line">              }</span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"history"</span> : {</span><br><span class="line">          <span class="string">"duration"</span> : <span class="string">"168h"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"elasticsearch"</span> : {</span><br><span class="line">          <span class="string">"collection"</span> : {</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"graph"</span> : {</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"rollup"</span> : {</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"task_thread_pool"</span> : {</span><br><span class="line">          <span class="string">"queue_size"</span> : <span class="string">"4"</span>,</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"4"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"sql"</span> : {</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"license"</span> : {</span><br><span class="line">        <span class="string">"self_generated"</span> : {</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"basic"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"logstash"</span> : {</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"notification"</span> : {</span><br><span class="line">        <span class="string">"hipchat"</span> : {</span><br><span class="line">          <span class="string">"host"</span> : <span class="string">""</span>,</span><br><span class="line">          <span class="string">"port"</span> : <span class="string">"443"</span>,</span><br><span class="line">          <span class="string">"default_account"</span> : <span class="string">""</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"pagerduty"</span> : {</span><br><span class="line">          <span class="string">"default_account"</span> : <span class="string">""</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"email"</span> : {</span><br><span class="line">          <span class="string">"default_account"</span> : <span class="string">""</span>,</span><br><span class="line">          <span class="string">"html"</span> : {</span><br><span class="line">            <span class="string">"sanitization"</span> : {</span><br><span class="line">              <span class="string">"allow"</span> : [</span><br><span class="line">                <span class="string">"body"</span>,</span><br><span class="line">                <span class="string">"head"</span>,</span><br><span class="line">                <span class="string">"_tables"</span>,</span><br><span class="line">                <span class="string">"_links"</span>,</span><br><span class="line">                <span class="string">"_blocks"</span>,</span><br><span class="line">                <span class="string">"_formatting"</span>,</span><br><span class="line">                <span class="string">"img:embedded"</span></span><br><span class="line">              ],</span><br><span class="line">              <span class="string">"disallow"</span> : [ ],</span><br><span class="line">              <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"reporting"</span> : {</span><br><span class="line">          <span class="string">"retries"</span> : <span class="string">"40"</span>,</span><br><span class="line">          <span class="string">"interval"</span> : <span class="string">"15s"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"jira"</span> : {</span><br><span class="line">          <span class="string">"default_account"</span> : <span class="string">""</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"slack"</span> : {</span><br><span class="line">          <span class="string">"default_account"</span> : <span class="string">""</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"security"</span> : {</span><br><span class="line">        <span class="string">"dls_fls"</span> : {</span><br><span class="line">          <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"transport"</span> : {</span><br><span class="line">          <span class="string">"filter"</span> : {</span><br><span class="line">            <span class="string">"allow"</span> : [ ],</span><br><span class="line">            <span class="string">"deny"</span> : [ ],</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"ssl"</span> : {</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"filter"</span> : {</span><br><span class="line">          <span class="string">"always_allow_bound_address"</span> : <span class="string">"true"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"encryption"</span> : {</span><br><span class="line">          <span class="string">"algorithm"</span> : <span class="string">"AES/CTR/NoPadding"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"audit"</span> : {</span><br><span class="line">          <span class="string">"outputs"</span> : [</span><br><span class="line">            <span class="string">"logfile"</span></span><br><span class="line">          ],</span><br><span class="line">          <span class="string">"index"</span> : {</span><br><span class="line">            <span class="string">"bulk_size"</span> : <span class="string">"1000"</span>,</span><br><span class="line">            <span class="string">"rollover"</span> : <span class="string">"DAILY"</span>,</span><br><span class="line">            <span class="string">"flush_interval"</span> : <span class="string">"1s"</span>,</span><br><span class="line">            <span class="string">"events"</span> : {</span><br><span class="line">              <span class="string">"emit_request_body"</span> : <span class="string">"false"</span>,</span><br><span class="line">              <span class="string">"include"</span> : [</span><br><span class="line">                <span class="string">"ACCESS_DENIED"</span>,</span><br><span class="line">                <span class="string">"ACCESS_GRANTED"</span>,</span><br><span class="line">                <span class="string">"ANONYMOUS_ACCESS_DENIED"</span>,</span><br><span class="line">                <span class="string">"AUTHENTICATION_FAILED"</span>,</span><br><span class="line">                <span class="string">"REALM_AUTHENTICATION_FAILED"</span>,</span><br><span class="line">                <span class="string">"CONNECTION_DENIED"</span>,</span><br><span class="line">                <span class="string">"CONNECTION_GRANTED"</span>,</span><br><span class="line">                <span class="string">"TAMPERED_REQUEST"</span>,</span><br><span class="line">                <span class="string">"RUN_AS_DENIED"</span>,</span><br><span class="line">                <span class="string">"RUN_AS_GRANTED"</span>,</span><br><span class="line">                <span class="string">"AUTHENTICATION_SUCCESS"</span></span><br><span class="line">              ],</span><br><span class="line">              <span class="string">"exclude"</span> : [ ]</span><br><span class="line">            },</span><br><span class="line">            <span class="string">"queue_max_size"</span> : <span class="string">"10000"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"enabled"</span> : <span class="string">"false"</span>,</span><br><span class="line">          <span class="string">"logfile"</span> : {</span><br><span class="line">            <span class="string">"emit_node_id"</span> : <span class="string">"true"</span>,</span><br><span class="line">            <span class="string">"emit_node_host_name"</span> : <span class="string">"false"</span>,</span><br><span class="line">            <span class="string">"emit_node_name"</span> : <span class="string">"true"</span>,</span><br><span class="line">            <span class="string">"events"</span> : {</span><br><span class="line">              <span class="string">"emit_request_body"</span> : <span class="string">"false"</span>,</span><br><span class="line">              <span class="string">"include"</span> : [</span><br><span class="line">                <span class="string">"ACCESS_DENIED"</span>,</span><br><span class="line">                <span class="string">"ACCESS_GRANTED"</span>,</span><br><span class="line">                <span class="string">"ANONYMOUS_ACCESS_DENIED"</span>,</span><br><span class="line">                <span class="string">"AUTHENTICATION_FAILED"</span>,</span><br><span class="line">                <span class="string">"CONNECTION_DENIED"</span>,</span><br><span class="line">                <span class="string">"TAMPERED_REQUEST"</span>,</span><br><span class="line">                <span class="string">"RUN_AS_DENIED"</span>,</span><br><span class="line">                <span class="string">"RUN_AS_GRANTED"</span></span><br><span class="line">              ],</span><br><span class="line">              <span class="string">"exclude"</span> : [ ]</span><br><span class="line">            },</span><br><span class="line">            <span class="string">"prefix"</span> : {</span><br><span class="line">              <span class="string">"emit_node_host_name"</span> : <span class="string">"false"</span>,</span><br><span class="line">              <span class="string">"emit_node_name"</span> : <span class="string">"true"</span>,</span><br><span class="line">              <span class="string">"emit_node_host_address"</span> : <span class="string">"false"</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"emit_node_host_address"</span> : <span class="string">"false"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"authc"</span> : {</span><br><span class="line">          <span class="string">"password_hashing"</span> : {</span><br><span class="line">            <span class="string">"algorithm"</span> : <span class="string">"bcrypt"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"success_cache"</span> : {</span><br><span class="line">            <span class="string">"size"</span> : <span class="string">"10000"</span>,</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"false"</span>,</span><br><span class="line">            <span class="string">"expire_after_access"</span> : <span class="string">"1h"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"api_key"</span> : {</span><br><span class="line">            <span class="string">"cache"</span> : {</span><br><span class="line">              <span class="string">"hash_algo"</span> : <span class="string">"ssha256"</span>,</span><br><span class="line">              <span class="string">"max_keys"</span> : <span class="string">"10000"</span>,</span><br><span class="line">              <span class="string">"ttl"</span> : <span class="string">"24h"</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"delete"</span> : {</span><br><span class="line">              <span class="string">"interval"</span> : <span class="string">"24h"</span>,</span><br><span class="line">              <span class="string">"timeout"</span> : <span class="string">"-1"</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"false"</span>,</span><br><span class="line">            <span class="string">"hashing"</span> : {</span><br><span class="line">              <span class="string">"algorithm"</span> : <span class="string">"pbkdf2"</span></span><br><span class="line">            }</span><br><span class="line">          },</span><br><span class="line">          <span class="string">"anonymous"</span> : {</span><br><span class="line">            <span class="string">"authz_exception"</span> : <span class="string">"true"</span>,</span><br><span class="line">            <span class="string">"roles"</span> : [ ],</span><br><span class="line">            <span class="string">"username"</span> : <span class="string">"_anonymous"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"run_as"</span> : {</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"reserved_realm"</span> : {</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"false"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"token"</span> : {</span><br><span class="line">            <span class="string">"compat"</span> : {</span><br><span class="line">              <span class="string">"enabled"</span> : <span class="string">"false"</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"delete"</span> : {</span><br><span class="line">              <span class="string">"interval"</span> : <span class="string">"30m"</span>,</span><br><span class="line">              <span class="string">"timeout"</span> : <span class="string">"-1"</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"false"</span>,</span><br><span class="line">            <span class="string">"thread_pool"</span> : {</span><br><span class="line">              <span class="string">"queue_size"</span> : <span class="string">"1000"</span>,</span><br><span class="line">              <span class="string">"size"</span> : <span class="string">"1"</span></span><br><span class="line">            },</span><br><span class="line">            <span class="string">"timeout"</span> : <span class="string">"20m"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"fips_mode"</span> : {</span><br><span class="line">          <span class="string">"enabled"</span> : <span class="string">"false"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"encryption_key"</span> : {</span><br><span class="line">          <span class="string">"length"</span> : <span class="string">"128"</span>,</span><br><span class="line">          <span class="string">"algorithm"</span> : <span class="string">"AES"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"http"</span> : {</span><br><span class="line">          <span class="string">"filter"</span> : {</span><br><span class="line">            <span class="string">"allow"</span> : [ ],</span><br><span class="line">            <span class="string">"deny"</span> : [ ],</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"ssl"</span> : {</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"false"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"automata"</span> : {</span><br><span class="line">          <span class="string">"max_determinized_states"</span> : <span class="string">"100000"</span>,</span><br><span class="line">          <span class="string">"cache"</span> : {</span><br><span class="line">            <span class="string">"size"</span> : <span class="string">"10000"</span>,</span><br><span class="line">            <span class="string">"ttl"</span> : <span class="string">"48h"</span>,</span><br><span class="line">            <span class="string">"enabled"</span> : <span class="string">"true"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"user"</span> : null,</span><br><span class="line">        <span class="string">"authz"</span> : {</span><br><span class="line">          <span class="string">"store"</span> : {</span><br><span class="line">            <span class="string">"roles"</span> : {</span><br><span class="line">              <span class="string">"index"</span> : {</span><br><span class="line">                <span class="string">"cache"</span> : {</span><br><span class="line">                  <span class="string">"ttl"</span> : <span class="string">"20m"</span>,</span><br><span class="line">                  <span class="string">"max_size"</span> : <span class="string">"10000"</span></span><br><span class="line">                }</span><br><span class="line">              },</span><br><span class="line">              <span class="string">"auth_indices_cache"</span> : {</span><br><span class="line">                <span class="string">"enable"</span> : <span class="string">"true"</span></span><br><span class="line">              },</span><br><span class="line">              <span class="string">"cache"</span> : {</span><br><span class="line">                <span class="string">"max_size"</span> : <span class="string">"10000"</span></span><br><span class="line">              },</span><br><span class="line">              <span class="string">"negative_lookup_cache"</span> : {</span><br><span class="line">                <span class="string">"max_size"</span> : <span class="string">"10000"</span></span><br><span class="line">              },</span><br><span class="line">              <span class="string">"max_auth_indices_cache_count"</span> : <span class="string">"10000"</span>,</span><br><span class="line">              <span class="string">"field_permissions"</span> : {</span><br><span class="line">                <span class="string">"cache"</span> : {</span><br><span class="line">                  <span class="string">"max_size_in_bytes"</span> : <span class="string">"104857600"</span></span><br><span class="line">                }</span><br><span class="line">              }</span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"ccr"</span> : {</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"ccr_thread_pool"</span> : {</span><br><span class="line">          <span class="string">"queue_size"</span> : <span class="string">"100"</span>,</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"32"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"http"</span> : {</span><br><span class="line">        <span class="string">"default_connection_timeout"</span> : <span class="string">"10s"</span>,</span><br><span class="line">        <span class="string">"proxy"</span> : {</span><br><span class="line">          <span class="string">"host"</span> : <span class="string">""</span>,</span><br><span class="line">          <span class="string">"scheme"</span> : <span class="string">""</span>,</span><br><span class="line">          <span class="string">"port"</span> : <span class="string">"0"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"default_read_timeout"</span> : <span class="string">"10s"</span>,</span><br><span class="line">        <span class="string">"max_response_size"</span> : <span class="string">"10mb"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"ml"</span> : {</span><br><span class="line">        <span class="string">"utility_thread_pool"</span> : {</span><br><span class="line">          <span class="string">"queue_size"</span> : <span class="string">"500"</span>,</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"80"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"max_anomaly_records"</span> : <span class="string">"500"</span>,</span><br><span class="line">        <span class="string">"enable_config_migration"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"max_open_jobs"</span> : <span class="string">"20"</span>,</span><br><span class="line">        <span class="string">"min_disk_space_off_heap"</span> : <span class="string">"5gb"</span>,</span><br><span class="line">        <span class="string">"node_concurrent_job_allocations"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"max_model_memory_limit"</span> : <span class="string">"0b"</span>,</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"max_lazy_ml_nodes"</span> : <span class="string">"0"</span>,</span><br><span class="line">        <span class="string">"max_machine_memory_percent"</span> : <span class="string">"30"</span>,</span><br><span class="line">        <span class="string">"autodetect_process"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"datafeed_thread_pool"</span> : {</span><br><span class="line">          <span class="string">"queue_size"</span> : <span class="string">"200"</span>,</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"20"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"process_connect_timeout"</span> : <span class="string">"10s"</span>,</span><br><span class="line">        <span class="string">"autodetect_thread_pool"</span> : {</span><br><span class="line">          <span class="string">"queue_size"</span> : <span class="string">"80"</span>,</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"80"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"auth.disable"</span> : <span class="string">"true"</span>,</span><br><span class="line">    <span class="string">"netty"</span> : {</span><br><span class="line">      <span class="string">"breaker"</span> : {</span><br><span class="line">        <span class="string">"limit"</span> : <span class="string">"95%"</span>,</span><br><span class="line">        <span class="string">"type"</span> : <span class="string">"memory"</span>,</span><br><span class="line">        <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"timeout"</span> : <span class="string">"30000ms"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"rest"</span> : {</span><br><span class="line">      <span class="string">"action"</span> : {</span><br><span class="line">        <span class="string">"multi"</span> : {</span><br><span class="line">          <span class="string">"allow_explicit_index"</span> : <span class="string">"true"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"max"</span> : {</span><br><span class="line">      <span class="string">"anomaly"</span> : {</span><br><span class="line">        <span class="string">"records"</span> : <span class="string">"500"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"base_path"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"monitor"</span> : {</span><br><span class="line">      <span class="string">"jvm"</span> : {</span><br><span class="line">        <span class="string">"gc"</span> : {</span><br><span class="line">          <span class="string">"enabled"</span> : <span class="string">"true"</span>,</span><br><span class="line">          <span class="string">"overhead"</span> : {</span><br><span class="line">            <span class="string">"warn"</span> : <span class="string">"50"</span>,</span><br><span class="line">            <span class="string">"debug"</span> : <span class="string">"10"</span>,</span><br><span class="line">            <span class="string">"info"</span> : <span class="string">"25"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"refresh_interval"</span> : <span class="string">"1s"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"refresh_interval"</span> : <span class="string">"1s"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"process"</span> : {</span><br><span class="line">        <span class="string">"refresh_interval"</span> : <span class="string">"1s"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"os"</span> : {</span><br><span class="line">        <span class="string">"refresh_interval"</span> : <span class="string">"1s"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"fs"</span> : {</span><br><span class="line">        <span class="string">"refresh_interval"</span> : <span class="string">"1s"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"transport"</span> : {</span><br><span class="line">      <span class="string">"tcp"</span> : {</span><br><span class="line">        <span class="string">"reuse_address"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"connect_timeout"</span> : <span class="string">"30s"</span>,</span><br><span class="line">        <span class="string">"compress"</span> : <span class="string">"false"</span>,</span><br><span class="line">        <span class="string">"port"</span> : <span class="string">"9300"</span>,</span><br><span class="line">        <span class="string">"no_delay"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"keep_alive"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"receive_buffer_size"</span> : <span class="string">"-1b"</span>,</span><br><span class="line">        <span class="string">"send_buffer_size"</span> : <span class="string">"-1b"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"bind_host"</span> : [ ],</span><br><span class="line">      <span class="string">"connect_timeout"</span> : <span class="string">"30s"</span>,</span><br><span class="line">      <span class="string">"compress"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"ping_schedule"</span> : <span class="string">"-1"</span>,</span><br><span class="line">      <span class="string">"connections_per_node"</span> : {</span><br><span class="line">        <span class="string">"recovery"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"state"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"bulk"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"reg"</span> : <span class="string">"6"</span>,</span><br><span class="line">        <span class="string">"ping"</span> : <span class="string">"1"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"tracer"</span> : {</span><br><span class="line">        <span class="string">"include"</span> : [ ],</span><br><span class="line">        <span class="string">"exclude"</span> : [</span><br><span class="line">          <span class="string">"internal:discovery/zen/fd*"</span>,</span><br><span class="line">          <span class="string">"cluster:monitor/nodes/liveness"</span></span><br><span class="line">        ]</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"type"</span> : <span class="string">"security4"</span>,</span><br><span class="line">      <span class="string">"type.default"</span> : <span class="string">"netty4"</span>,</span><br><span class="line">      <span class="string">"features"</span> : {</span><br><span class="line">        <span class="string">"x-pack"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"port"</span> : <span class="string">"9300"</span>,</span><br><span class="line">      <span class="string">"host"</span> : [ ],</span><br><span class="line">      <span class="string">"publish_port"</span> : <span class="string">"-1"</span>,</span><br><span class="line">      <span class="string">"connection"</span> : {</span><br><span class="line">        <span class="string">"max_corrupted_msg_bytes"</span> : <span class="string">"512"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"tcp_no_delay"</span> : <span class="string">"true"</span>,</span><br><span class="line">      <span class="string">"publish_host"</span> : [ ],</span><br><span class="line">      <span class="string">"netty"</span> : {</span><br><span class="line">        <span class="string">"receive_predictor_size"</span> : <span class="string">"64kb"</span>,</span><br><span class="line">        <span class="string">"receive_predictor_max"</span> : <span class="string">"64kb"</span>,</span><br><span class="line">        <span class="string">"worker_count"</span> : <span class="string">"32"</span>,</span><br><span class="line">        <span class="string">"receive_predictor_min"</span> : <span class="string">"64kb"</span>,</span><br><span class="line">        <span class="string">"boss_count"</span> : <span class="string">"1"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"preferred_master_name"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"indices"</span> : {</span><br><span class="line">      <span class="string">"cache"</span> : {</span><br><span class="line">        <span class="string">"cleanup_interval"</span> : <span class="string">"1m"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"mapping"</span> : {</span><br><span class="line">        <span class="string">"dynamic_timeout"</span> : <span class="string">"30s"</span>,</span><br><span class="line">        <span class="string">"put"</span> : {</span><br><span class="line">          <span class="string">"priority"</span> : <span class="string">"URGENT"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"max_in_flight_updates"</span> : <span class="string">"10"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"memory"</span> : {</span><br><span class="line">        <span class="string">"interval"</span> : <span class="string">"5s"</span>,</span><br><span class="line">        <span class="string">"max_index_buffer_size"</span> : <span class="string">"-1"</span>,</span><br><span class="line">        <span class="string">"shard_inactive_time"</span> : <span class="string">"5m"</span>,</span><br><span class="line">        <span class="string">"index_buffer_size"</span> : <span class="string">"15%"</span>,</span><br><span class="line">        <span class="string">"min_index_buffer_size"</span> : <span class="string">"48mb"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"breaker"</span> : {</span><br><span class="line">        <span class="string">"request"</span> : {</span><br><span class="line">          <span class="string">"limit"</span> : <span class="string">"60%"</span>,</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"memory"</span>,</span><br><span class="line">          <span class="string">"overhead"</span> : <span class="string">"1.0"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"search"</span> : {</span><br><span class="line">          <span class="string">"throttle"</span> : <span class="string">"90%"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"total"</span> : {</span><br><span class="line">          <span class="string">"limit"</span> : <span class="string">"90%"</span>,</span><br><span class="line">          <span class="string">"use_real_memory"</span> : <span class="string">"true"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"fielddata"</span> : {</span><br><span class="line">          <span class="string">"limit"</span> : <span class="string">"20%"</span>,</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"memory"</span>,</span><br><span class="line">          <span class="string">"overhead"</span> : <span class="string">"1.03"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"single_request"</span> : {</span><br><span class="line">          <span class="string">"limit"</span> : <span class="string">"20%"</span>,</span><br><span class="line">          <span class="string">"type"</span> : <span class="string">"memory"</span>,</span><br><span class="line">          <span class="string">"overhead"</span> : <span class="string">"1.0"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"accounting"</span> : {</span><br><span class="line">          <span class="string">"limit"</span> : <span class="string">"100%"</span>,</span><br><span class="line">          <span class="string">"overhead"</span> : <span class="string">"1.0"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"bulk"</span> : {</span><br><span class="line">          <span class="string">"throttle"</span> : <span class="string">"90%"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"type"</span> : <span class="string">"hierarchy"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"segment_memory"</span> : {</span><br><span class="line">        <span class="string">"off_heap"</span> : {</span><br><span class="line">          <span class="string">"segment_count"</span> : <span class="string">"1"</span>,</span><br><span class="line">          <span class="string">"min_size"</span> : <span class="string">"500mb"</span>,</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"500mb"</span>,</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"false"</span>,</span><br><span class="line">          <span class="string">"max_size"</span> : <span class="string">"32gb"</span>,</span><br><span class="line">          <span class="string">"min_value_size"</span> : <span class="string">"512"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"query"</span> : {</span><br><span class="line">        <span class="string">"bool"</span> : {</span><br><span class="line">          <span class="string">"max_clause_count"</span> : <span class="string">"1024"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"query_string"</span> : {</span><br><span class="line">          <span class="string">"analyze_wildcard"</span> : <span class="string">"false"</span>,</span><br><span class="line">          <span class="string">"allowLeadingWildcard"</span> : <span class="string">"true"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"admin"</span> : {</span><br><span class="line">        <span class="string">"filtered_fields"</span> : <span class="string">"true"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"allow_multi_types"</span> : <span class="string">"false"</span>,</span><br><span class="line">      <span class="string">"recovery"</span> : {</span><br><span class="line">        <span class="string">"recovery_activity_timeout"</span> : <span class="string">"1800000ms"</span>,</span><br><span class="line">        <span class="string">"retry_delay_network"</span> : <span class="string">"5s"</span>,</span><br><span class="line">        <span class="string">"internal_action_timeout"</span> : <span class="string">"15m"</span>,</span><br><span class="line">        <span class="string">"retry_delay_state_sync"</span> : <span class="string">"500ms"</span>,</span><br><span class="line">        <span class="string">"internal_action_long_timeout"</span> : <span class="string">"1800000ms"</span>,</span><br><span class="line">        <span class="string">"max_concurrent_file_chunks"</span> : <span class="string">"1"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"requests"</span> : {</span><br><span class="line">        <span class="string">"cache"</span> : {</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"1%"</span>,</span><br><span class="line">          <span class="string">"expire"</span> : <span class="string">"0ms"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"store"</span> : {</span><br><span class="line">        <span class="string">"delete"</span> : {</span><br><span class="line">          <span class="string">"shard"</span> : {</span><br><span class="line">            <span class="string">"timeout"</span> : <span class="string">"30s"</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"analysis"</span> : {</span><br><span class="line">        <span class="string">"hunspell"</span> : {</span><br><span class="line">          <span class="string">"dictionary"</span> : {</span><br><span class="line">            <span class="string">"ignore_case"</span> : <span class="string">"false"</span>,</span><br><span class="line">            <span class="string">"lazy"</span> : <span class="string">"false"</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"queries"</span> : {</span><br><span class="line">        <span class="string">"cache"</span> : {</span><br><span class="line">          <span class="string">"count"</span> : <span class="string">"300"</span>,</span><br><span class="line">          <span class="string">"max_times_of_leading_cost"</span> : <span class="string">"250"</span>,</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"5%"</span>,</span><br><span class="line">          <span class="string">"all_segments"</span> : <span class="string">"false"</span>,</span><br><span class="line">          <span class="string">"max_doc_count"</span> : <span class="string">"5000000"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"lifecycle"</span> : {</span><br><span class="line">        <span class="string">"poll_interval"</span> : <span class="string">"10m"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"fielddata"</span> : {</span><br><span class="line">        <span class="string">"cache"</span> : {</span><br><span class="line">          <span class="string">"size"</span> : <span class="string">"15%"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"bulk"</span> : {</span><br><span class="line">        <span class="string">"reject_illegal_time_data"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"true"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"plugin"</span> : {</span><br><span class="line">      <span class="string">"mandatory"</span> : [ ]</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"metric"</span> : {</span><br><span class="line">      <span class="string">"create_deduplicate_optimize"</span> : {</span><br><span class="line">        <span class="string">"enable"</span> : <span class="string">"true"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"discovery"</span> : {</span><br><span class="line">      <span class="string">"type"</span> : <span class="string">"zen"</span>,</span><br><span class="line">      <span class="string">"zen"</span> : {</span><br><span class="line">        <span class="string">"commit_timeout"</span> : <span class="string">"30s"</span>,</span><br><span class="line">        <span class="string">"no_master_block"</span> : <span class="string">"write"</span>,</span><br><span class="line">        <span class="string">"join_retry_delay"</span> : <span class="string">"100ms"</span>,</span><br><span class="line">        <span class="string">"join_retry_attempts"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"ping"</span> : {</span><br><span class="line">          <span class="string">"unicast"</span> : {</span><br><span class="line">            <span class="string">"concurrent_connects"</span> : <span class="string">"10"</span>,</span><br><span class="line">            <span class="string">"hosts"</span> : [</span><br><span class="line">              <span class="string">"9.20.83.249:9300"</span>,</span><br><span class="line">              <span class="string">"9.20.85.27:9300"</span>,</span><br><span class="line">              <span class="string">"9.20.91.71:9300"</span>,</span><br><span class="line">              <span class="string">"9.20.86.14:9300"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">"hosts.resolve_timeout"</span> : <span class="string">"5s"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"master_election"</span> : {</span><br><span class="line">          <span class="string">"ignore_non_master_pings"</span> : <span class="string">"false"</span>,</span><br><span class="line">          <span class="string">"wait_for_joins_timeout"</span> : <span class="string">"30000ms"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"send_leave_request"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"ping_timeout"</span> : <span class="string">"3s"</span>,</span><br><span class="line">        <span class="string">"join_timeout"</span> : <span class="string">"60000ms"</span>,</span><br><span class="line">        <span class="string">"publish_diff"</span> : {</span><br><span class="line">          <span class="string">"enable"</span> : <span class="string">"true"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"publish"</span> : {</span><br><span class="line">          <span class="string">"max_pending_cluster_states"</span> : <span class="string">"25"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"minimum_master_nodes"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"hosts_provider"</span> : [ ],</span><br><span class="line">        <span class="string">"publish_timeout"</span> : <span class="string">"30s"</span>,</span><br><span class="line">        <span class="string">"fd"</span> : {</span><br><span class="line">          <span class="string">"connect_on_network_disconnect"</span> : <span class="string">"false"</span>,</span><br><span class="line">          <span class="string">"ping_interval"</span> : <span class="string">"1s"</span>,</span><br><span class="line">          <span class="string">"ping_retries"</span> : <span class="string">"3"</span>,</span><br><span class="line">          <span class="string">"register_connection_listener"</span> : <span class="string">"true"</span>,</span><br><span class="line">          <span class="string">"ping_timeout"</span> : <span class="string">"30s"</span></span><br><span class="line">        },</span><br><span class="line">        <span class="string">"max_pings_from_another_master"</span> : <span class="string">"3"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"initial_state_timeout"</span> : <span class="string">"30s"</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">"access_key_secret"</span> : <span class="string">""</span>,</span><br><span class="line">    <span class="string">"gateway"</span> : {</span><br><span class="line">      <span class="string">"recover_after_master_nodes"</span> : <span class="string">"0"</span>,</span><br><span class="line">      <span class="string">"expected_nodes"</span> : <span class="string">"-1"</span>,</span><br><span class="line">      <span class="string">"recover_after_data_nodes"</span> : <span class="string">"-1"</span>,</span><br><span class="line">      <span class="string">"expected_data_nodes"</span> : <span class="string">"-1"</span>,</span><br><span class="line">      <span class="string">"recover_after_time"</span> : <span class="string">"0ms"</span>,</span><br><span class="line">      <span class="string">"expected_master_nodes"</span> : <span class="string">"-1"</span>,</span><br><span class="line">      <span class="string">"recover_after_nodes"</span> : <span class="string">"-1"</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;sp</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>桶分析</title>
    <link href="http://example.com/2023/03/14/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/5.tong-fen-xi/"/>
    <id>http://example.com/2023/03/14/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/5.tong-fen-xi/</id>
    <published>2023-03-14T12:55:28.644Z</published>
    <updated>2023-04-28T09:25:47.280Z</updated>
    
    <content type="html"><![CDATA[<h2 id="桶分析"><a href="#桶分析" class="headerlink" title="桶分析"></a>桶分析</h2><p>聚合查询通用结构</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># aggs聚合查询</span></span><br><span class="line"><span class="comment"># NAME 聚合的名称</span></span><br><span class="line"><span class="comment"># AGG_TYPE聚合的类型</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line"><span class="string">"size"</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"NAME"</span>: {</span><br><span class="line">      <span class="string">"AGG_TYPE"</span>: {}</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol><li><h3 id="使用post-filter时查询时不会影响聚合结果"><a href="#使用post-filter时查询时不会影响聚合结果" class="headerlink" title="使用post_filter时查询时不会影响聚合结果"></a>使用post_filter时查询时不会影响聚合结果</h3><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 想让聚合和查询互不影响时，使用post_filter</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"tags_bucket"</span>: {</span><br><span class="line">      <span class="string">"terms"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"tags.keyword"</span>,</span><br><span class="line">        <span class="string">"size"</span>: <span class="number">10</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="string">"post_filter"</span>: {</span><br><span class="line">    <span class="string">"term"</span>: {</span><br><span class="line">      <span class="string">"tags.keyword"</span>: <span class="string">"性价比"</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h3 id="分桶聚合"><a href="#分桶聚合" class="headerlink" title="分桶聚合"></a>分桶聚合</h3><p>类似mysql数据库中的group by之后计算，按照某种维度进行分桶，计算数量信息</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 求最大值、最小值、均值、数量、求和</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>, </span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"max_price"</span>: {</span><br><span class="line">      <span class="string">"max"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"avg_price"</span>: {</span><br><span class="line">      <span class="string">"avg"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"min_price"</span>: {</span><br><span class="line">      <span class="string">"min"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"count_price"</span>: {</span><br><span class="line">      <span class="string">"value_count"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"sum_price"</span>: {</span><br><span class="line">      <span class="string">"sum"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># stats求五个值</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"price_stats"</span>: {</span><br><span class="line">      <span class="string">"stats"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol><li><strong>cardinality</strong>：根据某个字段去重之后计算数量</li></ol></li><li><h3 id="指标聚合"><a href="#指标聚合" class="headerlink" title="指标聚合"></a>指标聚合</h3><p>根据某种metric做指标分析：</p><ul><li><p>Avg：平均值</p></li><li><p>Max：最大值</p></li><li><p>Min：最小值</p></li><li><p>Sum：求和</p></li><li><p>Cardinality：基数（去重）</p></li><li><p>Value Count计数</p></li><li><p>Stats统计聚合</p></li><li><p>Top Hits聚合</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算平均分类的平均价格</span></span><br><span class="line"><span class="comment"># 1.先根据类别分组。2.再计算平均价格</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"type_bucket"</span>: {</span><br><span class="line">      <span class="string">"terms"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"type.keyword"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"aggs"</span>: {</span><br><span class="line">        <span class="string">"price"</span>: {</span><br><span class="line">          <span class="string">"avg"</span>: {</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><h3 id="管道聚合"><a href="#管道聚合" class="headerlink" title="管道聚合"></a>管道聚合</h3><p>对聚合的结果做二次聚合，比如统计平均价格最低的商品分类：先根据商品类别进行分类求平均值，再计算平均值最小的类别。</p><p>语法：buckets_path</p></li></ol><p>​<strong>buckets_path</strong>：统计的对象必须为Object，意味着只能在当前计算值的上层，嵌套两层进行计算。支持七种</p><ol><li><strong>min_bucket</strong>：最小值</li><li><strong>max_bucket</strong>：最大值</li><li><strong>avg_bucket</strong>：平均值</li><li><strong>percentiles_bucket</strong>：分位值</li><li><strong>sum_bucket</strong>：求和</li><li><strong>extended_stats_bucket</strong>：最小最大、均值等信息</li><li><strong>stats_bucket</strong>：最小最大均值等</li><li>使用</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 管道聚合</span></span><br><span class="line"><span class="comment"># 先根据类型分桶，求出价格的均值</span></span><br><span class="line"><span class="comment"># 再将计算出的桶结果作为管道进行二次运算</span></span><br><span class="line"><span class="comment"># 将哪个bucket作为管道就跟哪一层平级</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"type_bucket"</span>: {</span><br><span class="line">      <span class="string">"terms"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"type.keyword"</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"aggs"</span>: {</span><br><span class="line">        <span class="string">"price_bucket"</span>: {</span><br><span class="line">          <span class="string">"avg"</span>: {</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"minbucket"</span>: {</span><br><span class="line">      <span class="string">"min_bucket"</span>: {</span><br><span class="line">        <span class="string">"buckets_path"</span>: <span class="string">"type_bucket&gt;price_bucket"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"percentile_ranks_minbucket"</span>: {</span><br><span class="line">      <span class="string">"percentiles_bucket"</span>: {</span><br><span class="line">        <span class="string">"buckets_path"</span>: <span class="string">"type_bucket&gt;price_bucket"</span>,</span><br><span class="line">        <span class="string">"percents"</span>: [<span class="number">10</span>,<span class="number">95</span>,<span class="number">99</span>]</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先根据类型分组，再根据lv分级，最后计算最大值、最小值、平均值</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"group_by_type"</span>: {</span><br><span class="line">      <span class="string">"terms"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"type.keyword"</span>,</span><br><span class="line">        <span class="string">"size"</span>: <span class="number">30</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"aggs"</span>: {</span><br><span class="line">        <span class="string">"group_by_lv"</span>: {</span><br><span class="line">          <span class="string">"terms"</span>: {</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"lv.keyword"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"aggs"</span>: {</span><br><span class="line">            <span class="string">"price_stats"</span>: {</span><br><span class="line">              <span class="string">"stats"</span>: {</span><br><span class="line">                <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">              }</span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"group_by_type"</span>: {</span><br><span class="line">      <span class="string">"terms"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"type.keyword"</span>,</span><br><span class="line">        <span class="string">"size"</span>: <span class="number">30</span></span><br><span class="line">      },</span><br><span class="line">      <span class="string">"aggs"</span>: {</span><br><span class="line">        <span class="string">"group_by_lv"</span>: {</span><br><span class="line">          <span class="string">"terms"</span>: {</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"lv.keyword"</span></span><br><span class="line">          },</span><br><span class="line">          <span class="string">"aggs"</span>: {</span><br><span class="line">            <span class="string">"avg_price"</span>: {</span><br><span class="line">              <span class="string">"avg"</span>: {</span><br><span class="line">                <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">              }</span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"min_bucket"</span>:{</span><br><span class="line">          <span class="string">"min_bucket"</span>: {</span><br><span class="line">            <span class="string">"buckets_path"</span>: <span class="string">"group_by_lv&gt;avg_price"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"max_bucket"</span>:{</span><br><span class="line">          <span class="string">"max_bucket"</span>: {</span><br><span class="line">            <span class="string">"buckets_path"</span>: <span class="string">"group_by_lv&gt;avg_price"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"avg_bucket"</span>:{</span><br><span class="line">          <span class="string">"avg_bucket"</span>: {</span><br><span class="line">            <span class="string">"buckets_path"</span>: <span class="string">"group_by_lv&gt;avg_price"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"percentiles_buckets"</span>:{</span><br><span class="line">          <span class="string">"percentiles_bucket"</span>: {</span><br><span class="line">            <span class="string">"buckets_path"</span>: <span class="string">"group_by_lv&gt;avg_price"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"sum_buckets"</span>:{</span><br><span class="line">          <span class="string">"sum_bucket"</span>: {</span><br><span class="line">            <span class="string">"buckets_path"</span>: <span class="string">"group_by_lv&gt;avg_price"</span></span><br><span class="line">          }</span><br><span class="line">        },</span><br><span class="line">        <span class="string">"extended_stats_bucket"</span>:{</span><br><span class="line">          <span class="string">"extended_stats_bucket"</span>: {</span><br><span class="line">            <span class="string">"buckets_path"</span>: <span class="string">"group_by_lv&gt;avg_price"</span></span><br><span class="line">          }</span><br><span class="line">        },<span class="string">"stats_buckets"</span>:{</span><br><span class="line">          <span class="string">"stats_bucket"</span>: {</span><br><span class="line">            <span class="string">"buckets_path"</span>: <span class="string">"group_by_lv&gt;avg_price"</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><h5 id="在聚合查询中嵌套global"><a href="#在聚合查询中嵌套global" class="headerlink" title="在聚合查询中嵌套global"></a>在聚合查询中嵌套global</h5></li></ul><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用global时可以不受外围查询条件影响，直接聚合所有数据,例如筛选出&gt;4000数据的最大值，再查所有数据的平均值</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"range"</span>: {</span><br><span class="line">      <span class="string">"price"</span>: {</span><br><span class="line">        <span class="string">"gte"</span>: <span class="number">4000</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"max_price"</span>: {</span><br><span class="line">      <span class="string">"max"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"all_avg_price"</span>: {</span><br><span class="line">      <span class="string">"global"</span>: {},</span><br><span class="line">      <span class="string">"aggs"</span>: {</span><br><span class="line">        <span class="string">"avg_price"</span>: {</span><br><span class="line">          <span class="string">"avg"</span>: {</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><h5 id="在分桶查询中嵌套filter"><a href="#在分桶查询中嵌套filter" class="headerlink" title="在分桶查询中嵌套filter"></a>在分桶查询中嵌套filter</h5><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在聚合语句中嵌套filter，可以在聚合之前再单独增加筛选条件</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"query"</span>: {</span><br><span class="line">    <span class="string">"range"</span>: {</span><br><span class="line">      <span class="string">"price"</span>: {</span><br><span class="line">        <span class="string">"gte"</span>: <span class="number">4000</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"max_price"</span>: {</span><br><span class="line">      <span class="string">"max"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">      }</span><br><span class="line">    },</span><br><span class="line">    <span class="string">"muti_avg_price"</span>: {</span><br><span class="line">      <span class="string">"filter"</span>: {</span><br><span class="line">        <span class="string">"range"</span>: {</span><br><span class="line">          <span class="string">"price"</span>: {</span><br><span class="line">            <span class="string">"lte"</span>: <span class="number">3000</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"aggs"</span>: {</span><br><span class="line">        <span class="string">"avg_price"</span>: {</span><br><span class="line">          <span class="string">"avg"</span>: {</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="对分桶结果进行排序"><a href="#对分桶结果进行排序" class="headerlink" title="对分桶结果进行排序"></a>对分桶结果进行排序</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对分桶结果排序</span></span><br><span class="line"><span class="comment"># _count:按照分桶的数量排序</span></span><br><span class="line"><span class="comment"># _可以:按照字典序排列</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"tags_aggs"</span>:{</span><br><span class="line">      <span class="string">"terms"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"tags.keyword"</span>,</span><br><span class="line">        <span class="string">"size"</span>: <span class="number">30</span>,</span><br><span class="line">        <span class="string">"order"</span>: {</span><br><span class="line">          <span class="string">"_count"</span>: <span class="string">"asc"</span>,</span><br><span class="line">          <span class="string">"_key"</span>: <span class="string">"asc"</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="嵌套分桶排序方式"><a href="#嵌套分桶排序方式" class="headerlink" title="嵌套分桶排序方式"></a>嵌套分桶排序方式</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对分桶结果排序</span></span><br><span class="line"><span class="comment"># _count:按照分桶的数量排序</span></span><br><span class="line">GET product/_search?search_type=dfs_query_then_fetch</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"tags_aggs"</span>:{</span><br><span class="line">      <span class="string">"terms"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"type.keyword"</span>,</span><br><span class="line">        <span class="string">"size"</span>: <span class="number">30</span>,</span><br><span class="line">        <span class="string">"order"</span>: {</span><br><span class="line">          <span class="string">"_count"</span>: <span class="string">"asc"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"aggs"</span>: {</span><br><span class="line">        <span class="string">"group_by_lv"</span>: {</span><br><span class="line">          <span class="string">"terms"</span>: {</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"lv.keyword"</span>,</span><br><span class="line">            <span class="string">"order"</span>: {</span><br><span class="line">              <span class="string">"_count"</span>: <span class="string">"desc"</span></span><br><span class="line">            }</span><br><span class="line">            </span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="父桶根据子桶的聚合结果排序"><a href="#父桶根据子桶的聚合结果排序" class="headerlink" title="父桶根据子桶的聚合结果排序"></a>父桶根据子桶的聚合结果排序</h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 父桶根据子桶的聚合结果排序</span></span><br><span class="line">GET product/_search</span><br><span class="line">{</span><br><span class="line">  <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="string">"aggs"</span>: {</span><br><span class="line">    <span class="string">"tags_aggs"</span>: {</span><br><span class="line">      <span class="string">"terms"</span>: {</span><br><span class="line">        <span class="string">"field"</span>: <span class="string">"type.keyword"</span>,</span><br><span class="line">        <span class="string">"order"</span>: {</span><br><span class="line">          <span class="string">"agg_stats&gt;stats_bucket.min"</span>: <span class="string">"desc"</span></span><br><span class="line">        }</span><br><span class="line">      },</span><br><span class="line">      <span class="string">"aggs"</span>: {</span><br><span class="line">        <span class="string">"agg_stats"</span>: {</span><br><span class="line">          <span class="string">"filter"</span>: {</span><br><span class="line">            <span class="string">"range"</span>: {</span><br><span class="line">              <span class="string">"price"</span>: {</span><br><span class="line">                <span class="string">"gte"</span>: <span class="number">1000</span></span><br><span class="line">              }</span><br><span class="line">            }</span><br><span class="line">          },</span><br><span class="line">          <span class="string">"aggs"</span>: {</span><br><span class="line">            <span class="string">"stats_bucket"</span>: {</span><br><span class="line">              <span class="string">"stats"</span>: {</span><br><span class="line">                <span class="string">"field"</span>: <span class="string">"price"</span></span><br><span class="line">              }</span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="date-histogram：根据日期分桶"><a href="#date-histogram：根据日期分桶" class="headerlink" title="date_histogram：根据日期分桶"></a>date_histogram：根据日期分桶</h4></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;桶分析&quot;&gt;&lt;a href=&quot;#桶分析&quot; class=&quot;headerlink&quot; title=&quot;桶分析&quot;&gt;&lt;/a&gt;桶分析&lt;/h2&gt;&lt;p&gt;聚合查询通用结构&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;t</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>分词器</title>
    <link href="http://example.com/2023/03/13/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/4.fen-ci-qi/"/>
    <id>http://example.com/2023/03/13/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/4.fen-ci-qi/</id>
    <published>2023-03-13T13:09:08.041Z</published>
    <updated>2023-04-28T09:25:47.278Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分词器"><a href="#分词器" class="headerlink" title="分词器"></a>分词器</h1><h2 id="规范化normalization"><a href="#规范化normalization" class="headerlink" title="规范化normalization"></a>规范化normalization</h2><p>提高文档的查询成功率，对词进行切分、同义词归并、大写转小些、负数转单数等；主要分为4步：</p><ol><li>切词(word segmentation)</li><li>规范化：normalization</li><li>去重</li><li>字典序</li></ol><h2 id="字符过滤器character-filter"><a href="#字符过滤器character-filter" class="headerlink" title="字符过滤器character filter"></a>字符过滤器character filter</h2><ol><li><h4 id="HTML-Strip：处理html标签"><a href="#HTML-Strip：处理html标签" class="headerlink" title="HTML Strip：处理html标签"></a>HTML Strip：处理html标签</h4><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">创建分词器</span><br><span class="line"># analysis表示分析器</span><br><span class="line"># char_filter表示字符串过滤器，过滤器类型是html_strip</span><br><span class="line"># my_analyzer表示分词</span><br><span class="line"># escaped_tags表示希望保留的标签</span><br><span class="line">PUT my_index</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"settings"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"analysis"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"char_filter"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_char_filter"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span><span class="punctuation">:</span><span class="string">"html_strip"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_analyzer"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"tokenizer"</span><span class="punctuation">:</span><span class="string">"keyword"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"char_filter"</span><span class="punctuation">:</span> <span class="string">"my_char_filter"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">}</span></span><br><span class="line"></span><br><span class="line"># 使用分词器</span><br><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="string">"my_analyzer"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"text"</span><span class="punctuation">:</span><span class="string">"&lt;p&gt;I'm so &lt;a&gt;happy&lt;/a&gt;&lt;/p&gt;"</span></span><br><span class="line"><span class="punctuation">}</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 返回的结果</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"tokens"</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"token"</span> <span class="punctuation">:</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">I'm so &lt;a&gt;happy&lt;/a&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span><span class="string">""</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"start_offset"</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"end_offset"</span> <span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span> <span class="punctuation">:</span> <span class="string">"word"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="Mapping-Character-Filter"><a href="#Mapping-Character-Filter" class="headerlink" title="Mapping Character Filter"></a>Mapping Character Filter</h4><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># 使用分词器</span><br><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="string">"my_analyzer"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"text"</span><span class="punctuation">:</span><span class="string">"&lt;p&gt;I'm so &lt;a&gt;happy&lt;/a&gt;&lt;/p&gt;"</span></span><br><span class="line"><span class="punctuation">}</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PUT my_index</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"settings"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"analysis"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"char_filter"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_char_filter"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span><span class="punctuation">:</span><span class="string">"mapping"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"mappings"</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">            <span class="string">"滚 =&gt; *"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">"垃圾 =&gt; **"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_analyzer"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"tokenizer"</span><span class="punctuation">:</span><span class="string">"keyword"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"char_filter"</span><span class="punctuation">:</span> <span class="string">"my_char_filter"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">}</span></span><br><span class="line"># 使用分词器</span><br><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="string">"my_analyzer"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"text"</span><span class="punctuation">:</span><span class="string">"垃圾应该滚去垃-级堆"</span></span><br><span class="line"><span class="punctuation">}</span></span><br><span class="line"></span><br><span class="line"># 返回的结果</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"tokens"</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"token"</span> <span class="punctuation">:</span> <span class="string">"**应该*去垃-级堆"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"start_offset"</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"end_offset"</span> <span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"type"</span> <span class="punctuation">:</span> <span class="string">"word"</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"position"</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="Pattern-Replace"><a href="#Pattern-Replace" class="headerlink" title="Pattern Replace"></a>Pattern Replace</h4><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 正则替换</span><br><span class="line">PUT my_index</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"settings"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"analysis"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"char_filter"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_char_filter"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span><span class="punctuation">:</span><span class="string">"pattern_replace"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"pattern"</span><span class="punctuation">:</span><span class="string">"(\\d{3})\\d{4}(\\d{4})"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"replacement"</span><span class="punctuation">:</span><span class="string">"$1****$2"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_analyzer"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"tokenizer"</span><span class="punctuation">:</span><span class="string">"keyword"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"char_filter"</span><span class="punctuation">:</span> <span class="string">"my_char_filter"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">}</span></span><br><span class="line"># 使用分词器</span><br><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="string">"my_analyzer"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"text"</span><span class="punctuation">:</span><span class="string">"手机号是18764077883"</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="分词器-tokenizer"><a href="#分词器-tokenizer" class="headerlink" title="分词器 tokenizer"></a>分词器 tokenizer</h2><h2 id="令牌过滤器-token-filter"><a href="#令牌过滤器-token-filter" class="headerlink" title="令牌过滤器 token filter"></a>令牌过滤器 token filter</h2><h2 id="常用分词器"><a href="#常用分词器" class="headerlink" title="常用分词器"></a>常用分词器</h2><h2 id="中文分词器"><a href="#中文分词器" class="headerlink" title="中文分词器"></a>中文分词器</h2><p>ik分词器简单示例</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"text"</span><span class="punctuation">:</span><span class="string">"你好，吃早饭了吗"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="string">"ik_smart"</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure><h2 id="自定义分词器"><a href="#自定义分词器" class="headerlink" title="自定义分词器"></a>自定义分词器</h2><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 自定义分词器</span><br><span class="line">PUT custom_analysis</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"settings"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"analysis"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"char_filter"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_char_filter"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"mapping"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"mappings"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">"滚 =&gt; *"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">"垃圾 =&gt; **"</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"filter"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_stopword"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"stop"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"stopwords"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">"is"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">"in"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">"the"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">"a"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">"at"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">"for"</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"tokenizer"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_tokenizer"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span><span class="punctuation">:</span><span class="string">"pattern"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"pattern"</span><span class="punctuation">:</span><span class="string">"[,.!?]"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"my_analyzer"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span><span class="punctuation">:</span><span class="string">"custom"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"char_filter"</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">"my_char_filter"</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"tokenizer"</span><span class="punctuation">:</span><span class="string">"my_tokenizer"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"filter"</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">"my_stopword"</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">}</span></span><br><span class="line"></span><br><span class="line"># 测试分词器</span><br><span class="line">GET custom_analysis/_analyze</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"analyzer"</span><span class="punctuation">:</span> <span class="string">"my_analyzer"</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"text"</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">"what is asdf,.? ss in &amp; | is the good boy滚hh"</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="热更新"><a href="#热更新" class="headerlink" title="热更新"></a>热更新</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分词器&quot;&gt;&lt;a href=&quot;#分词器&quot; class=&quot;headerlink&quot; title=&quot;分词器&quot;&gt;&lt;/a&gt;分词器&lt;/h1&gt;&lt;h2 id=&quot;规范化normalization&quot;&gt;&lt;a href=&quot;#规范化normalization&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ES入门指南</title>
    <link href="http://example.com/2023/03/12/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/es-ru-men-zhi-nan/"/>
    <id>http://example.com/2023/03/12/treasurebox/elasticsearch/xue-xi-bi-ji/1.he-xin-zhi-shi-pian-2week/es-ru-men-zhi-nan/</id>
    <published>2023-03-12T03:17:52.069Z</published>
    <updated>2023-04-28T09:25:47.285Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>核心知识点</title>
    <link href="http://example.com/2023/03/05/treasurebox/elasticsearch/xue-xi-bi-ji/he-xin-zhi-shi-dian/"/>
    <id>http://example.com/2023/03/05/treasurebox/elasticsearch/xue-xi-bi-ji/he-xin-zhi-shi-dian/</id>
    <published>2023-03-05T09:37:45.394Z</published>
    <updated>2023-04-28T09:25:47.269Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ES基本介绍"><a href="#ES基本介绍" class="headerlink" title="ES基本介绍"></a>ES基本介绍</h1><h2 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h2><h3 id="从一条数据入门倒排索引"><a href="#从一条数据入门倒排索引" class="headerlink" title="从一条数据入门倒排索引"></a>从一条数据入门倒排索引</h3><table><thead><tr><th>id</th><th><strong>title</strong></th><th><strong>info</strong></th></tr></thead><tbody><tr><td>1</td><td>念奴娇·昆仑</td><td>横空出世，莽昆仑，阅尽人间春色….</td></tr><tr><td><strong>2</strong></td><td>公无渡河</td><td>黄河西来决昆仑，咆哮万里触龙门…</td></tr></tbody></table><h4 id="在mysql中查询"><a href="#在mysql中查询" class="headerlink" title="在mysql中查询:"></a>在mysql中查询:</h4><p> select * from table where info like “%昆仑%“;这种查询时索引失效</p><h4 id="倒排索引数据的存储格式"><a href="#倒排索引数据的存储格式" class="headerlink" title="倒排索引数据的存储格式"></a>倒排索引数据的存储格式</h4><p>通过为每一个field分词后建立倒排索引加速查找效率，以field value为key，数据id为值组建结构</p><table><thead><tr><th><strong>term</strong></th><th><strong>posting list</strong></th></tr></thead><tbody><tr><td>横空出世</td><td>1</td></tr><tr><td>莽</td><td>1</td></tr><tr><td>昆仑</td><td>1,2</td></tr><tr><td>黄河</td><td>2</td></tr></tbody></table><h2 id="Elastic-Stack-ELKB-家族"><a href="#Elastic-Stack-ELKB-家族" class="headerlink" title="Elastic Stack(ELKB)家族"></a>Elastic Stack(ELKB)家族</h2><h3 id="Elastic-Search"><a href="#Elastic-Search" class="headerlink" title="Elastic Search"></a>Elastic Search</h3><p>是一个分布式的开放搜索和分析引擎，适用于所有类型的数据格式，包括文本、数字、地理空间、结构化和非结构化数据，基于Lucene基础开发。是一个近实时的搜索平台(1秒)左右。</p><h3 id="LogStash"><a href="#LogStash" class="headerlink" title="LogStash"></a>LogStash</h3><p>开放性的服务器端数据处理管道，能够从多个来源采集数据、转换数据，对数据进行聚合和处理，然后将数据发送到存储库中。</p><h3 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h3><p>搜索、查看并可视化es中存储的数据，并通过创建柱状图、饼状图、表格、直方图、地图等对数据进行分析。</p><h3 id="Beats"><a href="#Beats" class="headerlink" title="Beats"></a>Beats</h3><p>轻量级数据采集器，可以从各种环境中收集日志、指标安全数据或网格数据，通过logstash或kafka等传输到es中进行存储。</p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="集群-cluster"><a href="#集群-cluster" class="headerlink" title="集群(cluster)"></a>集群(cluster)</h3><p>集群由一个或多个节点组成，通过集群名称进行表示。通常集群名称在ES配置文件(config/elasticsearch.tml)中设置</p><h3 id="节点-node"><a href="#节点-node" class="headerlink" title="节点(node)"></a>节点(node)</h3><p>单个ES实例成为节点，依据功能可以分为下面几种，在(config/elasticsearch.tml)配置：</p><p><strong>master</strong>：候选节点（创建、更新、删除索引，添加、删除node，分配shard）</p><p><strong>data</strong>：数据节点</p><p>data_content：数据内容没电</p><p><strong>data_hot</strong>：热节点，可读可更新</p><p><strong>data_warm</strong>：warm节点：只读不更新</p><p><strong>data_code</strong>：冷节点，存放历史数据（不常访问）</p><p>ingest：预处理节点，类似LogStash中的Filter</p><p>ml(machine learning)：机器学习节点</p><p><strong>voting node</strong>：仅投票节点（选主）</p><p><strong>coordination node</strong>：协调节点，接受外部请求并转发到相应节点（不特指某个节点，所有节点都有可能成为协调节点）</p><p><strong>如何避免脑裂：</strong></p><p><strong>脑裂</strong>：正常es集群中只有一个主节点，主节点负责管理整个集群，集群的所有节点都会选择同一个节点作为主节点，所以无论访问那个节点都可以查看集群的状态信息。 而脑裂问题的出现就是因为从节点在选择主节点上出现分歧导致一个集群出现多个主节点从而使集群分裂，使得集群处于异常状态。</p><p><strong>原因</strong>：</p><ol><li><p>网络问题：主节点未及时响应，集群以为主节点下线，选举一个新的主节点，原主节点恢复后集群就会形成两个主节点，导致集群分裂</p></li><li><p>节点负载：主节点同时承担数据节点角色时，可能会出现负载比较大，引发较大规模的内存回收(GC)，造成ES进程失去响应。</p></li><li><p>内存回收：数据节点上的ES进程占用的内存较大，较大规模的内存回收操作也能造成ES进程失去响应</p></li></ol><p><strong>解决办法</strong>：</p><ol><li><p>master node与data node分别设置，即node.master与node.data不要同时为True，主节点配置为：node.master: true ，node.data: false。数据节点配置为：node.master: false，node.data: true。</p></li><li><p>调整节点响应超时时间：discovery.zen.ping_timeout默认为(3s)，如果master节点超过3s未响应时就认为master节点挂了，增加等待响应时间能减少误判。</p></li><li><p>调整discovery.zen.minimum_master_nodes(默认值是1)参数，该参数表示， 一个节点需要看到的具有master节点资格的最小数量， 然后才能在集群中做操作，即重新选举主节点。官方的推荐值是(N/2)+1，其中 N 是具有 master资格的节点的数量，即只有超过(N/2)+1个主节点同意，才能重新选举主节点。</p></li></ol><p><strong>从脑裂中恢复</strong>：</p><ol><li><p>给所有数据重新索引：POST _reindex{ “source”: { “index”: “index_name” }, “dest”: { “index”: “new_index_name”, “op_type”: “create” } }</p></li><li><p>逐个关闭节点并备份数据，分析比对数据是否是最新的。如果是保存的数据是最新的，启动它并且让它被选为主节点，之后启动集群中其他节点。</p></li></ol><h3 id="索引-index"><a href="#索引-index" class="headerlink" title="索引(index)"></a>索引(index)</h3><p>​类似数据库的概念，以分片为单位，可以设置副本及分片个数</p><h3 id="类型-type"><a href="#类型-type" class="headerlink" title="类型(type)"></a>类型(type)</h3><p>每一个index中分为不同的type，使用type可以在同一个index里存储多种类型的数据，可以减少index的数量，好处是搜索同一个index 的多个type时不会产生额外的开销，因为遍历的分片数是一样的。</p><p>示例：index为qemu_disk_iostat，type为qemu_disk_iostat_20230312、qemu_disk_iostat_20230313</p><p>缺点：不同type名称相同的field要完全保持一致（字段类型、是否能索引等）；在某个type有的字段，其他没有该字段的type也会消耗资源(posting list,doc value)。搜索评分是在index级别计算，多个type会相互影响，<strong>比较鸡肋</strong>。如果只是相对数据进行分割，使用多个index比使用type要好。</p><p>在7.x版本中弱化，统一使用_doc使用，在8.x中彻底删除。</p><h3 id="分片-shard"><a href="#分片-shard" class="headerlink" title="分片(shard)"></a>分片(shard)</h3><p>一个索引中包含一个或者多个分片，在7.0之前默认创建5个分片，每个主分片一个副本；7.x之后默认创建1个主分片，每个节点默认只允许1000个分片。副本可以在索引创建之后修改数量，但是主分片的数量一旦确定之后不能修改，只能删除之后重新创建。</p><p>主分片挂掉之后副分片升级为主分片。原分片加入之后从当前主分片中同步数据。主分片和副分片不会在同一个节点中。</p><p>每个分片都是一个<strong>Lucene</strong>实例，有完整的创建索引和处理请求能力，搜索时<strong>所有</strong>的分片都会被扫描，最终被ES合并所有的搜索结果。</p><p><strong>ES会在nodes上做分片均衡</strong>：所有的分片尽量均匀的分布在所有的节点上rebalance(分片平衡策略)。一个doc不会存在于多个主分片中，但是当每个主分片的副本数量不唯一时，可以同时存在于多个副本中</p><p><strong>分片设计原则：</strong>受JVM大小影响，64G内存机器按照每个分片30-50G分配，32G机器按照最大不超过30G分配。分片数尽量保证data node的整数倍。例如3个data node 64G内存节点，索引大小为500GB，则分应设置12个分片，每个42GB左右，3个节点每个可以分4个分片。</p><h3 id="副本-replace"><a href="#副本-replace" class="headerlink" title="副本(replace)"></a>副本(replace)</h3><p>副本分片，主分片和副分片不能在同一个节点上，如果设置副本&gt;0时，最少要有两个data node，否则分配一直处于无法分配状态。</p><h3 id="文档-doc"><a href="#文档-doc" class="headerlink" title="文档(doc)"></a>文档(doc)</h3><p>es中的数据都是以json文档的形式存储，是数据存储的基本单元，每个doc都会有_id字段，可以在存储时指定_id，或者es会自动生成，推荐自动生成，es默认根据_id做routing，分配该数据要存储的分片。</p><p><strong>routing计算规则：</strong></p><p>shard = hash(routing) % number_of_primary_shards</p><p>routing可以自定义，这样方便将某一类数据分配在同一个分片中，但是如果设置的routing不合适，可能导致数据写入不均。</p><h3 id="mapping"><a href="#mapping" class="headerlink" title="mapping"></a>mapping</h3><p>maping类似于RDB中的“表结构”概念，在MySQL中，表结构里包含了字段名称，字段的类型还有索引信息等。在Mapping里也包含了一些属性，比如字段名称、类型、字段使用的分词器、是否评分、是否创建索引等属性，并且在ES中一个字段可以有对个类型。分词器、评分等概念。</p><h4 id="常见类型"><a href="#常见类型" class="headerlink" title="常见类型"></a>常见类型</h4><p><strong>数字类型：</strong></p><p>long 个带符号的 64 位整数，最小值为，最大值为。 -263 263-1</p><p>integer 一个带符号的 32 位整数，最小值为，最大值为。 -231 231-1</p><p>short 一个带符号的 16 位整数，最小值为-32768，最大值为32767。</p><p>byte 一个带符号的 8 位整数，最小值为-128，最大值为127。</p><p>double 双精度 64 位 IEEE 754 浮点数，仅限于有限值。最小2的-1074次方</p><p>float 单精度 32 位 IEEE 754 浮点数，仅限于有限值。最小2的-149次方</p><p>half_float 半精度 16 位 IEEE 754 浮点数，仅限于有限值。最小2的-24次方</p><p>scaled_float 由 支持的有限浮点数long，按固定double比例因子缩放</p><p><strong>keyword</strong> ：适用于索引结构化的字段，可以用于过滤、排序、聚合。keyword类型的字段只能通过精确值（exact value）搜索到。</p><p><strong>Date类型</strong>：包括date和 date_nanos</p><p><strong>text</strong>：全文索引会被用于分词</p><p><strong>对象关系类型</strong>：</p><p>object：用于单个JSON对象</p><p>nested：用于JSON对象数组</p><p><strong>结构化类型：</strong></p><p>geo-point：纬度/经度积分</p><p>geo-shape：用于多边形等复杂形状</p><p>point：笛卡尔坐标点</p><p>shape：笛卡尔任意几何图形</p><p><strong>特殊类型：</strong></p><p><strong>ip</strong>：用于IPv4和IPv6地址</p><p>…</p><p><strong>array（数组）</strong></p><p>数组不需要专用的字段数据类型。默认情况下，任何字段都可以包含零个或多个值，但是数组中的所有值都必须具有相同的数据类型</p><h4 id="动态字段映射-Dynamic-field-mapping"><a href="#动态字段映射-Dynamic-field-mapping" class="headerlink" title="动态字段映射(Dynamic field mapping)"></a>动态字段映射(Dynamic field mapping)</h4><p>建议使用ES时显示指定字段类型，毕竟相对于ES，写入者更了解自己的数据。如果不指定字段类型时ES的默认映射方式：</p><p>整数 =&gt; long</p><p>浮点数 =&gt; float</p><p>true || false =&gt; boolean</p><p>日期 =&gt; date</p><p>数组 =&gt; 取决于数组中的第一个有效值</p><p>对象 =&gt; object</p><p>字符串 =&gt; 如果不是数字和日期类型，会被映射为text和keyword两个类型</p><table><thead><tr><th>基本数据类型</th><th>占用的内存（byte）</th><th>范围</th></tr></thead><tbody><tr><td>byte</td><td>1</td><td>-2^7 ~ 2^7-1</td></tr><tr><td>short</td><td>2</td><td>-2^15 ~ 2^15-1</td></tr><tr><td>int</td><td>4</td><td>-2^31 ~ 2^31-1</td></tr><tr><td>long</td><td>8</td><td>-2^63 ~ 2^63-1</td></tr><tr><td>float</td><td>4</td><td>-3.4e+38 ~ 3.4e+38</td></tr><tr><td>double</td><td>8</td><td>-1.7e+308 ~ 1.7e+308</td></tr><tr><td>boolean</td><td>1</td><td>true/false</td></tr><tr><td>char</td><td>2</td><td>0~65535</td></tr></tbody></table><p><strong>问题</strong>：0应该选择哪种数据结构存储？<a href="https://mp.weixin.qq.com/s/eIy1Tv1Teonl2HWtvPVUZg">推荐阅读</a></p><p>[</p><p>{“id”:1,”disk_uuid”:”test-diskuuid”,”util”:0, “svctm”: 6,”time”:”2023-03-12 14:50:00”,”set”:”test-set”}, </p><p>{“id”:2,”disk_uuid”:”test-diskuuid”,”util”:94.6, “time”:”2023-03-12 14:50:10”,”set”:”test-set”}</p><p>]</p><h1 id="数据存储结构"><a href="#数据存储结构" class="headerlink" title="数据存储结构"></a>数据存储结构</h1><h2 id="ES数据存储结构"><a href="#ES数据存储结构" class="headerlink" title="ES数据存储结构"></a>ES数据存储结构</h2><p>ES底层使用 Lucene 存储数据，Lucene 的索引包含以下部分：</p><p><strong>inverted index</strong>：倒排索引。<br>bkd tree: Block k-d tree，用于在高维空间内做索引，如地理坐标的索引。<br><strong>column store</strong>：doc values，列式存储，批量读取连续的数据以提高排序和聚合的效率。<br><strong>document store</strong>：Store Fileds，行式存储文档，用于控制 doc 原始数据的存储，其中占比最大的是 source 字段。<br><strong>term vectors</strong>：用于存储各个词在文档中出现的位置等信息。</p><h2 id="常见配置项说明"><a href="#常见配置项说明" class="headerlink" title="常见配置项说明"></a>常见配置项说明</h2><p>两组示例数据:</p><p>[</p><p>{“id”:1,”title”:”念奴娇·昆仑”,”info”:”横空出世，莽昆仑，阅尽人间春色….”},</p><p>{“id”:2,”title”:”公无渡河”,”info”:”黄河西来决昆仑，咆哮万里触龙门…”}</p><p>]</p><p>[</p><p>{“id”:1,”disk_uuid”:”test”,”util”:0, “svctm”: 6,”time”:”2023-03-12 14:50:00”,”set”:”test-set”}},</p><p>{“id”:2,”disk_uuid”:”test”,”util”:94.6, “time”:”2023-03-12 14:50:10”,”set”:”test-set”}}</p><p>]</p><table><thead><tr><th>配置项</th><th><strong>作用</strong></th><th><strong>注意事项</strong></th><th><strong>默认值</strong></th><th><strong>数据格式</strong></th></tr></thead><tbody><tr><td>_all</td><td>提供跨字段全文检索</td><td>（1）会占用额外空间，把 mapping 中的所有字段通过空格拼接起来做索引，在跨字段全文检索才需要打开；（2）在 v6.0+已被弃用，v7.0会正式移除，可以使用 [copy_to] 来自定义组合字段</td><td>关闭</td><td>以title和info字段设置all为例<em>，</em>存储结构为：”念奴娇·昆仑 横空出世，莽昆仑，阅尽人间春色….”es同样会对all字段做分词</td></tr><tr><td>_source</td><td>存储 post 提交到ES的原始 json 内容</td><td>（1）会占用很多存储空间。数据压缩存储，读取会有额外解压开销。（2）不需要读取原始字段内容可以考虑关闭，但关闭后无法 reindex</td><td><strong>开启</strong></td><td>{“id”:1,”title”:”念奴娇·昆仑”,”info”:”横空出世，莽昆仑，阅尽人间春色….”}{“id”:2,”title”:”公无渡河”,”info”:”黄河西来决昆仑，咆哮万里触龙门…”}</td></tr><tr><td>store</td><td>是否单独存储该字段</td><td>（1）会占用额外存储空间，与_source 独立，同时开启 store 和 source 则会将该字段原始内容保存两份，不同字段单独存储，不同字段的数据在磁盘上不连续，若读取多个字段则需要查询多次，如需读取多个字段，需权衡比较 source 与 store 效率</td><td>关闭</td><td>通过黄河搜索info信息时，先找到了posting list为2，接着查询具体的info信息info: 黄河西来决昆仑，咆哮万里触龙门…title: 公无渡河，使用时：stored_fields</td></tr><tr><td>doc_values</td><td>支持排序、聚合</td><td>支持排序、聚合会占用额外存储空间，与 source 独立，同时开启 doc_values 和 _source 则会将该字段原始内容保存两份。doc_values 数据在磁盘上采用<strong>列式</strong>存储，关闭后无法使用排序和聚合</td><td><strong>开启</strong></td><td>util [0, 94.6]以disk_uuid字段倒排索引为例：test:[1, 2] ,查询disk_uuid为test的sum util值数据，查询到了1, 2，接着进行聚合</td></tr><tr><td>index</td><td>是否加入倒排索引</td><td>关闭后无法对其进行搜索，但字段仍会存储到 _source 和 doc_values，字段可以被排序和聚合</td><td><strong>开启</strong></td><td>test: [1,2]</td></tr><tr><td>enabled</td><td>是否对该字段进行处理</td><td>关闭后，只在 _source中存储，类似 index 与 doc_values 的总开关</td><td><strong>开启</strong></td><td></td></tr></tbody></table><h3 id="all"><a href="#all" class="headerlink" title="_all"></a>_all</h3><p>all 字段的作用是提供跨字段查询的支持，把 mapping 中的所有字段通过空格拼接起来做索引。ES在正常查询的过程中，需要指定在哪一个field里面查询，但是在某种场景下比如搜索一首包含“昆仑”的诗，可能在title字段，或者info字段，查询时需要查title或者info中，查询两次。</p><p>如果开启al，会将title 字段和info 字段拼接组成一个虚拟的字段all，值为各个field拼接起来的很长的字符串如（念奴娇·昆仑 横空出世….），实现跨字段检索，用户不需要关心查询的数据具体在哪个字段中。</p><p>该字段的内容来源于 source 字段，因此默认情况下，该字段的内容并不会被保存，可以通过设置 store 属性来强制保存 all 字段。开启 all 字段，会带来额外的CPU开销和存储，如果没有使用到，可以关闭 all 字段。</p><h3 id="source"><a href="#source" class="headerlink" title="_source"></a>_source</h3><p>source 字段用于存储 post 到 ES 的原始 json 文档。为什么要存储原始文档呢？因为 ES 采用倒排索引对文本进行搜索，而倒排索引无法存储原始输入文本。一段文本交给ES后，首先会被分析器(analyzer)打散成单词，为了保证搜索的准确性，在打散的过程中，会去除文本中的标点符号，统一文本的大小写，甚至对于英文等主流语言，会把发生形式变化的单词恢复成原型或词根，然后再根据统一规整之后的单词建立倒排索引，经过如此一番处理，原文已经面目全非。因此需要有一个地方来存储原始的信息，以便在搜到这个文档时能够把原文返回给查询者。</p><p>是否一定需要存储原始文档？不一定！如果没有取出整个原始 json 结构体的需求，可以在 mapping 中关闭 source 字段或者只在 source 中存储部分字段（使用store）。 </p><p><strong>关闭source的负面影响</strong>：</p><p>（1）<strong>不能获取到原文</strong>，不能使用update、update_by_query api<br>（2）<strong>无法reindex</strong>：如果存储了 source，当 index 发生损坏，或需要改变 mapping 结构时，由于存在原始数据，ES可以通过原始数据自动重建index，如果不存 source 则无法实现<br>（3）无法在查询中使用script：因为 script 需要访问 source 中的字段</p><h3 id="store"><a href="#store" class="headerlink" title="store"></a>store</h3><p>store 决定一个字段是否要被单独存储。source 里面中已经存储了原始的文档，为什么还需要一个额外的 store 属性呢？原因如下：</p><p>（1）如果禁用了 source 保存，可以通过指定 store 属性来单独保存某个或某几个字段，而不是将整个输入文档保存到 source 中。</p><p>（2）如果 source 中有长度很长的文本（如一篇文章）和较短的文本（如文章标题），当只需要取出标题时，如果使用 source 字段，ES需要读取整个 source 字段，然后返回其中的 title，由此会引来额外的IO开销，降低效率。此时可以选择将 title 的 store 设置为true，在 source 字段外单独存储一份。读取时不必在读取整 source 字段了。但是需要注意，应该避免使用 store 查询多个字段，因为 store 的存储在磁盘上不连续，ES在读取不同的 store 字段时，每个字段的读取均需要在磁盘上进行查询操作，而使用 source 字段可以一次性连续读取多个字段。</p><h3 id="doc-values"><a href="#doc-values" class="headerlink" title="doc_values"></a>doc_values</h3><p>倒排索引可以提供全文检索能力，但是无法提供对排序和数据聚合的支持。doc_values 本质上是一个序列化的列式存储结构，适用于聚合（aggregations）、排序（Sorting）、脚本（scripts access to field）等操作。</p><p>默认情况下，ES几乎会为所有类型的字段存储doc_value，但是 text 或 text_annotated 等可分词字段不支持 doc values 。如果不需要对某个字段进行排序或者聚合，则可以关闭该字段的doc_value存储。</p><h3 id="index"><a href="#index" class="headerlink" title="index"></a>index</h3><p>控制倒排索引，用于标识指定字段是否需要被索引。默认情况下是开启的，如果关闭了 index，则该字段的内容不会被 analyze 分词，也不会存入倒排索引，即意味着该字段无法被搜索。</p><h3 id="enabled"><a href="#enabled" class="headerlink" title="enabled"></a>enabled</h3><p>一个 index 和 doc_value 的总开关，如果 enabled 设置为false，则这个字段将会仅存在于 source 中，其对应的 index 和 doc_value 都不会被创建。这意味着，该字段将不可以被搜索、排序或者聚合，但可以通过 source 获取其原始值。</p><h3 id="term-vector"><a href="#term-vector" class="headerlink" title="term_vector"></a>term_vector</h3><p>在对文本进行 analyze 的过程中，可以保留有关分词结果的相关信息，包括单词列表、单词之间的先后顺序、单词在原文中的位置等信息。查询结果返回的高亮信息就可以利用其中的数据来返回。默认情况下，term_vector是关闭的，如有需要（如加速highlight结果）可以开启该字段的存储。</p><h3 id="doc-values详细说明"><a href="#doc-values详细说明" class="headerlink" title="doc_values详细说明"></a><strong>doc_values详细说明</strong></h3><p>1.doc_values 的作用：</p><p>基于 lucene 的 solr 和 es 都是使用倒排索引实现快速检索的，也就是通过建立 “搜索关键词 ==&gt;文档ID列表” 的关系映射实现快速检索，但是倒排索引也是有缺陷的，比如我们需要字段值做一些排序、分组、聚合操作，lucene 内部会遍历提取所有出现在文档集合的排序字段，然后再次构建一个最终的排好序的文档集合list，这个步骤的过程全部维持在内存中操作，而且如果排序数据量巨大的话，非常容易就造成solr内存溢出和性能缓慢。</p><p>doc values 就是在构建倒排索引时，会对开启 doc values 的字段额外构建一个有序的 “document文档 ==&gt; field value“ 的列式存储映射，从而实现对指定字段进行排序和聚合时对内存的依赖，提升该过程的性能。默认情况下每个字段的 doc values 都是开启的，当然 doc values 也会耗费一定的磁盘空间。</p><p>另外 doc values 保存在操作系统的磁盘中，当 doc values 大于节点的可用内存，ES 可以从操作系统页缓存中加载或弹出，从而避免发生 JVM 内存溢出的异常，docValues 远小于节点的可用内存，操作系统自然将所有Doc Values存于内存中（堆外内存），有助于快速访问。</p><p>2.doc_values 与 source 的区别？使用 docvalue_fields 检索指定的字段？</p><p>post 提交到 ES 的原始 Json 文档都存储在 source 字段中，默认情况下，每次搜索的命中结果都包含文档 source，即使仅请求少量字段，也必须加载并解析整个 source 对象，而 source 每次使用时都必须加载和解析，所以使用 source 非常慢。为避免该问题，当我们只需要返回相当少的支持 doc_values 的字段时，可以使用 docvalue_fields 参数获取选定字段的值。</p><p>doc values 存储与 _source 相同的值，但在磁盘上基于列的结构中进行了优化，以进行排序和汇总。由于每个字段都是单独存储的，因此 Elasticsearch 仅读取请求的字段值，并且可以避免加载整个文档 _source。通过 docvalue_fields 可以从建好的列式存储结果中直接返回字段值，毕竟 source 是从一大片物理磁盘去，理论上从 doc values 处拿这个字段值会比 source 要快一点，页面抖动少一点。</p><p>3.doc values 通过牺牲一定的磁盘空间带来的好处主要有两个：</p><p>节省内存<br>提升排序，分组等聚合操作的性能</p><p>4.如何在 ES 中使用 doc values？</p><p>（1）我们首先关注如何激活 doc values，只要开启 doc values 后，排序，分组，聚合的时候会自动使用 doc values 提速。在 ES 中，doc values 默认是开启的，比较简单暴力，可以酌情关闭一些不需要使用 doc values 的字段，以节省磁盘空间，只需要设置 doc_values 为 false 就可以了。</p><p>示例如下：”session_id”:{“type”:”string”,”index”:”not_analyzed”,”doc_values”:false}</p><p>（2）使用 docvalue_fields 的检索指定的字段：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET test/_search</span><br><span class="line">{</span><br><span class="line">  "query": {</span><br><span class="line">    "match": {</span><br><span class="line">      "disk_uuid": "test"</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  "docvalue_fields": ["util", "svctm"]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>使用方式</strong></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET product/_search</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"stored_fields"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">"name"</span><span class="punctuation">,</span><span class="string">"tags"</span><span class="punctuation">,</span><span class="string">"price"</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"docvalue_fields"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"_source"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure><h2 id="总结：什么场景可以去掉-source-什么场景可以去掉doc-values"><a href="#总结：什么场景可以去掉-source-什么场景可以去掉doc-values" class="headerlink" title="总结：什么场景可以去掉_source?什么场景可以去掉doc_values?"></a>总结：什么场景可以去掉_source?什么场景可以去掉doc_values?</h2><h3 id="去掉-source"><a href="#去掉-source" class="headerlink" title="去掉_source"></a>去掉_source</h3><p>原数据过大、指标类数据</p><h3 id="去掉doc-values"><a href="#去掉doc-values" class="headerlink" title="去掉doc values"></a>去掉doc values</h3><p>不需要用户聚合、排序</p><h1 id="数据写入过程"><a href="#数据写入过程" class="headerlink" title="数据写入过程"></a>数据写入过程</h1><h2 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h2><p><strong>Document（文档）</strong>: 文档是存储在elasticsearch中的一个JSON文件，相当于关系数据库中表的一行数据。</p><p><strong>Shard（分片）</strong>：索引数据可以拆分为较小的分片，每个分片放到不同的服务器上，提高并发能力。Lucene 中的 Lucene index 相当于 ES 的一个 shard。</p><p><strong>Segments（段）</strong>: 分片由多个segments组成，每个segments都是一个独立的倒排索引，且具有不变性，segment 提供了搜索功能。</p><p><strong>Transaction Log（translog，事务日志）</strong>：ES使用translog来记录index,delete,update,bulk请求，保障数据不丢失，如果Elasticsearch需要恢复数据可以从translog中读取。每个分片对应一个translog文件。</p><p><strong>Commit point（提交点）</strong>：记录着所有已知的segment。</p><p><strong>Lucene index</strong> ：由一堆 Segment 的集合加上一个Commit point组成。</p><h2 id="写入模型"><a href="#写入模型" class="headerlink" title="写入模型"></a>写入模型</h2><p>ES 的任意节点可作为写入请求的协调节点，接收用户请求，协调节点先将写入请求 hash 至分片粒度并先转发对应主分片写入，主分片写入成功再转发至从分片，主从分片均写入完毕经协调节点返回客户端成功。写操作一般会经历三种节点：<strong>协调节点</strong>、<strong>主分片</strong>所在节点、<strong>从分片</strong>所在节点。</p><p>如图NODE1可视为协调节点，协调节点接收到请求后，确定写入的文档属于分片0，于是将请求转发到分片0的主分片所在的节点NODE3，</p><p>NODE3完成写入后，再将请求转发给分片0所属的从分片所在的节点NODE1和NODE2</p><p>待所有从分片写入成功后，NODE3则认为整个写入成功并将结果反馈给协调节点，协调节点再将结果返回客户端。</p><p>写⼊时设置副本，有副本的索引创建操作，然后写⼊；如果是写⼊后，再设置副本，则此时采⽤的是复制操作ES为了减少磁盘IO保证读写性能，⼀般是每隔⼀段时间（⽐如5分钟）才会把Lucene的segment写⼊磁盘持久化在每个shard中，写⼊流程分为两部分，先写⼊Lucene，后写⼊Translog</p><h2 id="写入流程优化"><a href="#写入流程优化" class="headerlink" title="写入流程优化"></a>写入流程优化</h2><h3 id="translog-flush间隔调整"><a href="#translog-flush间隔调整" class="headerlink" title="translog flush间隔调整"></a>translog flush间隔调整</h3><p>这是影响ES写⼊的最⼤因素。translog flush操作是将内存中的数据写⼊磁盘，典型的IO操作。ES默认为了写⼊的可靠性，采⽤的配置</p><p>为:index.translog.durability: request</p><p>每个写⼊请求都flflush到磁盘，确保写操作是可靠的</p><p>如果系统接受⼀定概率的数据丢失，可设置为根据固定周期和固定⼤⼩的flush操作，⽐如</p><p>index.translog.durability: async</p><p>index.translog.sync_interval: 120s</p><p>or</p><p>index.translog.flflush_threshold_size: 1024mb</p><p>设置translog的flush频率可以控制可靠性，要么是按请求，每次请求都flush；要么是按时间，每隔⼀段时间flush⼀次，⼀般为了性能考虑，会设置为每隔5秒或者1分钟flush⼀次；flush间隔时间越⻓，可靠性就会越低。</p><h3 id="索引刷新间隔refresh-interval"><a href="#索引刷新间隔refresh-interval" class="headerlink" title="索引刷新间隔refresh_interval"></a>索引刷新间隔refresh_interval</h3><p>每次索引的refresh会产⽣⼀个新的Lucene段，增⼤refresh周期，可减少段的创建以及后续的Force Merge操作</p><h3 id="段合并优化"><a href="#段合并优化" class="headerlink" title="段合并优化"></a>段合并优化</h3><p>segment merge操作对系统I/O和内存占⽤都⽐较⾼，需要调整参数，改变⾏为。（这点⽤的少）</p><h3 id="indexing-buffer"><a href="#indexing-buffer" class="headerlink" title="indexing buffer"></a>indexing buffer</h3><p>indexing buffer在为doc建⽴索引时使⽤，当缓冲满时会刷⼊磁盘，⽣成⼀个新的segment，这是除了refresh_interval刷新索引之外，另⼀个⽣成新segment的机会。</p><p>indices.memory.index_buffer_size</p><p>indices.memory.min_index_buffer_size</p><p>indices.memory.max_index_buffer_size</p><p>当执⾏⼤量的索引操作时，indices.memory.index_buffer_size的默认设置可能不够，这和可⽤堆内存、单节点上的</p><p>shard数量相关，可以考虑适当增⼤该值</p><h3 id="使⽤bulk请求"><a href="#使⽤bulk请求" class="headerlink" title="使⽤bulk请求"></a>使⽤bulk请求</h3><p>批量写效率更⾼，每个请求最好避免超过⼏⼗兆，避免给集群带来压⼒</p><h3 id="bulk线程池和队列"><a href="#bulk线程池和队列" class="headerlink" title="bulk线程池和队列"></a>bulk线程池和队列</h3><p>建⽴索引过程属于CPU密集型任务，应该使⽤固定⼤⼩的线程池配置，来不及处理的任务放⼊队列。线程池最⼤线程数量应配置为</p><p>CPU核⼼数+1，队列可以适当的增加，但要控制⼤⼩，过⼤的队列会导致较⾼的GC压⼒</p><h3 id="并发执⾏bulk请求"><a href="#并发执⾏bulk请求" class="headerlink" title="并发执⾏bulk请求"></a>并发执⾏bulk请求</h3><p>bulk写请求是个⻓任务，为了给系统增加⾜够的写⼊压⼒，写⼊过程应该多个客户端、多线程地并⾏执⾏，直⾄CPU打满。</p><h3 id="⾃动⽣成Doc-ID"><a href="#⾃动⽣成Doc-ID" class="headerlink" title="⾃动⽣成Doc ID"></a>⾃动⽣成Doc ID</h3><p>如果写⼊doc时指定了id，则ES会先尝试读取原来doc的版本号以判断是否需要更新，这会涉及⼀次读取磁盘的操作。总结下来两点：</p><p>减少磁盘的IO操作</p><p>⾃动⽣成的ID具有⼀定的规律，有利于FST的压缩。</p><p>Lucene从4.0版本开始⼤量使⽤FST（Finite State Transducer）；具有两个优点：1）空间占⽤⼩。通过对词典中单词前缀和后缀的重复利⽤，压缩了存储空间；2）查询速度快，O(len(str))的查询时间复杂度</p><h3 id="调整字段Mappings"><a href="#调整字段Mappings" class="headerlink" title="调整字段Mappings"></a>调整字段Mappings</h3><p>减少字段数量、对于不需要建⽴索引的字段，不写⼊ES（ES+HBase的组合使⽤）</p><p>将不需要建⽴索引的字段index属性设置为not_analyzed或no。对字段不分词，或者不索引，可以减少很多运算操作，降低CPU使⽤</p><p>减少字段内容⻓度</p><p>使⽤不同的分词器，不同的分词器在索引过程中运算复杂度也有较⼤的差异</p><h3 id="调整-source字段"><a href="#调整-source字段" class="headerlink" title="调整_source字段"></a>调整_source字段</h3><p>_source字段⽤于存储doc原始数据，对于部分不需要存储的字段，可以通过includes、excludes过滤。实际环境，⼀般不做调整</p><h3 id="禁⽤-all字段"><a href="#禁⽤-all字段" class="headerlink" title="禁⽤_all字段"></a>禁⽤_all字段</h3><p>ES 5.x _all默认开启，ES 6.x _all字段默认为不启⽤。_all字段中包含所有字段分词后的关键词，作⽤是可以在搜索的时候不指定特定字段，从所有字段中检索。ES 6.x默认禁⽤_all字段主要有以下⼏点原因：</p><p>由于需要从其他的全部字段复制所有字段值，导致_all字段占⽤⾮常⼤的空间</p><p>_all字段有⾃⼰的分析器，在进⾏某些查询时，结果不符合预期</p><p>由于数据重复引起的额外建⽴索引的开销</p><p>想要调试时，其内容不容易检查</p><p>有些⽤户甚⾄不知道存在这个字段，导致了查询混乱</p><p>可以通过mapping中将enabled设置为false来禁⽤_all字段，禁⽤_all字段可以明显降低对CPU和I/O的压⼒。</p><h3 id="对Analyzed的字段禁⽤Norms"><a href="#对Analyzed的字段禁⽤Norms" class="headerlink" title="对Analyzed的字段禁⽤Norms"></a>对Analyzed的字段禁⽤Norms</h3><p>Norms⽤于在搜索时计算doc的评分，如果不需要评分，则可以将其禁⽤：</p><p>“title”: {“type”: “text”, “norms”: {“enabled”: false}}</p><h3 id="index-options设置"><a href="#index-options设置" class="headerlink" title="index_options设置"></a>index_options设置</h3><p>index_options⽤于控制在建⽴倒排索引过程中，哪些内容会被添加到倒排索引中；例如doc数量、词频、positions、offsets等，优化这些设置可以⼀定程度上降低索引过程中的运算任务（较少使用）。</p><h1 id="数据查询过程"><a href="#数据查询过程" class="headerlink" title="数据查询过程"></a>数据查询过程</h1><h2 id="查询流程示意图"><a href="#查询流程示意图" class="headerlink" title="查询流程示意图"></a>查询流程示意图</h2><h2 id="查询模型"><a href="#查询模型" class="headerlink" title="查询模型"></a>查询模型</h2><h2 id="查询优化"><a href="#查询优化" class="headerlink" title="查询优化"></a>查询优化</h2><h3 id="为⽂件系统cache预留⾜够的内存"><a href="#为⽂件系统cache预留⾜够的内存" class="headerlink" title="为⽂件系统cache预留⾜够的内存"></a>为⽂件系统cache预留⾜够的内存</h3><p>命中cache可以降低对磁盘的直接访问频率，搜索很依赖对系统cache的命中；如果某个请求需要从磁盘读取数据，则⼀定会产⽣相对较⾼的延迟。应该⾄少为系统cache预留⼀半的可⽤物理内存，更⼤的内存有更⾼的cache命中率。</p><h3 id="使⽤更快的硬件"><a href="#使⽤更快的硬件" class="headerlink" title="使⽤更快的硬件"></a>使⽤更快的硬件</h3><p>搜索性能在⼀般情况下更多的是在于IO能⼒，使⽤SSD会⽐旋转类存储介质好的多。如果搜索类型属于计算⽐较多，则可以考虑使⽤更快的CPU。</p><h3 id="⽂档模型"><a href="#⽂档模型" class="headerlink" title="⽂档模型"></a>⽂档模型</h3><p>为了让搜索时的成本更低，⽂档应该合理建模。特别是应该避免join操作，嵌套（nested）会使查询慢⼏倍，⽗⼦（parent-child）关系可能使查询慢数百倍，因此最好通过⾮规范化（denormalizing）⽂档来回答相同的问题，则可以显著提⾼搜索速度。</p><h3 id="预索引数据"><a href="#预索引数据" class="headerlink" title="预索引数据"></a>预索引数据</h3><p>例如根据价格区间进行group，以及计算数量，则可以增加price_range字段</p><p>PUT index/type/1</p><p>{</p><p> “designation”: “spoon”,</p><p> “price”: 13</p><p>}</p><p>富化为</p><p>PUT index/type/1</p><p>{</p><p> “designation”: “spoon”,</p><p> “price”: 13,</p><p> “price_range”: “10 - 100”</p><p>}</p><h3 id="优化⽇期搜索"><a href="#优化⽇期搜索" class="headerlink" title="优化⽇期搜索"></a>优化⽇期搜索</h3><p>在使⽤⽇期范围检索时，使⽤now的查询通常不能缓存，因为匹配到的范围⼀直在变化。但是从⽤户体验的⻆度来看，切换到⼀个完整的⽇期通常是可以接受的，这样可以更好地利⽤查询缓存。因为使⽤now形成的⽇期是⼀个⾮固定的值，每次查询从当前now往前推算形成的时间间隔都会是⼀个崭新的值，因此⽤不到缓存。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ES基本介绍&quot;&gt;&lt;a href=&quot;#ES基本介绍&quot; class=&quot;headerlink&quot; title=&quot;ES基本介绍&quot;&gt;&lt;/a&gt;ES基本介绍&lt;/h1&gt;&lt;h2 id=&quot;倒排索引&quot;&gt;&lt;a href=&quot;#倒排索引&quot; class=&quot;headerlink&quot; title=&quot;倒</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>FST构建过程</title>
    <link href="http://example.com/2023/03/05/treasurebox/elasticsearch/xue-xi-bi-ji/5.luence/3.fst-gou-jian-guo-cheng/"/>
    <id>http://example.com/2023/03/05/treasurebox/elasticsearch/xue-xi-bi-ji/5.luence/3.fst-gou-jian-guo-cheng/</id>
    <published>2023-03-05T02:47:36.392Z</published>
    <updated>2023-04-28T09:25:47.290Z</updated>
    
    <content type="html"><![CDATA[<h1 id="FST构建过程"><a href="#FST构建过程" class="headerlink" title="FST构建过程"></a>FST构建过程</h1><p>FST表示有限状态集</p><h2 id="FSM-Finle-State-machine-有限状态机"><a href="#FSM-Finle-State-machine-有限状态机" class="headerlink" title="FSM(Finle State machine)有限状态机"></a>FSM(Finle State machine)有限状态机</h2><p>表示有限个状态(State)集合以及这些状态之间转移和动作的数学模型，其中一个状态被标记为开始状态，0个或更多的状态被标记为final状态。</p><p>要素：</p><ol><li>有限个状态</li><li>同一时间只能处于同一个状态</li><li>不同状态可以互相转换</li><li>状态是无序</li></ol><p>例如：</p><ul><li>睡觉——&gt;工作——&gt;卫生间——&gt;吃饭</li><li>睡觉——&gt;吃饭——&gt;卫生间——&gt;工作</li><li>睡觉——&gt;卫生间——&gt;工作——&gt;吃饭</li></ul><h2 id="FSA-有限状态接收机"><a href="#FSA-有限状态接收机" class="headerlink" title="FSA 有限状态接收机"></a>FSA 有限状态接收机</h2><p>要素：</p><ol><li>确定性：在任何给定状态下，对于任何输入，最多只能遍历一个transition</li><li>非循环：不可能重复遍历同一个状态</li><li>Final唯一性：当且仅当有限状态机在输入序列的末尾处于最终状态时，才接受特定输入序列</li></ol><ul><li>输入msbtech</li><li>输入msn</li><li>输入wltech</li></ul><h2 id="FST-有限状态转换机"><a href="#FST-有限状态转换机" class="headerlink" title="FST 有限状态转换机"></a>FST 有限状态转换机</h2><p>FST最重要的功能是可以实现key到value的映射，相当于HashMa p&lt;key, value&gt;，FST的查询速度要比HashMap要慢一些，但是FST的内存消耗要比HashMap少很多，FST在Lucene中大量使用，例如：倒排索引存储，同义词典的存储，搜索关键词等</p><p>例如给定一些词项：</p><ul><li>msb/10</li><li>msbtech/5</li><li>msn/2</li><li>wltech/8</li><li>wth/16</li></ul><h2 id="Lucene源码解析FST构建过程"><a href="#Lucene源码解析FST构建过程" class="headerlink" title="Lucene源码解析FST构建过程"></a><strong>Lucene</strong>源码解析FST构建过程</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;FST构建过程&quot;&gt;&lt;a href=&quot;#FST构建过程&quot; class=&quot;headerlink&quot; title=&quot;FST构建过程&quot;&gt;&lt;/a&gt;FST构建过程&lt;/h1&gt;&lt;p&gt;FST表示有限状态集&lt;/p&gt;
&lt;h2 id=&quot;FSM-Finle-State-machine-有限状</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>压缩算法</title>
    <link href="http://example.com/2023/03/05/treasurebox/elasticsearch/xue-xi-bi-ji/5.luence/2.ya-suo-suan-fa/"/>
    <id>http://example.com/2023/03/05/treasurebox/elasticsearch/xue-xi-bi-ji/5.luence/2.ya-suo-suan-fa/</id>
    <published>2023-03-05T02:47:02.265Z</published>
    <updated>2023-04-28T09:25:47.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="posting-list压缩算法"><a href="#posting-list压缩算法" class="headerlink" title="posting list压缩算法"></a>posting list压缩算法</h1><h2 id="FOR压缩算法"><a href="#FOR压缩算法" class="headerlink" title="FOR压缩算法"></a>FOR压缩算法</h2><h2 id="RBM压缩"><a href="#RBM压缩" class="headerlink" title="RBM压缩"></a>RBM压缩</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;posting-list压缩算法&quot;&gt;&lt;a href=&quot;#posting-list压缩算法&quot; class=&quot;headerlink&quot; title=&quot;posting list压缩算法&quot;&gt;&lt;/a&gt;posting list压缩算法&lt;/h1&gt;&lt;h2 id=&quot;FOR压缩算法&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>mac</title>
    <link href="http://example.com/2023/03/02/treasurebox/elasticsearch/ben-di-diao-shi-elasticsearch/mac/"/>
    <id>http://example.com/2023/03/02/treasurebox/elasticsearch/ben-di-diao-shi-elasticsearch/mac/</id>
    <published>2023-03-02T13:39:56.058Z</published>
    <updated>2023-04-28T09:25:47.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mac环境运行linux"><a href="#mac环境运行linux" class="headerlink" title="mac环境运行linux"></a>mac环境运行linux</h2><p>参考链接：<a href="https://www.elastic.co/cn/blog/how-to-debug-elasticsearch-source-code-in-intellij-idea">https://www.elastic.co/cn/blog/how-to-debug-elasticsearch-source-code-in-intellij-idea</a></p><ol><li><h4 id="首先clone-ElasticSearch源码到本地"><a href="#首先clone-ElasticSearch源码到本地" class="headerlink" title="首先clone ElasticSearch源码到本地"></a>首先clone ElasticSearch源码到本地</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/elastic/elasticsearch.git</span><br><span class="line"></span><br><span class="line">cd elasticsearch </span><br><span class="line">git checkout --track origin/6.6</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="安装IntelliJ-IDEA-软件"><a href="#安装IntelliJ-IDEA-软件" class="headerlink" title="安装IntelliJ IDEA 软件"></a>安装<a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a> 软件</h4></li><li><h4 id="安装Java并配置java路径"><a href="#安装Java并配置java路径" class="headerlink" title="安装Java并配置java路径"></a>安装Java并配置java路径</h4><ol><li><h5 id="elasticsearch6-6-可以基于java11构建，但是也需要java9的部分功能，所以需要安装java9和java11"><a href="#elasticsearch6-6-可以基于java11构建，但是也需要java9的部分功能，所以需要安装java9和java11" class="headerlink" title="elasticsearch6.6 可以基于java11构建，但是也需要java9的部分功能，所以需要安装java9和java11."></a><strong>elasticsearch6.6 可以基于java11构建，但是也需要java9的部分功能，所以需要安装java9和java11.</strong></h5></li><li><p><strong>java9</strong>:<a href="https://www.oracle.com/java/technologies/javase/javase9-archive-downloads.html">https://www.oracle.com/java/technologies/javase/javase9-archive-downloads.html</a></p></li><li><p><strong>java11</strong>:<a href="https://www.oracle.com/java/technologies/downloads/#java11">https://www.oracle.com/java/technologies/downloads/#java11</a></p></li></ol><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打开文件</span></span><br><span class="line">vim ～/.bash_profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加入java安装路径</span></span><br><span class="line">JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-11.0.2.jdk/Contents/Home </span><br><span class="line">export JAVA_HOME</span><br><span class="line"></span><br><span class="line">JAVA9_HOME=/Library/Java/JavaVirtualMachines/jdk-9.0.4.jdk/Contents/Home </span><br><span class="line">export JAVA9_HOME</span><br><span class="line"></span><br><span class="line">退出文件然后输入：</span><br><span class="line">source ～/.bash_profile</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="使用IntelliJ-IDEA-打开elasticsearch源码"><a href="#使用IntelliJ-IDEA-打开elasticsearch源码" class="headerlink" title="使用IntelliJ IDEA 打开elasticsearch源码"></a>使用IntelliJ IDEA 打开elasticsearch源码</h4><p><img src="/mac/images/image-20230302230200602.png" alt="image-20230302230200602"></p></li><li><h4 id="初始化gradlew，详细步骤可以参考es代码中的CONTRIBUTING-md文件"><a href="#初始化gradlew，详细步骤可以参考es代码中的CONTRIBUTING-md文件" class="headerlink" title="初始化gradlew，详细步骤可以参考es代码中的CONTRIBUTING.md文件"></a>初始化gradlew，详细步骤可以参考es代码中的CONTRIBUTING.md文件</h4><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在终端中执行</span></span><br><span class="line"></span><br><span class="line">./gradlew idea</span><br><span class="line"></span><br><span class="line">./gradlew run --debug-jvm</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="然后等待片刻，如果遇到这个报错，说明8000端口被占用，需要开放端口。"><a href="#然后等待片刻，如果遇到这个报错，说明8000端口被占用，需要开放端口。" class="headerlink" title="然后等待片刻，如果遇到这个报错，说明8000端口被占用，需要开放端口。"></a>然后等待片刻，如果遇到这个报错，说明<strong>8000</strong>端口被占用，需要开放端口。</h4><p><img src="/mac/images/image-20230302222745201.png" alt="image-20230302222745201"></p></li><li><h4 id="下图表示运行成功"><a href="#下图表示运行成功" class="headerlink" title="下图表示运行成功"></a>下图表示运行成功<img src="/mac/images/image-20230302223411391.png" alt="image-20230302223411391"></h4></li><li><p>这时在浏览器上访问<a href="http://localhost:9200/%E5%B9%B6%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%EF%BC%8C%E9%9C%80%E8%A6%81%E5%9C%A8idea%E4%B8%8A%E9%85%8D%E7%BD%AEdebug%E6%A8%A1%E5%BC%8F">http://localhost:9200/并不能访问，需要在idea上配置debug模式</a></p><p><img src="/mac/images/image-20230302225150362.png" alt="image-20230302225150362"></p><h5 id="新建一个remote连接："><a href="#新建一个remote连接：" class="headerlink" title="新建一个remote连接："></a>新建一个remote连接：</h5><p><img src="/mac/images/image-20230302225220938.png" alt="image-20230302225220938"></p><h5 id="修改名称和端口"><a href="#修改名称和端口" class="headerlink" title="修改名称和端口"></a>修改名称和端口<img src="/mac/images/image-20230302225315563.png" alt="image-20230302225315563"></h5></li><li><h4 id="看到如下日志代表成功"><a href="#看到如下日志代表成功" class="headerlink" title="看到如下日志代表成功"></a>看到如下日志代表成功</h4><p><img src="/mac/images/image-20230302225612172.png" alt="image-20230302225612172"></p></li><li><h4 id="在浏览器上输入http-localhost-9200-即可访问-image-20230302231400414-mac-images-image-20230302231400414-png"><a href="#在浏览器上输入http-localhost-9200-即可访问-image-20230302231400414-mac-images-image-20230302231400414-png" class="headerlink" title="在浏览器上输入http://localhost:9200/即可访问![image-20230302231400414](mac/images/image-20230302231400414.png)"></a>在浏览器上输入<a href="http://localhost:9200/%E5%8D%B3%E5%8F%AF%E8%AE%BF%E9%97%AE![image-20230302231400414](mac/images/image-20230302231400414.png)">http://localhost:9200/即可访问![image-20230302231400414](mac/images/image-20230302231400414.png)</a></h4></li><li><h4 id="源码文件说明"><a href="#源码文件说明" class="headerlink" title="源码文件说明"></a>源码文件说明</h4><blockquote><p>docs 项目文件</p><p>distribution 分发</p><p>libs 用于构建项目其他部分的库。这些是注定的</p><p>modules 模块</p><p>plugins 插件</p><p>qa 质量保证</p><p>server服务器组件，包含所有模块和插件</p><p>test测试框架和测试工具</p><p>x-packES其余部分集成的商业许可码</p><p>Gradle Build 使用gradle构建和打包</p><p>ConfigurationsGradle依赖的配置</p></blockquote></li></ol><p></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;mac环境运行linux&quot;&gt;&lt;a href=&quot;#mac环境运行linux&quot; class=&quot;headerlink&quot; title=&quot;mac环境运行linux&quot;&gt;&lt;/a&gt;mac环境运行linux&lt;/h2&gt;&lt;p&gt;参考链接：&lt;a href=&quot;https://www.elas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>elsaticsearch操作手册</title>
    <link href="http://example.com/2023/02/24/treasurebox/elasticsearch/cao-zuo-shou-ce/elsaticsearch-cao-zuo-shou-ce/"/>
    <id>http://example.com/2023/02/24/treasurebox/elasticsearch/cao-zuo-shou-ce/elsaticsearch-cao-zuo-shou-ce/</id>
    <published>2023-02-24T06:56:57.159Z</published>
    <updated>2023-04-28T09:25:47.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ES操作手册"><a href="#ES操作手册" class="headerlink" title="ES操作手册"></a>ES操作手册</h1><ol><li><h3 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h3><ol><li><h5 id="集群异常情况GET-cluster-allocation-explain"><a href="#集群异常情况GET-cluster-allocation-explain" class="headerlink" title="集群异常情况GET _cluster/allocation/explain"></a>集群异常情况<code>GET _cluster/allocation/explain</code></h5><ol><li><p>可选参数：</p><ol><li><strong>include_disk_info</strong>：bool，可选，如果为true，返回有关磁盘使用情况和分片大小的情况，默认为false。</li><li><strong>include_yes_decisions</strong>：可选，布尔值）如果<code>true</code>，则在解释中返回<em>YES</em>决定</li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看集群状态异常</span></span><br><span class="line">GET _cluster/allocation/explain</span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><h5 id="集群配置GET-cluster-settings"><a href="#集群配置GET-cluster-settings" class="headerlink" title="集群配置GET /_cluster/settings"></a>集群配置<code>GET /_cluster/settings</code></h5><ol><li>查询参数<ol><li><strong><code>flat_settings</code></strong>:（可选，布尔值）如果<code>true</code>，则以平面格式返回设置。默认为 <code>false</code>.</li><li><strong><code>include_defaults</code></strong>:（可选，布尔值）如果<code>true</code>，返回所有默认集群设置。默认为<code>false</code>.</li><li><strong><code>master_timeout</code></strong>:（可选，<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/api-conventions.html#time-units">时间单位</a>）等待连接到主节点的时间。如果在超时到期之前未收到响应，则请求失败并返回错误。默认为 <code>30s</code>.</li><li><strong><code>timeout</code></strong>:（可选，<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/api-conventions.html#time-units">时间单位</a>）等待响应的时间。如果在超时到期之前未收到响应，则请求失败并返回错误。默认为<code>30s</code>.</li></ol></li></ol></li><li><h5 id="集群健康度：GET-cluster-health-lt-target-gt"><a href="#集群健康度：GET-cluster-health-lt-target-gt" class="headerlink" title="集群健康度：GET /_cluster/health/<target>"></a>集群健康度：<code>GET /_cluster/health/&lt;target&gt;</code></h5></li><li><h5 id="集群state：GET-cluster-state"><a href="#集群state：GET-cluster-state" class="headerlink" title="集群state：GET _cluster/state"></a>集群state：<code>GET _cluster/state</code></h5></li><li><h5 id="集群stats："><a href="#集群stats：" class="headerlink" title="集群stats："></a>集群stats：</h5><ol><li><code>GET _cluster/stats</code></li><li><code>GET /_cluster/stats/nodes/&lt;node_filter&gt;</code></li></ol></li><li><h5 id="更新集群配置"><a href="#更新集群配置" class="headerlink" title="更新集群配置"></a>更新集群配置</h5><ol><li><p><code>PUT _cluster/settings</code>，persistent表示永久更新，transient表示临时更新</p></li><li><p>修改集群恢复时每秒的大小</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /_cluster/settings</span><br><span class="line">{</span><br><span class="line">  "persistent" : {</span><br><span class="line">    "indices.recovery.max_bytes_per_sec" : "50mb"</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>修改集群允许通配符删除</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改集群配置，允许使用通配符删除</span></span><br><span class="line">PUT _cluster/settings</span><br><span class="line">{</span><br><span class="line">  <span class="string">"persistent"</span>:{</span><br><span class="line">    <span class="string">"action.destructive_requires_name"</span>:false</span><br><span class="line">  },</span><br><span class="line">  <span class="string">"transient"</span>:{</span><br><span class="line">    <span class="string">"action.destructive_requires_name"</span>:false</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><h5 id="节点功能查询，获取集群中每个节点的作用"><a href="#节点功能查询，获取集群中每个节点的作用" class="headerlink" title="节点功能查询，获取集群中每个节点的作用"></a>节点功能查询，获取集群中每个节点的作用</h5><ol><li><code>GET /_nodes/usage</code></li><li><code>GET /_nodes/&lt;node_id&gt;/usage</code></li><li><code>GET /_nodes/usage/&lt;metric&gt;</code></li><li><code>GET /_nodes/&lt;node_id&gt;/usage/&lt;metric&gt;</code></li><li></li></ol></li><li><h5 id="节点热线程：获取每个选定节点上的热线程情况"><a href="#节点热线程：获取每个选定节点上的热线程情况" class="headerlink" title="节点热线程：获取每个选定节点上的热线程情况"></a>节点热线程：获取每个选定节点上的热线程情况</h5><ol><li><code>GET /_nodes/hot_threads</code></li><li><code>GET /_nodes/&lt;node_id&gt;/hot_threads</code></li><li>查询参数：<ol><li><strong>ignore_idle_threads</strong>：可选，布尔值，如果为真，则过滤掉已知空闲县城</li><li>**<code>interval</code>**：（可选，<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/api-conventions.html#time-units">时间单位</a>）对线程进行第二次采样的时间间隔。默认为<code>500ms</code>.</li><li>**<code>snapshots</code>**：（可选，整数）线程堆栈跟踪的样本数。默认为 <code>10</code>.</li><li>**<code>threads</code>**：（可选，整数）指定要为其提供信息的热线程数。默认为<code>3</code>.</li><li>**<code>master_timeout</code>**：（可选，<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/api-conventions.html#time-units">时间单位</a>）等待连接到主节点的时间。如果在超时到期之前未收到响应，则请求失败并返回错误。默认为 <code>30s</code>.</li><li>**<code>timeout</code><strong>：（可选，<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/api-conventions.html#time-units">时间单位</a>）等待响应的时间。如果在超时到期之前未收到响应，则请求失败并返回错误。默认为<code>30s</code>.</strong><code>type</code>**（可选，字符串）要采样的类型。可用选项有<code>block</code>、<code>cpu</code>和 <code>wait</code>。默认为<code>cpu</code>.</li></ol></li></ol><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 示例</span></span><br><span class="line">GET  /_nodes/hot_threads </span><br><span class="line">GET /_nodes/nodeId1,nodeId2/hot_threads</span><br><span class="line">GET /_nodes/hot_threads </span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="查询节点信息：检索一个或集群全部节点信息。"><a href="#查询节点信息：检索一个或集群全部节点信息。" class="headerlink" title="查询节点信息：检索一个或集群全部节点信息。"></a>查询节点信息：检索一个或集群全部节点信息。</h5><ol><li><code>GET /_nodes</code></li><li><code>GET /_nodes/&lt;node_id&gt;</code></li><li><code>GET /_nodes/&lt;metric&gt;</code></li><li><code>GET /_nodes/&lt;node_id&gt;/&lt;metric&gt;</code></li><li>metric可选的参数<ol><li>**<code>aggregations</code>**：有关可用聚合类型的信息。</li><li>**<code>http</code>**：有关此节点的 HTTP 接口的信息。</li><li>**<code>indices</code>**：与索引相关的节点级配置：<ul><li><code>total_indexing_buffer</code>: 此节点上索引缓冲区的最大大小。</li></ul></li><li>**<code>ingest</code>**：有关摄取管道和处理器的信息。</li><li>**<code>jvm</code>**：JVM 信息，包括其名称、版本和配置。</li><li>**<code>os</code>**：操作系统信息，包括其名称和版本。</li><li>**<code>plugins</code>**：有关每个节点安装的插件和模块的详细信息。以下信息适用于每个插件和模块：<ul><li><code>name</code>: 插件名称</li><li><code>version</code>: 构建插件的 Elasticsearch 版本</li><li><code>description</code>: 插件用途的简短描述</li><li><code>classname</code>: 插件入口点的完全限定类名</li><li><code>has_native_controller</code>: 插件是否有一个本地控制器进程</li></ul></li><li>**<code>process</code>**：进程信息，包括数字进程 ID。</li><li>**<code>settings</code>**：列出文件中定义的所有正在使用的节点设置<code>elasticsearch.yml</code>。</li><li>**<code>thread_pool</code>**：有关每个线程池的配置信息。</li><li>**<code>transport</code>**：有关节点传输接口的信息。</li></ol></li></ol></li><li><h5 id="验证节点是否可以删除POST-internal-prevalidate-node-removal"><a href="#验证节点是否可以删除POST-internal-prevalidate-node-removal" class="headerlink" title="验证节点是否可以删除POST /_internal/prevalidate_node_removal"></a>验证节点是否可以删除<code>POST /_internal/prevalidate_node_removal</code></h5></li><li><p>此 API 检查尝试从集群中删除指定节点是否可能成功。对于没有未分配分片的集群，删除任何节点都被认为是安全的，这意味着删除节点很可能会成功。如果集群的<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-health.html"><code>red</code>集群健康状况</a>为 ，它会验证节点的移除不会冒移除未分配分片的最后剩余副本的风险。</p><p>响应包括删除指定节点的整体安全性，以及每个节点的详细响应。响应的特定于节点的部分还包括有关为什么删除该节点可能不成功的更多详细信息。</p></li><li><h5 id="节点重新加载安全设置"><a href="#节点重新加载安全设置" class="headerlink" title="节点重新加载安全设置"></a>节点重新加载安全设置</h5></li><li><h5 id="节点统计"><a href="#节点统计" class="headerlink" title="节点统计"></a>节点统计</h5></li><li><h5 id="挂起的集群任务"><a href="#挂起的集群任务" class="headerlink" title="挂起的集群任务"></a>挂起的集群任务</h5></li><li><h5 id="远程集群信息"><a href="#远程集群信息" class="headerlink" title="远程集群信息"></a>远程集群信息</h5></li><li><h5 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h5></li><li><h5 id="投票配置排除"><a href="#投票配置排除" class="headerlink" title="投票配置排除"></a>投票配置排除</h5></li><li><h5 id="创建或更新所需的节点"><a href="#创建或更新所需的节点" class="headerlink" title="创建或更新所需的节点"></a>创建或更新所需的节点</h5></li><li><h5 id="获取所需的节点"><a href="#获取所需的节点" class="headerlink" title="获取所需的节点"></a>获取所需的节点</h5></li><li><h5 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h5></li><li><h5 id="获取剩余的节点"><a href="#获取剩余的节点" class="headerlink" title="获取剩余的节点"></a>获取剩余的节点</h5></li></ol></li><li><h3 id="分片"><a href="#分片" class="headerlink" title="分片"></a>分片</h3><ol><li><h5 id="查看索引分片-GET-cat-shards-v"><a href="#查看索引分片-GET-cat-shards-v" class="headerlink" title="查看索引分片:GET _cat/shards?v"></a>查看索引分片:<code>GET _cat/shards?v</code></h5></li></ol></li><li><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><ol><li><h5 id="查看所有索引"><a href="#查看所有索引" class="headerlink" title="查看所有索引"></a>查看所有索引</h5><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 查看索引按照大小排序</span><br><span class="line">GET _cat/indices?s=store.size<span class="punctuation">:</span>desc&amp;v</span><br><span class="line"></span><br><span class="line">#创建索引</span><br><span class="line">curl -XPUT <span class="string">"http://127.0.0.1:9200/test1/"</span> -d</span><br><span class="line">'<span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"settings"</span><span class="punctuation">:</span><span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"number_of_shards"</span> <span class="punctuation">:</span> <span class="string">"1"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"number_of_replicas"</span> <span class="punctuation">:</span> <span class="string">"1"</span></span><br><span class="line">  <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">}</span>' -H<span class="string">"content-type:application/json"</span></span><br><span class="line"></span><br><span class="line">#删除索引</span><br><span class="line">DELETE test</span><br><span class="line"></span><br><span class="line"># 批量删除索引</span><br><span class="line">DELETE test_*</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="创建索引指定mapping"><a href="#创建索引指定mapping" class="headerlink" title="创建索引指定mapping"></a>创建索引指定mapping</h5><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT <span class="string">"127.0.0.1:9200/test1"</span> -H<span class="string">"content-type:application/json"</span> -d'<span class="punctuation">{</span><span class="attr">"mappings"</span><span class="punctuation">:</span><span class="punctuation">{</span><span class="attr">"properties"</span><span class="punctuation">:</span><span class="punctuation">{</span><span class="attr">"field1"</span><span class="punctuation">:</span><span class="punctuation">{</span><span class="attr">"type"</span><span class="punctuation">:</span><span class="string">"keyword"</span><span class="punctuation">,</span><span class="attr">"copy_to"</span><span class="punctuation">:</span><span class="string">"field_all"</span><span class="punctuation">}</span><span class="punctuation">,</span><span class="attr">"field2"</span><span class="punctuation">:</span><span class="punctuation">{</span><span class="attr">"type"</span><span class="punctuation">:</span><span class="string">"text"</span><span class="punctuation">}</span><span class="punctuation">,</span><span class="attr">"field_all"</span><span class="punctuation">:</span><span class="punctuation">{</span><span class="attr">"type"</span><span class="punctuation">:</span><span class="string">"text"</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="punctuation">}</span><span class="punctuation">}</span>'</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="查看索引mapping"><a href="#查看索引mapping" class="headerlink" title="查看索引mapping"></a>查看索引mapping</h5><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET '<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="punctuation">:</span><span class="number">9200</span>/test/_mapping?pretty'</span><br><span class="line"># ignore_above 表示最长存储的长度，超过时会被丢弃</span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"test"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"mappings"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">      <span class="attr">"properties"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"desc"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span> <span class="punctuation">:</span> <span class="string">"text"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"fields"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"keyword"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"type"</span> <span class="punctuation">:</span> <span class="string">"keyword"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"ignore_above"</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"name"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span> <span class="punctuation">:</span> <span class="string">"text"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"fields"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"keyword"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"type"</span> <span class="punctuation">:</span> <span class="string">"keyword"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"ignore_above"</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"price"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span> <span class="punctuation">:</span> <span class="string">"long"</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"tags"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">          <span class="attr">"type"</span> <span class="punctuation">:</span> <span class="string">"text"</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">"fields"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"keyword"</span> <span class="punctuation">:</span> <span class="punctuation">{</span></span><br><span class="line">              <span class="attr">"type"</span> <span class="punctuation">:</span> <span class="string">"keyword"</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">"ignore_above"</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">          <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">      <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">}</span></span><br><span class="line">  <span class="punctuation">}</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure></li></ol></li><li><h3 id="文档操作"><a href="#文档操作" class="headerlink" title="文档操作"></a>文档操作</h3><ol><li><h5 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h5><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST <span class="string">"http://127.0.0.1:9200/test/_doc"</span> -d'<span class="punctuation">{</span></span><br><span class="line">        <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"iphone11"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"desc"</span><span class="punctuation">:</span> <span class="string">"256G"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">"price"</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">         <span class="attr">"tags"</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">"shouji"</span><span class="punctuation">,</span> <span class="string">"fangshui"</span><span class="punctuation">,</span> <span class="string">"nfc"</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span>' -H<span class="string">"content-type:application/json"</span></span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h5><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST <span class="string">"http://127.0.0.1:9200/test/_update/1"</span> -d'<span class="punctuation">{</span><span class="attr">"doc"</span><span class="punctuation">:</span><span class="punctuation">{</span><span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"iphone14"</span><span class="punctuation">}</span><span class="punctuation">}</span>' -H<span class="string">"content-type:application/json"</span></span><br></pre></td></tr></tbody></table></figure></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ES操作手册&quot;&gt;&lt;a href=&quot;#ES操作手册&quot; class=&quot;headerlink&quot; title=&quot;ES操作手册&quot;&gt;&lt;/a&gt;ES操作手册&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;集群&quot;&gt;&lt;a href=&quot;#集群&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="http://example.com/2023/02/11/treasurebox/shu-ju-jie-gou/suan-fa/"/>
    <id>http://example.com/2023/02/11/treasurebox/shu-ju-jie-gou/suan-fa/</id>
    <published>2023-02-11T13:24:29.470Z</published>
    <updated>2023-04-28T09:25:47.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><p>递归：在函数中自己调用自身，类似于压栈</p><p>递归三要素：</p><ol><li>递归边界：一定要有终止条件</li><li>逻辑处理</li><li>调用自身</li><li>状态清理</li></ol><p>例如：</p><p>斐波那契</p><p>某个数的阶乘</p><h2 id="分治：Divde-amp-Conquer"><a href="#分治：Divde-amp-Conquer" class="headerlink" title="分治：Divde &amp; Conquer"></a>分治：Divde &amp; Conquer</h2><p>分而治之：将一个大问题依次解决，类似于庖丁解牛。</p><p>经典算法：二分查找、快排</p><h2 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h2><p>简单来说：问题能够分解成子问题来解决，子问题的最优解能递推到最终的最优解，这样子问题最优解称为最优子结构。</p><p>贪心算法与动态规划的不同在于它对每个子问题的解决方案都做出选择，不能回退。动态规划则会保存以前的运算结果，并根据以前的结果对当前进行选择，有回退功能。</p><h2 id="广度优先算法"><a href="#广度优先算法" class="headerlink" title="广度优先算法"></a>广度优先算法</h2><p>Breadth First Search</p><p>在树（图/状态集）中查找特定节点</p><p>每层推进的过程中没有重复的，先扫描某个节点时，将该节点的所有子节点全部加入，以作为下次继续推进。</p><p>又称为地毯式搜索</p><h2 id="深度优先"><a href="#深度优先" class="headerlink" title="深度优先"></a>深度优先</h2><p>Depth First Search</p><p>每层推进的过程中没有重复的，先扫描某个节点时，将某个节点一直扫描到叶子节点之后，再扫描该节点的其他节点。</p><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><ol><li>单调递增或递减</li><li>存在上下界</li><li>能够通过索引访问</li></ol><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><p>什么是位运算：程序中所有数在计算机内存中都是以二进制的形式储存的。位运算说白了就是对证书在内存中的二进制位进行操作。比如：and运算本来是一个逻辑运算符，但整数与整数之间也可以进行and运算。举个例子：6的二进制是110，11的二进制是1011，那么6 and 11的结果就是2，它的二进制对应位进行逻辑运算的结果（0表示False，1表示True，空位都当0处理）：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">110 AND 1011 &gt;&gt; 0010(b)——&gt; 2(d)</span><br></pre></td></tr></tbody></table></figure><p>由于位运算直接对内存数据进行操作，不需要转成十进制，因此处理速度非常快。</p><table><thead><tr><th>符号</th><th>描述</th><th>运算规则</th></tr></thead><tbody><tr><td>&amp;</td><td>与</td><td>两个位都为1时，结果才为1</td></tr><tr><td>|</td><td>或</td><td>两个位都为0时，结果才为0</td></tr><tr><td>^</td><td>异或</td><td>两个位相同时为0，相异为1</td></tr><tr><td>-</td><td>取反</td><td>0变1，1变0</td></tr><tr><td>&lt;&lt;</td><td>左移</td><td>各二进制位全部左移若敢为，高位丢弃，低位补0</td></tr><tr><td>&gt;&gt;</td><td>右移</td><td>各二进制位全部右移若干位，对无符号数，高位补0，有符号数，各编译器处理方式不一样，有的补符号位(算数右移)，有的补0（逻辑右移）</td></tr></tbody></table><h2 id="动态规划-Dynamic-Programming"><a href="#动态规划-Dynamic-Programming" class="headerlink" title="动态规划(Dynamic Programming)"></a>动态规划(Dynamic Programming)</h2><p>动态规划分为4个思路：</p><ol><li>递归+记忆化 ——&gt; 递推</li><li>状态的定义：opt[n]，dp[n]，fib[n]</li><li>状态转移方程：opt[n] = best_of(opt[n-1],opt[n-2],…)</li><li>最优子结构</li></ol><p>先规划最基础的一步怎么执行，然后逐层反推，得到最优的方案</p><h2 id="DP-vs-回溯-vs-贪心"><a href="#DP-vs-回溯-vs-贪心" class="headerlink" title="DP vs 回溯 vs 贪心"></a>DP vs 回溯 vs 贪心</h2><ul><li>回溯（递归）—— 重复计算，尽可能考虑重复计算问题，减少重复计算</li><li>贪心 —— 永远局部最优</li><li>DP —— 记录局部最优子结构 / 多种记录值</li></ul><h2 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h2><p>并查集(union &amp; find)是一种树形的数据结构，用于处理一些不交集(Disjoint Sets)的合并及查询问题</p><p>Find：确定元素属于哪一个子集。它可以被用来确定两个元素是否属于同一个子集</p><p>union：将两个子集合并为同一个集合。</p><p>示例，给定一串数组<code>1 2 3 4 5 6 7 8 </code></p><p>拆分为<code>1 2 5 6 8</code> <code>3 4</code> <code>7</code>子集形式</p><h5 id="生活中的例子"><a href="#生活中的例子" class="headerlink" title="生活中的例子"></a>生活中的例子</h5><ol><li>小弟——&gt; 老大</li><li>帮派识别</li><li>两种优化方式：并查集的深度成为rank<ol><li>将rank低的合并到rank高的并查集中</li><li>进行读路径优化：将<code>d c b a a</code>路径全部压缩为<code>d a</code>,<code>c a</code>,<code>b a</code>,<code>a a</code></li></ol></li></ol><h2 id="Cache-缓存"><a href="#Cache-缓存" class="headerlink" title="Cache 缓存"></a>Cache 缓存</h2><ol><li>记忆</li><li>钱包——储物柜</li><li>代码模块</li></ol><h2 id="LRU-Cache"><a href="#LRU-Cache" class="headerlink" title="LRU Cache"></a>LRU Cache</h2><ol><li>Least recently used（最近最少使用）</li><li>Double LinkedList</li><li>O(1)查询，查询最近的数据是O(1)</li><li>O(1)修改</li></ol><h2 id="LFU-Cache"><a href="#LFU-Cache" class="headerlink" title="LFU Cache"></a>LFU Cache</h2><ol><li>LFU ——least frequently used 最近最不常用页面置换算法</li><li>LRU——least recently used 最近最少使用页面置换算法</li></ol><h2 id="Bloom-Filter-布隆过滤器"><a href="#Bloom-Filter-布隆过滤器" class="headerlink" title="Bloom Filter 布隆过滤器"></a>Bloom Filter 布隆过滤器</h2><p>一个很长的二进制向量和一个映射函数</p><p>布隆过滤器可以用于检索一个元素是否在一个集合中</p><p>他的优点是空间效率和查询效率远远超过一般算法，缺点是有一定的误识别率和删除困难</p><p>误识别率：数据存在时会出现误判，不存在时一定不存在</p><p>删除困难：哈希之后的结果不好删除，可能会误删其他元素的值</p><p>案例：</p><ol><li>比特币</li><li>分布式系统（Map-Reduce）</li></ol><h2 id="现实中的算法问题"><a href="#现实中的算法问题" class="headerlink" title="现实中的算法问题"></a>现实中的算法问题</h2><p>适用于找房子，找女朋友，吃饭等等选择问题。</p><p>假设1年找2个女朋友，</p><ol><li>如果能选择之前的，O(n)</li><li>如果不能后悔，则用37%原则</li></ol><p>其他：</p><ol><li>Priority Queue 一个任务的密度=重要程度/完成时间</li><li>Kelly Formula 凯利公式</li><li>Game Theory 博弈论</li></ol><h2 id="代码模版"><a href="#代码模版" class="headerlink" title="代码模版"></a>代码模版</h2><ol><li>递归</li><li>DFS：深度优先遍历</li><li>BFS：广度优先遍历</li><li>二分查找</li><li>DP方程</li></ol><h2 id="练习和切题"><a href="#练习和切题" class="headerlink" title="练习和切题"></a>练习和切题</h2><p><strong>持续练习+精深练习（刻意练习）</strong></p><ol><li>除了做熟悉的题和会做的题之外，去刻意练习自己不熟悉的算法和数据结构，不要为了切题而切题</li><li>做过的题目后续要返回再复习</li></ol><h2 id="面试答题四件套"><a href="#面试答题四件套" class="headerlink" title="面试答题四件套"></a>面试答题四件套</h2><ol><li>Clarification 询问题目细节、边界条件、可能的极端错误</li><li>Possible Solution 所有可能的解法都和面试官沟通一下<ol><li>时间复杂度 &amp; 空间复杂度</li><li>最优解</li></ol></li><li>Coding 写代码</li><li>Test Cases 测试用例</li></ol><p> <strong>沟通和交流很重要</strong></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>常学常新</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;递归&quot;&gt;&lt;a href=&quot;#递归&quot; class=&quot;headerlink&quot; title=&quot;递归&quot;&gt;&lt;/a&gt;递归&lt;/h1&gt;&lt;p&gt;递归：在函数中自己调用自身，类似于压栈&lt;/p&gt;
&lt;p&gt;递归三要素：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;递归边界：一定要有终止条件&lt;/li&gt;
&lt;li&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>trie</title>
    <link href="http://example.com/2023/02/11/treasurebox/shu-ju-jie-gou/2.trie/"/>
    <id>http://example.com/2023/02/11/treasurebox/shu-ju-jie-gou/2.trie/</id>
    <published>2023-02-11T12:15:52.181Z</published>
    <updated>2023-04-28T09:25:47.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Trie树"><a href="#Trie树" class="headerlink" title="Trie树"></a>Trie树</h1><h2 id="trie的数据结构"><a href="#trie的数据结构" class="headerlink" title="trie的数据结构"></a>trie的数据结构</h2><p>trie树，即字典树有称为单词查找树或键树，是一种树形结构，是一种哈希树的变种。典型应用于统计和排序大量的字符串（但不限于字符串），所以经常被搜索引擎系统用于文本词频统计。</p><p>它的优点是：最大限度地减少无谓的字符串比较，查询效率比哈希表高。</p><h2 id="trie的核心思想"><a href="#trie的核心思想" class="headerlink" title="trie的核心思想"></a>trie的核心思想</h2><p>Trie的核心思想是空间换时间。利用字符串的公共前缀来降低查询时间的开销以达到提高效率的目的。</p><h2 id="trie的基本性质"><a href="#trie的基本性质" class="headerlink" title="trie的基本性质"></a>trie的基本性质</h2><ol><li>根节点不包含字符，除根节点外每个节点都只包含一个字符。</li><li>从根节点到某一节点，路径上经过的字符串连接起来，为该节点对应的字符串</li><li>每个节点的所有子节点包含的字符都不相同</li></ol><p><strong>树&amp;二叉树&amp;二叉搜索树</strong></p><p>trie结构类似生活中倒立的树。</p><p>树最头上的节点叫做头结点，左边任何一个树叫做左子树，右边叫右子树。</p><p>其中节点称为父节点，同一个父节点的子节点称为兄弟节点。</p><p>子节点距离头节点的距离为层级，头节点所在的层级为level0.</p><h2 id="二叉搜索树-Binary-Search-Tree-："><a href="#二叉搜索树-Binary-Search-Tree-：" class="headerlink" title="二叉搜索树(Binary Search Tree)："></a>二叉搜索树(Binary Search Tree)：</h2><p>也称为二叉搜索树、有序二叉树(Ordered binary tree)、排序二叉树（Sorted binary tree），是指一颗空树或者具有下列性质的二叉树：</p><ol><li><code>左子树</code>上所有结点的值均小于它的根节点的值。</li><li><code>右子树</code>上所有结点的值均大于它的根结点的值。</li><li>Recursively，左、右子树也分别为二叉查找树。</li></ol><h2 id="二叉树遍历"><a href="#二叉树遍历" class="headerlink" title="二叉树遍历"></a>二叉树遍历</h2><ol><li>前序遍历：根左右</li><li>中序遍历：左根右</li><li>后序遍历：左右根</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Trie树&quot;&gt;&lt;a href=&quot;#Trie树&quot; class=&quot;headerlink&quot; title=&quot;Trie树&quot;&gt;&lt;/a&gt;Trie树&lt;/h1&gt;&lt;h2 id=&quot;trie的数据结构&quot;&gt;&lt;a href=&quot;#trie的数据结构&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>code review总结</title>
    <link href="http://example.com/2022/12/29/treasurebox/ji-zhu-wen-dang/code-review-zong-jie/"/>
    <id>http://example.com/2022/12/29/treasurebox/ji-zhu-wen-dang/code-review-zong-jie/</id>
    <published>2022-12-29T15:00:53.786Z</published>
    <updated>2023-04-28T09:25:47.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>作为公司代码委员会golang分会的理事，作为(还未任命)的技术leader，我review了很多代码，看了很多别人的review评论。发现，即使是委员会的委员，code review的水品，写出好代码的水品，不乏缺乏根本性的思路、设计原则的同学。特此，想分享一下我的很多理念和思路。</p><h1 id="为什么技术人员包括leader都要做code-review"><a href="#为什么技术人员包括leader都要做code-review" class="headerlink" title="为什么技术人员包括leader都要做code review"></a>为什么技术人员包括leader都要做code review</h1><p>​        谚语曰: ‘Talk Is Cheap, Show Me The Code’。知易行难，知行合一难。嘴里要讲出来总是轻松，把别人讲过的话记住，组织一下语言，再讲出来，很容易。绝知此事要躬行。设计理念你可能道听途说了一些，以为自己掌握了，但是你会做么？有能力去思考、改进自己当前的实践方式和实践中的代码细节么？不客气地说，很多人仅仅是知道并且认同了某个设计理念，进而产生了一种虚假的安心感—自己的技术并不差。但是，他根本没有去实践这些设计理念，甚至根本实践不了这些设计理念，从结果来说，他懂不懂这些道理/理念，有什么差别？变成了自欺欺人。</p><p>​        代码，是设计理念落地的地方，是技术的呈现和根本。同学们可以在review过程中做到落地沟通，不再是空对空的讨论，可以在实际问题中产生思考的碰撞，互相学习，大家都掌握团队里积累出来最好的实践方式！当然，如果leader没时间写代码，仅仅是review代码，指出其他同学某些实践方式不好，要给出好的实践的意见，即使没亲手写代码，也是对最佳实践要有很多思考。</p><h1 id="为什么同学们要在review中思考和总结最佳实践"><a href="#为什么同学们要在review中思考和总结最佳实践" class="headerlink" title="为什么同学们要在review中思考和总结最佳实践"></a>为什么同学们要在review中思考和总结最佳实践</h1><p>我这里先给一个我自己的总结：所谓架构师，就是掌握大量设计理念和原则、落地到各种语言及附带工具链（生态）下的实践方法、垂直行业模型理解，定制系统模型设计和工程实践规范细则。进而控制30+万行代码项目的开发便利性、可维护性、可测试性、运营质量。</p><p>接着，有一些同学就说了，张小龙老板是厉害的技术人，他是这样的人么？阿里巴巴的王坚是厉害的CTO，他懂golang、c++、java么？接着，我这里拓展讲解一下，我们和他们的不同。我的总结，厉害的技术人，主要可以分为下面几个方向：</p><ul><li><p>奇技淫巧</p><p>掌握很多技巧，以及发现技巧一系列思路，比如很多编程大赛，比的就是这个。但是，这个对工程，用处好像并不是很大。</p></li><li><p>领域奠基</p></li></ul><p>  比如约翰*卡马克，他创造出了现代计算机图形高效渲染的方法论。不论如果没有他，后面会不会有人发明，他就是第一个发明了。1999年，卡马克登上了美国时代杂志评选出来的科技领域50大影响力人物榜单，并且名列第10位。但是，类似的殿堂级位置，没有几个，不够大家分，没我们的事儿。</p><ul><li>理论研究</li></ul><p>  八十年代李开复博士坚持采用隐含马尔可夫模型的框架，成功地开发了世界上第一个大词汇量连续语音识别系统Sphinx。我辈工程师，好像擅长这个的很少。</p><ul><li>产品成功</li></ul><p>  小龙哥，不解释，同学们应该也做不到。</p><ul><li>最佳实践</li></ul><p>  这个是大家都可以做到，按照上面架构师的定义。在这条路上走得好，就能为任何公司组件技术团队，组织建设高质量的系统。</p><p>从上面的讨论中，可以看出，我们普通工程师的进化之路，就是不断打磨最佳实践方法论、落地细节。</p><h1 id="代码变坏的根源"><a href="#代码变坏的根源" class="headerlink" title="代码变坏的根源"></a>代码变坏的根源</h1><p>在讨论什么代码是好代码之前，我们先讨论什么是不好的。计算机是人造的学科，我们自己制造了很多问题，进而去思考解法。</p><h2 id="重复的代码"><a href="#重复的代码" class="headerlink" title="重复的代码"></a>重复的代码</h2><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// BatchGetQQTinyWithAdmin 获取QQ uin的tinyID, 需要主uin的tiny和登录态</span></span><br><span class="line"><span class="comment">// friendUins 可以是空列表, 只要admin uin的tiny</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BatchGetQQTinyWithAdmin</span><span class="params">(ctx context.Context, adminUin <span class="type">uint64</span>, friendUin []<span class="type">uint64</span>)</span></span> (</span><br><span class="line">adminTiny <span class="type">uint64</span>, sig []<span class="type">byte</span>, frdTiny <span class="keyword">map</span>[<span class="type">uint64</span>]<span class="type">uint64</span>, err <span class="type">error</span>) {</span><br><span class="line"><span class="keyword">var</span> friendAccountList []*basedef.AccountInfo</span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> friendUin {</span><br><span class="line">friendAccountList = <span class="built_in">append</span>(friendAccountList, &amp;basedef.AccountInfo{</span><br><span class="line">AccountType: proto.String(def.StrQQU),</span><br><span class="line">Userid:      proto.String(fmt.Sprint(v)),</span><br><span class="line">})</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">req := &amp;cmd0xb91.ReqBody{</span><br><span class="line">Appid:       proto.Uint32(model.DocAppID),</span><br><span class="line">CheckMethod: proto.String(CheckQQ),</span><br><span class="line">AdminAccount: &amp;basedef.AccountInfo{</span><br><span class="line">AccountType: proto.String(def.StrQQU),</span><br><span class="line">Userid:      proto.String(fmt.Sprint(adminUin)),</span><br><span class="line">},</span><br><span class="line">FriendAccountList: friendAccountList,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>因为最开始协议设计得不好，第一个使用接口的人，没有类似上面这个函数的代码，自己实现了一个嵌入逻辑代码的填写请求结构结构体的代码，一开始，挺好的。但当有第二个人，第三个人干了类似的事情，我们将无法再重构这个协议，必须做到麻烦的向前兼容。而且每个同学，都要理解一遍上面这个协议怎么填，理解有问题，就触发bug。或者，如果某个错误的理解，普遍存在，我们就得找到所有这些重复的片段，都修改一遍。</p><p>当你要读一个数据，发现两个地方有，不知道该选择哪个。当你要实现一个功能，发现两个rpc接口、两个函数能做到，你不知道选哪一个。你有面临过这样的’人生难题’么？其实怎么选并不重要了，你写的这个代码已经在走向shit的道路上迈出了坚实的一步。</p><p>但是，A little copying is better than a little dependency。这里提一嘴，不展开。</p><p>这里，我必须额外说一句。大家使用trpc。感觉自己被鼓励’每个服务搞一个git’。那，你这个服务里访问db的代码，rpc的代码，各种可以复用的代码，是用的大家都复用的git下的代码么？每次都重复写一遍，db字段细节改了，每个使用过db的server对应的git都改一遍？这个通用git已经写好的接口应该不知道哪些git下的代码因为自己不向前兼容的修改而永远放弃了向前不兼容的修改？</p><h2 id="早期有效的决策不再有效"><a href="#早期有效的决策不再有效" class="headerlink" title="早期有效的决策不再有效"></a>早期有效的决策不再有效</h2><p>很多时候，我们第一版代码写出来，是没有太大的问题的。比如，下面这个代码</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Update 增量更新</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *FilePrivilegeStore)</span></span> Update(key def.PrivilegeKey,</span><br><span class="line">clear, isMerge <span class="type">bool</span>, subtract []*access.AccessInfo, increment []*access.AccessInfo,</span><br><span class="line">policy *<span class="type">uint32</span>, adv *access.AdvPolicy, shareKey <span class="type">string</span>, importQQGroupID <span class="type">uint64</span>) <span class="type">error</span> {</span><br><span class="line"><span class="comment">// 获取之前的数据</span></span><br><span class="line">info, err := s.Get(key)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> {</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">incOnlyModify := update(info, &amp;key, clear, subtract, </span><br><span class="line">increment, policy, adv, shareKey, importQQGroupID)</span><br><span class="line">stat := statAndUpdateAccessInfo(info)</span><br><span class="line"><span class="keyword">if</span> !incOnlyModify {</span><br><span class="line"><span class="keyword">if</span> stat.groupNumber &gt; model.FilePrivilegeGroupMax {</span><br><span class="line"><span class="keyword">return</span> errors.Errorf(errors.PrivilegeGroupLimit, </span><br><span class="line"><span class="string">"group num %d larger than limit %d"</span>,</span><br><span class="line">stat.groupNumber, model.FilePrivilegeGroupMax)</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !isMerge {</span><br><span class="line"><span class="keyword">if</span> key.DomainID == <span class="type">uint64</span>(access.SPECIAL_FOLDER_DOMAIN_ID) &amp;&amp;</span><br><span class="line"><span class="built_in">len</span>(info.AccessInfos) &gt; model.FilePrivilegeMaxFolderNum {</span><br><span class="line"><span class="keyword">return</span> errors.Errorf(errors.PrivilegeFolderLimit, </span><br><span class="line"><span class="string">"folder owner num %d larger than limit %d"</span>,</span><br><span class="line"><span class="built_in">len</span>(info.AccessInfos), model.FilePrivilegeMaxFolderNum)</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(info.AccessInfos) &gt; model.FilePrivilegeMaxNum {</span><br><span class="line"><span class="keyword">return</span> errors.Errorf(errors.PrivilegeUserLimit, </span><br><span class="line"><span class="string">"file owner num %d larger than limit %d"</span>,</span><br><span class="line"><span class="built_in">len</span>(info.AccessInfos), model.FilePrivilegeMaxNum)</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">pbDataSt := infoToData(info, &amp;key)</span><br><span class="line"><span class="keyword">var</span> updateBuf []<span class="type">byte</span></span><br><span class="line"><span class="keyword">if</span> updateBuf, err = proto.Marshal(pbDataSt); err != <span class="literal">nil</span> {</span><br><span class="line"><span class="keyword">return</span> errors.Wrapf(err, errors.MarshalPBError,</span><br><span class="line"><span class="string">"FilePrivilegeStore.Update Marshal data error, key[%v]"</span>, key)</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> err = s.setCKV(generateKey(&amp;key), updateBuf); err != <span class="literal">nil</span> {</span><br><span class="line"><span class="keyword">return</span> errors.Wrapf(err, errors.Code(err),</span><br><span class="line"><span class="string">"FilePrivilegeStore.Update setCKV error, key[%v]"</span>, key)</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>现在看，这个代码挺好的，长度没超过80行，逻辑比价清晰。但是当isMerge这里判断逻辑，如果加入更多的逻辑，把局部行数撑到50行以上，这个函数，味道就坏了。出现两个问题：</p><p>1）函数内代码不在一个逻辑层次上，阅读代码，本来在阅读着顶层逻辑，突然就掉入了长达50行的isMerge的逻辑处理细节，还没看完，读者已经忘了前面的代码讲了什么，需要来回看，挑战自己大脑的cache尺寸。</p><p>2）代码有问题后，再新加代码的同学，是改还是不改前人写好的代码呢？要不要往里面填屎，堆屎山呢？出bug谁来背？这是一个灵魂拷问。</p><h2 id="过早的优化"><a href="#过早的优化" class="headerlink" title="过早的优化"></a>过早的优化</h2><p>这个大家听了很多了，这里不赘述。</p><h2 id="对合理性没有苛求"><a href="#对合理性没有苛求" class="headerlink" title="对合理性没有苛求"></a>对合理性没有苛求</h2><p>‘两种写法都ok，你随便挑一种吧’，’我这样也没什么吧’，这是我经常听到的话。</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Get 获取IP</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(i *IPGetter)</span></span> Get(cardName <span class="type">string</span>) <span class="type">string</span> {</span><br><span class="line">i.l.RLock()</span><br><span class="line">ip, found := i.m[cardName]</span><br><span class="line">i.l.RUnlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> found {</span><br><span class="line"><span class="keyword">return</span> ip</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">i.l.Lock()</span><br><span class="line"><span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">ip, err = getNetIP(cardName)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> {</span><br><span class="line">i.m[cardName] = ip</span><br><span class="line">}</span><br><span class="line">  </span><br><span class="line">  i.l.Unlock()</span><br><span class="line"><span class="keyword">return</span> ip</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>i.l.Unlock()可以放在当前的位置，也可以放在i.l.Lock()下面，做成defer。两种在最初构造的时候，好像都行。这个时候，很多同学态度就变得不坚决。实际上，这里必须是defer的。</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> i.l.Lock()</span><br><span class="line"><span class="keyword">defer</span> i.l.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">ip, err = getNetIP(cardName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> {</span><br><span class="line"><span class="keyword">return</span> <span class="string">"127.0.0.1"</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">i.m[cardName] = ip</span><br><span class="line"><span class="keyword">return</span> ip</span><br></pre></td></tr></tbody></table></figure><p>这样的修改，是极有可能发生的，它还是要变成defer，那，为什么不一开始就是defer，进入最合理的状态？不一开始就进入最合理的状态，在后续协作种，其他同学很可能犯错！</p><p>##总是面向对象/总喜欢封装</p><p>我是软件工程科班出身。学的第一门编程预言是c++。教材是<a href="https://book.douban.com/subject/1112255/">这本</a> 。当时自己读完教材，初入程序设计之门，对于里面讲的’封装’，惊为天人，多么美妙的设计啊，面向对象，多么智慧的设计啊。但是，这些年来，我看到了大牛’云风’对于’毕业生使用mysql api就喜欢搞个class封装再用’的嘲讽；看到了各种莫名其妙的class定义；体会到了经常要去看一个莫名其妙的继承树，必须要把整个继承树整体读明白才能确认一个细小的逻辑分支；多次体会到了我需要辛苦地压抑住自己的抵触情绪，去细度一个自作聪明的被封装的代码，确认我的bug。除了UI类场景，我认为少用继承、多用组合。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">_PKG_TYPE</span>&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CSuperAction</span> : <span class="keyword">public</span> CSuperActionBase {</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">typedef</span> _PKG_TYPE pkg_type;</span><br><span class="line">    <span class="keyword">typedef</span> CSuperAction&lt;pkg_type&gt; this_type;</span><br><span class="line">    ...</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这是sspp的代码。CSuperAction和CSuperActionBase，一会儿super，一会儿又base，Super和SuperBase是在怎样的两个抽象层次上，不通读代码，没人能读明白。我想确认任何细节，都要把多个层次的代码都通读了，有什么封装性可言？</p><p>好，你说是作者没有把class name取得好。那，问题是，你能取得好么？一个刚入职的T1.2的同学能把class name、class树设计得好么？即使是对简单的业务模型，也需要无数次’坏’的对象抽象实践，才能培养出一个具有合格的class抽象能力的同学，这对于大型却松散的团队协作，不是破坏性的？已经有了一套继承树，想要添加功能就只能在这个继承树里添加，以前的继承树不再适合新的需求，这个继承树上所有的class，以及使用它们的地方，你都去改？不，是个正常人都会放弃，开始堆屎山。</p><p>封装，就是我可以不关心实现。但是，做一个稳定的系统，每一层设计都可能出问题。abi，总有合适的用法和不合适的用法，真的存在我们能完全不关心封装的部分是怎么实现的？不，你不能。bug和性能问题，常常就出现在，你用了错误的用法去使用一个封装好的函数。即使是android、ios的api，golang、java现成的api，我们常常都要去探究实现，才能把api用好。那，我们是不是该一上来，就做一个透明性很强的函数，才更为合理？使用者想知道细节，进来吧，我的实现很易读，你看看就明白，使用时不会迷路！对于逻辑复杂的函数，我们还要强调函数内部工作方式’可以让读者在大脑里想象呈现完整过程’的可显性，让使用者轻松读懂，有把握，使用时，不迷路！</p><h2 id="根本没有设计"><a href="#根本没有设计" class="headerlink" title="根本没有设计"></a>根本没有设计</h2><p>这个最可怕，所有需求，上手就是一顿撸，’设计是什么东西？我一个文件5w行，一个函数5k行，干不完需求？’从第一行代码开始，就是无设计的，随意地踩着满地的泥坑，对于旁人的眼光没有感觉，一个人独舞，产出的代码，完成了需求，毁灭了接手自己代码的人本该用来啪啪啪的夜晚~ 这个就不举例了，每个同学应该都能在自己的项目类发现这种代码。</p><h1 id="必须形而上的思考"><a href="#必须形而上的思考" class="headerlink" title="必须形而上的思考"></a>必须形而上的思考</h1><p>常常，同学们听演讲，公开课，就喜欢听一些细枝末节的’干活’。这没有问题。但是，你干了几年活，学习了多少干货知识点？构建起自己的技术思考’面’，进入立体的’工程思维’，把技术细节和系统要满足的需求在思考上连接起来了么？当听一个需求的时候，你能思考到自己的code package该怎么组织，函数该怎么组织了么？我相信，在腾讯，大多数人没做到，不客气地说，即使是很多T4。</p><p>那，技术点要怎么和需求连接起来呢？答案很简单，你需要在时间里总结，总结出一些明确的原则、思维过程。思考怎么去总结，特别像是在思考哲学问题。从一些琐碎的细节中，由具体情况上升到一些原则、公理。同时，大家在接受原则时，不应该是接受和记住原则本身，而应该是结构原则，让这个原则在自己这里重新推理一遍，自己完全掌握这个原则的适用范围。</p><p>再进一步具体地说，对于工程最佳实践的形而上的思考过程，就是：</p><p>把工程实践中遇到的问题，从问题类型和解法类型，两个角度去归类，总结出一些有限适用的原则，就从点到了面。把诸多总结出的原则，组合应用到自己的项目代码中，就是把多个面结合起来构建了一套立体的最佳实践的方案。当你这套方案能适应30w+行代码的项目，超过30人的项目，你就架构师入门了！当你这个项目，是多端，多语言，代码量超过300w行，参与人数超过300人，代码质量依然很高，代码依然在高效地自我迭代，每天消除掉过时的代码，填充高质量的替换旧代码和新生的代码。恭喜你，你已经是一个很高级的架构师了！再进一步，你对某个业务模型有独到或者全面的理解，构建了一套行业第一的解决方案，结合刚才高质量实现的能力，实现了这么一个项目。没啥好说的，你已经是专家工程师了。级别再高，我就不了解了，不在这里讨论。</p><p>那么，我们要重头开始积累思考和总结？不，有一本书叫做&lt;unix编程艺术&gt;，我在不同的时期分别读了3遍，等一会，我讲一些里面提到的，我觉得在腾讯尤其值得拿出来说的原则。这些原则，正好就能作为code review时大家判定代码质量的准绳。但，在那之前，我得讲一下另外一个很重要的话题，模型设计。</p><h1 id="model设计"><a href="#model设计" class="headerlink" title="model设计"></a>model设计</h1><p>没读过oauth2.0 RFC，就去设计第三方授权登陆的人，终归还要再发明一个撇脚的oauth。</p><p>2012年我刚毕业，我和一个去了广州联通公司的华南理工毕业生聊天。当时他说他工作很不开心，因为工作里 不经常写代码，而且认为自己，有ACM竞赛金牌级的算法熟练度+对CPP代码的熟悉，写下一个个指针操作内存，什么程序写不出来，什么事情做不好。当时我觉得，挺有道理，编程工具在手，我什么事情做不了？</p><p>现在，我会告诉他，复杂如linux操作系统、Chromium引擎、windows office，你做不了。原因是，他根本没进入软件工程的工程世界。不是会搬砖就能修出港珠澳大桥。但是，这么回答并不好，举证用的论据离我们太遥远了。见微知著。我现在会回答，你做不了，简单如一个权限系统，你知道怎么做么？堆积一堆逻辑层次一维展开的ifelse？简单如一个共享文件管理，你知道怎么做么？堆积一堆逻辑层次一维展开的ifelse？你联通有上完台服务器，你要怎么写一个管理平台？堆积一堆逻辑层次一维展开的ifelse？</p><p>上来就是干，能实现上面提到的三个看似简单的需求？想一想，亚马逊、阿里云折腾了多少年，最后才找到了容器+Kubernetes的大杀器。这里，需要谷歌多少年在BORG系统上的实践，提出了优秀的服务编排领域模型。权限领域，有RBAC、DAC、MAC等等模型，到了业务，又会有细节的不同。如Domain Driven Design说的，没有良好的领域思考和模型抽象，逻辑复杂度就是n^2指数级的，你得写多少ifelse，得思考多少可能的if路径，来cover所有的不合符预期的情况。你必须要有Domain思考探索、model拆解/抽象/构建的能力。有人问过我，要怎么有效地获得这个能力？这个问题我没能回答，就像是在问我，怎么才能获得MIT博士的学术能力？我无法回答。唯一回答就是，进入某个领域，就是首先去看前人的思考，站在前人的肩膀上，再用上自己的通识能力，去进一步思考。至于怎么建立好的通识思考能力，可能得去常青藤读个书吧：）或者，就在工程实践中思考和锻炼自己的这个能力！</p><p>同时，基于model设计的代码，能更好地适应产品经理不断变更的需求。比如说，一个calendar(日历)应用，简单来想，不要太简单！以’userid_date’为key记录一个用户的每日安排不就完成了么？只往前走一步，设计了一个任务，上限分发给100w个人，创建这么一个任务，是往100w个人下面添加一条记录？你得改掉之前的设计，换db。再往前走一步，要拉出某个用户和某个人一起要参与的所有事务，是把两个人的所有任务来做join？好像还行。如果是和100个人一起参与的所有任务呢？100个人的任务来join？不现实了吧。好，你引入一个群组id，那么，你最开始的’userid_date’为key的设计，是不是又要修改和做数据迁移了？经常来一个需求，你就得把系统推翻重来，或者根本就只能拒绝用户的需求，这样的战斗力，还好意思叫自己工程师？你一开始就应该思考自己面对的业务领域，思考自己的日历应用可能的模型边界，把可能要做的能力都拿进来思考，构建一个model，设计一套通用的store层接口，基于通用接口的逻辑代码。当产品不断发展，就是不停往模型里填内容，而不是推翻重来。这，思考模型边界，构建模型细节，就是两个很重要的能力，也是绝大多数腾讯产品经理不具备的能力，你得具备，对整个团队都是极其有益的。你面对产品经理时，就听取他们出于对用户体验负责思考出的需求点，到你自己这里，用一个完整的模型去涵盖这些零碎的点。</p><p>model设计，是形而上思考中的一个方面，一个特别重要的方面。接下来，我们来抄袭抄袭unix操作系统构建的实践为我们提出的前人实践经验和’公理’总结。在自己的coding/code review中，站在巨人的肩膀上去思考。不重复地发现经典力学，而是往相对论挺进。</p><h1 id="UNIX设计哲学"><a href="#UNIX设计哲学" class="headerlink" title="UNIX设计哲学"></a>UNIX设计哲学</h1><p>不懂Unix的人注定最终还要重复发明一个撇脚的Unix。–Henry Spenncer, 1987.11</p><p>下面这一段话太经典，我必须要摘抄一遍(自《UNIX编程艺术》)：<br>“工程和设计的每个分支都有自己的技术文化。在大多数工程领域中，就一个专业人员的素养组成来说，有些不成文的行业素养具有与标准手册及教科书同等重要的地位(并且随着专业人员经验的日积月累，这些经验常常会比书本更重要)。资深工程师们在工作中会积累大量的隐性知识，他们用类似禅宗’教外别传’的方式，通过言传身教传授给后辈。<br>软件工程算是此规则的一个例外：技术变革如此之快，软件环境日新月异，软件技术文化暂如朝露。然而，例外之中也有例外。确有极少数软件技术被证明经久耐用，足以演进为强势的技术文化、有鲜明特色的艺术和世代相传的设计哲学。“</p><p>接下来，我用我的理解，讲解一下几个我们常常做不到的原则。</p><h2 id="Keep-It-Simple-Stuped"><a href="#Keep-It-Simple-Stuped" class="headerlink" title="Keep It Simple Stuped!"></a>Keep It Simple Stuped!</h2><p>KISS原则，大家应该是如雷贯耳了。但是，你真的在遵守？什么是Simple？简单？golang语言主要设计者之一的Rob Pike说’大道至简’，这个’简’和简单是一个意思么？</p><p>首先，简单不是面对一个问题，我们印入眼帘第一映像的解法为简单。我说一句，感受一下。”把一个事情做出来容易，把事情用最简单有效的方法做出来，是一个很难的事情。”比如，做一个三方授权，oauth2.0很简单，所有概念和细节都是紧凑、完备、易用的。你觉得要设计到oauth2.0这个效果很容易么？要做到简单，就要对自己处理的问题有全面的了解，然后需要不断积累思考，才能做到从各个角度和层级去认识这个问题，打磨出一个通俗、紧凑、完备的设计，就像ios的交互设计。简单不是容易做到的，需要大家在不断的时间和code review过程中去积累思考，pk中触发思考，交流中总结思考，才能做得愈发地好，接近’大道至简’。</p><p>两张经典的模型图，简单又全面，感受一下，没看懂，可以立即自行google学习一下：<br>RBAC:<br><img src="../../resource/pic/common_privilege.png" alt="avatar" style="zoom:50%;" title="rbac"><br>logging:<br><img src="../../resource/pic/logging.png" alt="avatar" style="zoom:50%;" title="logging"></p><h2 id="原则3-组合原则-设计时考虑拼接组合"><a href="#原则3-组合原则-设计时考虑拼接组合" class="headerlink" title="原则3 组合原则: 设计时考虑拼接组合"></a>原则3 组合原则: 设计时考虑拼接组合</h2><p>关于OOP，关于继承，我前面已经说过了。那我们怎么组织自己的模块？对，用组合的方式来达到。linux操作系统离我们这么近，它是怎么架构起来的？往小里说，我们一个串联一个业务请求的数据集合，如果使用BaseSession，XXXSession inherit BaseSession的设计，其实，这个继承树，很难适应层出不穷的变化。但是如果使用组合，就可以拆解出UserSignature等等各种可能需要的部件，在需要的时候组合使用，不断添加新的部件而没有对老的继承树的记忆这个心智负担。</p><p>使用组合，其实就是要让你明确清楚自己现在所拥有的是哪个部件。如果部件过于多，其实完成组合最终成品这个步骤，就会有较高的心智负担，每个部件展开来，琳琅满目，眼花缭乱。比如QT这个通用UI框架，看它的<a href="https://doc.qt.io/qt-5/classes.html">Class列表</a>，有1000多个。如果不用继承树把它组织起来，平铺展开，组合出一个页面，将会变得心智负担高到无法承受。OOP在’需要无数元素同时展现出来’这种复杂度极高的场景，有效的控制了复杂度 。’那么，古尔丹，代价是什么呢？’代价就是，一开始做出这个自上而下的设计，牵一发而动全身，每次调整都变得异常困难。实际项目中，各种职业级别不同的同学一起协作修改一个server的代码，就会出现，职级低的同学改哪里都改不对，根本没能力进行修改，高级别的同学能修改对，也不愿意大规模修改，整个项目变得愈发不合理。对整个继承树没有完全认识的同学都没有资格进行任何一个对继承树有调整的修改，协作变得寸步难行。代码的修改，都变成了依赖一个高级架构师高强度监控继承体系的变化，低级别同学们束手束脚的结果。组合，就很好的解决了这个问题，把问题不断细分，每个同学都可以很好地攻克自己需要攻克的点，实现一个package。产品逻辑代码，只需要去组合各个package，就能达到效果。</p><p>这是golang标准库里http request的定义，它就是Http请求所有特性集合出来的结果。其中通用/异变/多种实现的部分，通过duck interface抽象，比如Body io.ReadCloser。你想知道哪些细节，就从组合成request的部件入手，要修改，只需要修改对应部件。[这段代码后，对比.NET的HTTP基于OOP的抽象]</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A Request represents an HTTP request received by a server</span></span><br><span class="line"><span class="comment">// or to be sent by a client.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The field semantics differ slightly between client and server</span></span><br><span class="line"><span class="comment">// usage. In addition to the notes on the fields below, see the</span></span><br><span class="line"><span class="comment">// documentation for Request.Write and RoundTripper.</span></span><br><span class="line"><span class="keyword">type</span> Request <span class="keyword">struct</span> {</span><br><span class="line"><span class="comment">// Method specifies the HTTP method (GET, POST, PUT, etc.).</span></span><br><span class="line"><span class="comment">// For client requests, an empty string means GET.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Go's HTTP client does not support sending a request with</span></span><br><span class="line"><span class="comment">// the CONNECT method. See the documentation on Transport for</span></span><br><span class="line"><span class="comment">// details.</span></span><br><span class="line">Method <span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// URL specifies either the URI being requested (for server</span></span><br><span class="line"><span class="comment">// requests) or the URL to access (for client requests).</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For server requests, the URL is parsed from the URI</span></span><br><span class="line"><span class="comment">// supplied on the Request-Line as stored in RequestURI.  For</span></span><br><span class="line"><span class="comment">// most requests, fields other than Path and RawQuery will be</span></span><br><span class="line"><span class="comment">// empty. (See RFC 7230, Section 5.3)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For client requests, the URL's Host specifies the server to</span></span><br><span class="line"><span class="comment">// connect to, while the Request's Host field optionally</span></span><br><span class="line"><span class="comment">// specifies the Host header value to send in the HTTP</span></span><br><span class="line"><span class="comment">// request.</span></span><br><span class="line">URL *url.URL</span><br><span class="line"></span><br><span class="line"><span class="comment">// The protocol version for incoming server requests.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For client requests, these fields are ignored. The HTTP</span></span><br><span class="line"><span class="comment">// client code always uses either HTTP/1.1 or HTTP/2.</span></span><br><span class="line"><span class="comment">// See the docs on Transport for details.</span></span><br><span class="line">Proto      <span class="type">string</span> <span class="comment">// "HTTP/1.0"</span></span><br><span class="line">ProtoMajor <span class="type">int</span>    <span class="comment">// 1</span></span><br><span class="line">ProtoMinor <span class="type">int</span>    <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Header contains the request header fields either received</span></span><br><span class="line"><span class="comment">// by the server or to be sent by the client.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// If a server received a request with header lines,</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//Host: example.com</span></span><br><span class="line"><span class="comment">//accept-encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">//Accept-Language: en-us</span></span><br><span class="line"><span class="comment">//fOO: Bar</span></span><br><span class="line"><span class="comment">//foo: two</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// then</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//Header = map[string][]string{</span></span><br><span class="line"><span class="comment">//"Accept-Encoding": {"gzip, deflate"},</span></span><br><span class="line"><span class="comment">//"Accept-Language": {"en-us"},</span></span><br><span class="line"><span class="comment">//"Foo": {"Bar", "two"},</span></span><br><span class="line"><span class="comment">//}</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For incoming requests, the Host header is promoted to the</span></span><br><span class="line"><span class="comment">// Request.Host field and removed from the Header map.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// HTTP defines that header names are case-insensitive. The</span></span><br><span class="line"><span class="comment">// request parser implements this by using CanonicalHeaderKey,</span></span><br><span class="line"><span class="comment">// making the first character and any characters following a</span></span><br><span class="line"><span class="comment">// hyphen uppercase and the rest lowercase.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For client requests, certain headers such as Content-Length</span></span><br><span class="line"><span class="comment">// and Connection are automatically written when needed and</span></span><br><span class="line"><span class="comment">// values in Header may be ignored. See the documentation</span></span><br><span class="line"><span class="comment">// for the Request.Write method.</span></span><br><span class="line">Header Header</span><br><span class="line"></span><br><span class="line"><span class="comment">// Body is the request's body.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For client requests, a nil body means the request has no</span></span><br><span class="line"><span class="comment">// body, such as a GET request. The HTTP Client's Transport</span></span><br><span class="line"><span class="comment">// is responsible for calling the Close method.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For server requests, the Request Body is always non-nil</span></span><br><span class="line"><span class="comment">// but will return EOF immediately when no body is present.</span></span><br><span class="line"><span class="comment">// The Server will close the request body. The ServeHTTP</span></span><br><span class="line"><span class="comment">// Handler does not need to.</span></span><br><span class="line">Body io.ReadCloser</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetBody defines an optional func to return a new copy of</span></span><br><span class="line"><span class="comment">// Body. It is used for client requests when a redirect requires</span></span><br><span class="line"><span class="comment">// reading the body more than once. Use of GetBody still</span></span><br><span class="line"><span class="comment">// requires setting Body.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For server requests, it is unused.</span></span><br><span class="line">GetBody <span class="function"><span class="keyword">func</span><span class="params">()</span></span> (io.ReadCloser, <span class="type">error</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ContentLength records the length of the associated content.</span></span><br><span class="line"><span class="comment">// The value -1 indicates that the length is unknown.</span></span><br><span class="line"><span class="comment">// Values &gt;= 0 indicate that the given number of bytes may</span></span><br><span class="line"><span class="comment">// be read from Body.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For client requests, a value of 0 with a non-nil Body is</span></span><br><span class="line"><span class="comment">// also treated as unknown.</span></span><br><span class="line">ContentLength <span class="type">int64</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// TransferEncoding lists the transfer encodings from outermost to</span></span><br><span class="line"><span class="comment">// innermost. An empty list denotes the "identity" encoding.</span></span><br><span class="line"><span class="comment">// TransferEncoding can usually be ignored; chunked encoding is</span></span><br><span class="line"><span class="comment">// automatically added and removed as necessary when sending and</span></span><br><span class="line"><span class="comment">// receiving requests.</span></span><br><span class="line">TransferEncoding []<span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Close indicates whether to close the connection after</span></span><br><span class="line"><span class="comment">// replying to this request (for servers) or after sending this</span></span><br><span class="line"><span class="comment">// request and reading its response (for clients).</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For server requests, the HTTP server handles this automatically</span></span><br><span class="line"><span class="comment">// and this field is not needed by Handlers.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For client requests, setting this field prevents re-use of</span></span><br><span class="line"><span class="comment">// TCP connections between requests to the same hosts, as if</span></span><br><span class="line"><span class="comment">// Transport.DisableKeepAlives were set.</span></span><br><span class="line">Close <span class="type">bool</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// For server requests, Host specifies the host on which the</span></span><br><span class="line"><span class="comment">// URL is sought. For HTTP/1 (per RFC 7230, section 5.4), this</span></span><br><span class="line"><span class="comment">// is either the value of the "Host" header or the host name</span></span><br><span class="line"><span class="comment">// given in the URL itself. For HTTP/2, it is the value of the</span></span><br><span class="line"><span class="comment">// ":authority" pseudo-header field.</span></span><br><span class="line"><span class="comment">// It may be of the form "host:port". For international domain</span></span><br><span class="line"><span class="comment">// names, Host may be in Punycode or Unicode form. Use</span></span><br><span class="line"><span class="comment">// golang.org/x/net/idna to convert it to either format if</span></span><br><span class="line"><span class="comment">// needed.</span></span><br><span class="line"><span class="comment">// To prevent DNS rebinding attacks, server Handlers should</span></span><br><span class="line"><span class="comment">// validate that the Host header has a value for which the</span></span><br><span class="line"><span class="comment">// Handler considers itself authoritative. The included</span></span><br><span class="line"><span class="comment">// ServeMux supports patterns registered to particular host</span></span><br><span class="line"><span class="comment">// names and thus protects its registered Handlers.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For client requests, Host optionally overrides the Host</span></span><br><span class="line"><span class="comment">// header to send. If empty, the Request.Write method uses</span></span><br><span class="line"><span class="comment">// the value of URL.Host. Host may contain an international</span></span><br><span class="line"><span class="comment">// domain name.</span></span><br><span class="line">Host <span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Form contains the parsed form data, including both the URL</span></span><br><span class="line"><span class="comment">// field's query parameters and the PATCH, POST, or PUT form data.</span></span><br><span class="line"><span class="comment">// This field is only available after ParseForm is called.</span></span><br><span class="line"><span class="comment">// The HTTP client ignores Form and uses Body instead.</span></span><br><span class="line">Form url.Values</span><br><span class="line"></span><br><span class="line"><span class="comment">// PostForm contains the parsed form data from PATCH, POST</span></span><br><span class="line"><span class="comment">// or PUT body parameters.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This field is only available after ParseForm is called.</span></span><br><span class="line"><span class="comment">// The HTTP client ignores PostForm and uses Body instead.</span></span><br><span class="line">PostForm url.Values</span><br><span class="line"></span><br><span class="line"><span class="comment">// MultipartForm is the parsed multipart form, including file uploads.</span></span><br><span class="line"><span class="comment">// This field is only available after ParseMultipartForm is called.</span></span><br><span class="line"><span class="comment">// The HTTP client ignores MultipartForm and uses Body instead.</span></span><br><span class="line">MultipartForm *multipart.Form</span><br><span class="line"></span><br><span class="line"><span class="comment">// Trailer specifies additional headers that are sent after the request</span></span><br><span class="line"><span class="comment">// body.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For server requests, the Trailer map initially contains only the</span></span><br><span class="line"><span class="comment">// trailer keys, with nil values. (The client declares which trailers it</span></span><br><span class="line"><span class="comment">// will later send.)  While the handler is reading from Body, it must</span></span><br><span class="line"><span class="comment">// not reference Trailer. After reading from Body returns EOF, Trailer</span></span><br><span class="line"><span class="comment">// can be read again and will contain non-nil values, if they were sent</span></span><br><span class="line"><span class="comment">// by the client.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For client requests, Trailer must be initialized to a map containing</span></span><br><span class="line"><span class="comment">// the trailer keys to later send. The values may be nil or their final</span></span><br><span class="line"><span class="comment">// values. The ContentLength must be 0 or -1, to send a chunked request.</span></span><br><span class="line"><span class="comment">// After the HTTP request is sent the map values can be updated while</span></span><br><span class="line"><span class="comment">// the request body is read. Once the body returns EOF, the caller must</span></span><br><span class="line"><span class="comment">// not mutate Trailer.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Few HTTP clients, servers, or proxies support HTTP trailers.</span></span><br><span class="line">Trailer Header</span><br><span class="line"></span><br><span class="line"><span class="comment">// RemoteAddr allows HTTP servers and other software to record</span></span><br><span class="line"><span class="comment">// the network address that sent the request, usually for</span></span><br><span class="line"><span class="comment">// logging. This field is not filled in by ReadRequest and</span></span><br><span class="line"><span class="comment">// has no defined format. The HTTP server in this package</span></span><br><span class="line"><span class="comment">// sets RemoteAddr to an "IP:port" address before invoking a</span></span><br><span class="line"><span class="comment">// handler.</span></span><br><span class="line"><span class="comment">// This field is ignored by the HTTP client.</span></span><br><span class="line">RemoteAddr <span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// RequestURI is the unmodified request-target of the</span></span><br><span class="line"><span class="comment">// Request-Line (RFC 7230, Section 3.1.1) as sent by the client</span></span><br><span class="line"><span class="comment">// to a server. Usually the URL field should be used instead.</span></span><br><span class="line"><span class="comment">// It is an error to set this field in an HTTP client request.</span></span><br><span class="line">RequestURI <span class="type">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// TLS allows HTTP servers and other software to record</span></span><br><span class="line"><span class="comment">// information about the TLS connection on which the request</span></span><br><span class="line"><span class="comment">// was received. This field is not filled in by ReadRequest.</span></span><br><span class="line"><span class="comment">// The HTTP server in this package sets the field for</span></span><br><span class="line"><span class="comment">// TLS-enabled connections before invoking a handler;</span></span><br><span class="line"><span class="comment">// otherwise it leaves the field nil.</span></span><br><span class="line"><span class="comment">// This field is ignored by the HTTP client.</span></span><br><span class="line">TLS *tls.ConnectionState</span><br><span class="line"></span><br><span class="line"><span class="comment">// Cancel is an optional channel whose closure indicates that the client</span></span><br><span class="line"><span class="comment">// request should be regarded as canceled. Not all implementations of</span></span><br><span class="line"><span class="comment">// RoundTripper may support Cancel.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For server requests, this field is not applicable.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Deprecated: Set the Request's context with NewRequestWithContext</span></span><br><span class="line"><span class="comment">// instead. If a Request's Cancel field and context are both</span></span><br><span class="line"><span class="comment">// set, it is undefined whether Cancel is respected.</span></span><br><span class="line">Cancel &lt;-<span class="keyword">chan</span> <span class="keyword">struct</span>{}</span><br><span class="line"></span><br><span class="line"><span class="comment">// Response is the redirect response which caused this request</span></span><br><span class="line"><span class="comment">// to be created. This field is only populated during client</span></span><br><span class="line"><span class="comment">// redirects.</span></span><br><span class="line">Response *Response</span><br><span class="line"></span><br><span class="line"><span class="comment">// ctx is either the client or server context. It should only</span></span><br><span class="line"><span class="comment">// be modified via copying the whole Request using WithContext.</span></span><br><span class="line"><span class="comment">// It is unexported to prevent people from using Context wrong</span></span><br><span class="line"><span class="comment">// and mutating the contexts held by callers of the same request.</span></span><br><span class="line">ctx context.Context</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>看看<a href="https://docs.microsoft.com/en-us/dotnet/api/system.servicemodel.description.webhttpendpoint?view=netframework-4.8#definition">.NET里对于web服务的抽象</a>，仅仅看到末端，不去看完整个继承树的完整图景，我根本无法知道我关心的某个细节在什么位置。进而，我要往整个http服务体系里修改任何功能，都无法抛开对整体完整设计的理解和熟悉，还极容易没有知觉地破坏者整体的设计。</p><p>说到组合，还有一个关系很紧密的词，叫插件化。大家都用vscode用得很开心，它比visual studio成功在哪里？如果vscode通过添加一堆插件达到visual studio具备的能力，那么它将变成另一个和 visual studio差不多的东西，叫做vs studio吧。大家应该发现问题了，我们很多时候其实并不需要visual studio的大多数功能，而且希望灵活定制化一些比较小众的能力，用一些小众的插件。甚至，我们希望选择不同实现的同类型插件。这就是组合的力量，各种不同的组合，它简单，却又满足了各种需求，灵活多变，要实现一个插件，不需要事先掌握一个庞大的体系。体现在代码上，也是一样的道理。至少后端开发领域，组合，比OOP，’香’很多。</p><h2 id="原则6-吝啬原则-除非确无它法-不要编写庞大的程序"><a href="#原则6-吝啬原则-除非确无它法-不要编写庞大的程序" class="headerlink" title="原则6 吝啬原则: 除非确无它法, 不要编写庞大的程序"></a>原则6 吝啬原则: 除非确无它法, 不要编写庞大的程序</h2><p>“大”，是男性们的一致追求。”大”的系统，才能拿得出手去评T11、T12。于是，我们总倾向于把系(肚)统(子)搞大。一个T5的同学做一个服务，也总要搞”大”一点，才好意思拉leader们来评审自己的方案。leader们一看方案，很大，很好，很全面。但是，真的需要这么大么？</p><p>我又要说了”那么，古尔丹，代价是什么呢？”。代价是代码越多，越难维护，难调整。C语言之父Ken Thompson说”删除一行代码，给我带来的成就感要比添加一行要大”。我们对于代码，要吝啬。能把系统做小，就不要做大。腾讯不乏200w+行的客户端，很大，很”牛逼”。但是，同学们自问，现在还调整得动架构么。手Q的同学们，看看自己代码，曾经叹息过么。能小做的事情就小做，寻求通用化，通过duck interface(甚至多进程，用于隔离能力的多线程)把模块、能力隔离开，时刻想着删减代码量，才能保持代码的可维护性和面对未来的需求、架构，调整自身的活力。客户端代码，UI渲染模块可以复杂吊炸天，非UI部分应该追求最简单，能力接口化，可替换、重组合能力强。</p><p>落地到大家的代码，review时，就应该最关注核心struct定义，构建起一个完备的模型，核心interface，明确抽象model对外部的依赖，明确抽象model对外提供的能力。其他代码，就是要用最简单、平平无奇的代码实现模型内部细节。</p><h2 id="原则7-透明性原则-设计要可见，以便审查和调试"><a href="#原则7-透明性原则-设计要可见，以便审查和调试" class="headerlink" title="原则7 透明性原则: 设计要可见，以便审查和调试"></a>原则7 透明性原则: 设计要可见，以便审查和调试</h2><p>首先，定义一下，什么是透明性和可显性。</p><p>“如果没有阴暗的角落和隐藏的深度，软件系统就是透明的。透明性是一种被动的品质。如果实际上能预测到程序行为的全部或大部分情况，并能建立简单的心理模型，这个程序就是透明的，因为可以看透机器究竟在干什么。</p><p>如果软件系统所包含的功能是为了帮助人们对软件建立正确的’做什么、怎么做’的心理模型而设计，这个软件系统就是可显的。因此，举例来说，对用户而言，良好的文档有助于提高可显性；对程序员而言，良好的变量和函数名有助于提高可显性。可显性是一种主动品质。在软件种要达到这一点，仅仅做到不晦涩是不够的，还必须要尽力做到有帮助。”</p><p>我们要写好程序，减少bug，就要增强自己对代码的控制力。你始终做到，理解自己调用的函数/复用的代码大概是怎么实现的。不然，你可能就会在单线程状态机的server里调用有IO阻塞的函数，让自己的server吞吐量直接掉到底。进而，为了保证大家能对自己代码能做到有控制力，所有人写的函数，就必须具备很高的透明性。而不是写一些看了一阵看不明白的函数/代码，结果被迫使用你代码的人，直接放弃了对掌控力的追去，甚至放弃复用你的代码，另起炉灶，走线了’制造重复代码’的深渊。</p><p>透明性其实相对容易做到的，大家有意识地锻炼一两个月，就能做得很好。可显性就不容易了。有一个现象是，你写的每一个函数都不超过80行，每一行我都能看懂，但是你层层调用，很多函数调用，组合起来怎么就实现了某个功能，看两遍，还是看不懂。第三遍可能才能大概看懂。大概看懂了，但太复杂，很难在大脑里构建起你实现这个功能的整体流程。结果就是，阅读者根本做不到对你的代码有好的掌控力。</p><p>可显性的标准很简单，大家看一段代码，懂不懂，一下就明白了。但是，如何做好可显性？那就是要追求合理的函数分组，合理的函数上下级层次，同一层次的代码才会出现在同一个函数里，追求通俗易懂的函数分组分层方式，是通往可显性的道路。</p><p>当然，复杂如linux操作系统，office文档，问题本身就很复杂，拆解、分层、组合得再合理，都难简历心理模型。这个时候，就需要完备的文档了。完备的文档还需要出现在离代码最近的地方，让人’知道这里复杂的逻辑有文档’，而不是其实文档，但是阅读者不知道。再看看上面golang标准库里的http.Request，感受到它在可显性上的努力了么？对，就去学它。</p><h2 id="原则10-通俗原则-接口设计避免标新立异"><a href="#原则10-通俗原则-接口设计避免标新立异" class="headerlink" title="原则10 通俗原则: 接口设计避免标新立异"></a>原则10 通俗原则: 接口设计避免标新立异</h2><p>程序员啊，我们不仅喜欢”大”。我们还喜欢”吊”，我们就是要与众不同，才显得自己厉害。然而，标新立异，就提升了别人理解的难度。</p><p>一般，我们这么定义一个’点’，使用x表示横坐标，用y表示纵坐标：</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> {</span><br><span class="line">X <span class="type">float64</span></span><br><span class="line">Y <span class="type">float64</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>你就是要不同、精准：</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> {</span><br><span class="line">VerticalOrdinate   <span class="type">float64</span></span><br><span class="line">HorizontalOrdinate <span class="type">float64</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>很好，你用词很精准，一般人还驳斥不了你。但是，多数人读你的VerticalOrdinate就是没有读X理解来得快，来得容易懂、方便。你是在刻意制造协作成本。</p><p>上面的例子常见，但还不是最小立异原则最想说明的问题。想想一下，一个程序里，你把用’+’这个符号表示数组添加元素，而不是数学’加’，’result := 1+2’ –&gt; ‘result = []int{1, 2}’而不是’result=3’，那么，你这个标新立异，对程序的破坏性，简直无法想象。<br>“最小立异原则的另一面是避免表象想死而实际却略有不同。这会极端危险，因为表象相似往往导致人们产生错误的假定。所以最好让不同事物有明显区别，而不要看起来几乎一模一样。” – Henry Spencer。</p><p>你实现一个db.Add()函数却做着db.AddOrUpdate()的操作，有人使用了你的接口，错误地把数据覆盖了。小心以后有人扎小人来诅咒你。</p><h2 id="原则11-缄默原则-如果一个程序没什么好说的，就沉默"><a href="#原则11-缄默原则-如果一个程序没什么好说的，就沉默" class="headerlink" title="原则11 缄默原则: 如果一个程序没什么好说的，就沉默"></a>原则11 缄默原则: 如果一个程序没什么好说的，就沉默</h2><p>这个原则，应该是大家最经常破坏的原则之一。一段简短的代码里插入了各种’log(“cmd xxx enter”)’, ‘log(“req data “ + req.String())’，非常害怕自己信息打印得不够。害怕自己不知道程序执行成功了，总要最后’log(“success”)’。但是，我问一下大家，你们真的耐心看过别人写的代码打的一堆日志么？不是自己需要哪个，就在一堆日志里，再打印一个日志出来一个带有特殊标记的日志’log(“this_is_my_log_mark” + xxxxx)’？结果，第一个作者打印的日志，在代码交接给其他人或者在跟别人协作的时候，这个日志根本没有价值，反而提升了大家看日志的难度。</p><p>一个服务一跑起来，就疯狂打日志，请求处理正常也打一堆日志。滚滚而来的日志，把错误日志淹没在里面。错误日志失去了效果，简单地tail查看日志，眼花缭乱，看不出任何问题，这不就成了’为了捕获问题’而让自己’根本无法捕获问题’了么？</p><p>沉默是金。除了简单的stat log，如果你的程序’发声’了，那么它抛出的信息就一定要有效！打印一个log(‘process fail’)也是毫无价值，到底什么fail了？是哪个用户带着什么参数在哪个环节怎么fail了？如果发声，就要把必要信息给全。不然就是不发声，表示自己好好地work着呢。不发声就是最好的消息，现在我的work一切正常！</p><p>“设计良好的程序将用户的注意力视为有限的宝贵资源，只有在必要时才要求使用。”程序员自己的主力，也是宝贵的资源！只有有必要的时候，日志才跑来提醒程序员’我有问题，来看看’，而且，必须要给到足够的信息，让一把讲明白现在发生了什么。而不是程序员还需要很多辅助手段来搞明白到底发生了什么。</p><p>每当我发布程序 ，我抽查一个机器，看它的日志。发现只有每分钟外部接入、内部rpc的个数/延时分布日志的时候，我就心情很愉悦。我知道，这一分钟，它的陈功率又是100%，没任何问题！</p><h2 id="原则12-补救原则-出现异常时，马上退出并给出足够错误信息"><a href="#原则12-补救原则-出现异常时，马上退出并给出足够错误信息" class="headerlink" title="原则12 补救原则: 出现异常时，马上退出并给出足够错误信息"></a>原则12 补救原则: 出现异常时，马上退出并给出足够错误信息</h2><p>其实这个问题很简单，如果出现异常，异常并不会因为我们尝试掩盖它，它就不存在了。所以，程序错误和逻辑错误要严格区分对待。这是一个态度问题。</p><p>‘异常是互联网服务器的常态’。逻辑错误通过metrics统计，我们做好告警分析。对于程序错误 ，我们就必须要严格做到在问题最早出现的位置就把必要的信息搜集起来，高调地告知开发和维护者’我出现异常了，请立即修复我!’。可以是直接就没有被捕获的panic了。也可以在一个最上层的位置统一做好recover机制，但是在recover的时候一定要能获得准确异常位置的准确异常信息。不能有中间catch机制，catch之后丢失很多信息再往上传递。</p><p>很多Java开发的同学，不区分程序错误和逻辑错误，要么都很宽容，要么都很严格，对代码的可维护性是毁灭性的破坏。”我的程序没有程序错误，如果有，我当时就解决了。”只有这样，才能保持程序代码质量的相对稳定，在火苗出现时扑灭火灾是最好的扑灭火灾的方式。当然，更有效的方式是全面自动化测试的预防：）</p><h1 id="具体实践点"><a href="#具体实践点" class="headerlink" title="具体实践点"></a>具体实践点</h1><p>前面提了好多思考方向的问题。大的原则问题和方向。我这里，再来给大家简单列举几个细节执行点吧。毕竟，大家要上手，是从执行开始，然后才是总结思考，能把我的思考方式抄过去。下面是针对golang语言的，其他语言略有不同。以及，我一时也想不全我所执行的 所有细则，这就是我强调’原则’的重要性，原则是可枚举的。</p><ul><li><p>对于代码格式规范，100%严格执行，严重容不得一点沙。</p></li><li><p>文件绝不能超过800行，超过，一定要思考怎么拆文件。工程思维，就在于拆文件的时候积累。</p></li><li><p>函数对决不能超过80行，超过，一定要思考怎么拆函数，思考函数分组，层次。工程思维，就在于拆文件的时候积累。</p></li><li><p>代码嵌套层次不能超过4层，超过了就得改。多想想能不能early return。工程思维，就在于拆文件的时候积累。</p></li></ul><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> !needContinue {</span><br><span class="line">doA()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">doB()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> !needContinue {</span><br><span class="line">doA()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">doB()</span><br><span class="line"><span class="keyword">return</span></span><br></pre></td></tr></tbody></table></figure><p>下面这个就是early return，把两端代码从逻辑上解耦了。</p><ul><li>从目录、package、文件、struct、function一层层下来 ，信息一定不能出现冗余。比如file.FileProperty这种定义。只有每个’定语’只出现在一个位置，才为’做好逻辑、定义分组/分层’提供了可能性。</li><li>多用多级目录来组织代码所承载的信息，即使某一些中间目录只有一个子目录。</li><li>随着代码的扩展，老的代码违反了一些设计原则，应该立即原地局部重构，维持住代码质量不滑坡。比如:拆文件；拆函数；用Session来保存一个复杂的流程型函数的所有信息；重新调整目录结构。</li><li>基于上一点考虑，我们应该尽量让项目的代码有一定的组织、层次关系。我个人的当前实践是除了特别通用的代码，都放在一个git里。特别通用、修改少的代码，逐渐独立出git，作为子git连接到当前项目git，让goland的Refactor特性、各种Refactor工具能帮助我们快速、安全局部重构。</li><li>自己的项目代码，应该有一个内生的层级和逻辑关系。flat平铺展开是非常不利于代码复用的。怎么复用、怎么组织复用，肯定会变成’人生难题’。T4-T7的同学根本无力解决这种难题。</li><li>如果被review的代码虽然简短，但是你看了一眼却发现不咋懂，那就一定有问题。自己看不出来，就找高级别的同学交流。这是你和别review代码的同学成长的时刻。</li><li>日志要少打。要打日志就要把关键索引信息带上。必要的日志必须打。</li><li>有疑问就立即问，不要怕问错。让代码作者给出解释。不要怕问出极低问题。</li><li>不要说’建议’，提问题，就是刚，你pk不过我，就给改！</li><li>请积极使用trpc。总是要和老板站在一起！只有和老板达成的对于代码质量建设的共识，才能在团队里更好地做好代码质量建设。</li><li>消灭重复！消灭重复！消灭重复！</li></ul><h1 id="主干开发"><a href="#主干开发" class="headerlink" title="主干开发"></a>主干开发</h1><p>最后，我来为’主干开发’多说一句话。道理很简单，只有每次被review代码不到500行，reviewer才能快速地看完，而且几乎不会看漏。超过500行，reviewer就不能仔细看，只能大概浏览了。而且，让你调整500行代码内的逻辑比调整3000行甚至更多的代码，容易很多，降低不仅仅是6倍，而是一到两个数量级。有问题，在刚出现的时候就调整了，不会给被revew的人带来大的修改负担。</p><p>关于CI(continuous integration)，还有很多好的资料和书籍，大家应该及时去学习学习。</p><h1 id="《unix编程艺术》"><a href="#《unix编程艺术》" class="headerlink" title="《unix编程艺术》"></a>《unix编程艺术》</h1><p>建议大家把这本书找出来读一读。特别是，T7及更高级别的同学。你们已经积累了大量的代码实践，亟需对’工程性’做思考总结。很多工程方法论都过时了，这本书的内容，是例外中的例外。它所表达出的内容没有因为软件技术的不断更替而过时。</p><p>佛教禅宗讲’不立文字’(不立文字，教外别传，直指人心，见性成佛)，很多道理和感悟是不能用文字传达的，文字的表达能力，不能表达。大家尝尝因为”自己听说过、知道某个道理”而产生一种安心感，认为”我懂了这个道理”，但是自己却不能在实践中做到。知易行难，知道却做不到，在工程实践里，就和’不懂这个道理’没有任何区别了。</p><p>曾经，我面试过一个别的公司的总监，讲得好像一套一套，代码拉出来遛一遛，根本就没做到，仅仅会道听途说。他在工程实践上的探索前路可以说已经基本断绝了。我只能祝君能做好向上管理，走自己的纯管理道路吧。请不要再说自己对技术有追求，是个技术人了！</p><p>所以，大家不仅仅是看看我这篇文章，而是在实践中去不断践行和积累自己的’教外别传’吧。</p><p><a href="https://www.oreilly.com/library/view/software-engineering-at/9781492082781/">Software Engineering at Google</a>也是一本必读好书，可惜没找到中文翻译。(电子版放附件里了)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;作为公司代码委员会golang分会的理事，作为(还未任命)的技术leader，我review了很多代码，看了很多别人的review评论。发现</summary>
      
    
    
    
    
  </entry>
  
</feed>
